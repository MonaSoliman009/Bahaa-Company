{"version":3,"sources":["webpack:///src/app/admin/product/product.module.ts","webpack:///src/app/admin/product/list-products/list-products.component.html","webpack:///src/app/admin/product/list-products/list-products.component.css","webpack:///src/app/admin/product/product-routing.module.ts","webpack:///src/app/admin/product/search-for-product/search-for-product.component.html","webpack:///src/app/admin/product/search-for-product/search-for-product.component.css","webpack:///src/app/admin/product/list-products/list-products.component.ts","webpack:///src/app/admin/product/add-product/add-product.component.ts","webpack:///src/app/admin/product/search-for-product/search-for-product.component.ts","webpack:///src/app/admin/product/add-product/add-product.component.css","webpack:///src/app/admin/product/add-product/add-product.component.html"],"names":["ProductModule","declarations","imports","routes","path","component","ProductRoutingModule","forChild","exports","ListProductsComponent","_ProductService","_fb","allProducts","creteForm","getAllProduct","subscribe","res","products","error","msg","fire","then","location","reload","form","group","serialNumber","required","model","purchaseSerialNumber","submitted","valid","updateProduct","Serial","value","alertWithSuccess","alertWithFail","deleteProduct","alertWithSuccessDeleted","selector","template","AddProductComponent","_ModelsService","invoices","listOfModels","Array","listAllPurchaseNumber","displayRecomendedSerial","allSerialNumbers","listModels","listAllPurchaseInvoices","AllProduct","val","console","log","push","err","listPurshuseInvoice","purchaseNumber","Model","nativeElement","item","product","addNewProduct","localStorage","getItem","SearchForProductComponent","filter","toggle","getAllproducts","stringSerial","toString","serial","filterd","data","valueInput","getProductBrSerialnumber"],"mappings":"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","file":"product-product-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SearchForProductComponent } from './search-for-product/search-for-product.component';\nimport { FilterPipe } from '../pipes/filter.pipe';\nimport { ListProductsComponent } from './list-products/list-products.component';\nimport { DemoNgZorroAntdModule } from 'src/app/ng-zoro.module';\n\n\n@NgModule({\n  declarations: [\n    AddProductComponent,\n    SearchForProductComponent,\n    FilterPipe,\n    ListProductsComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    DemoNgZorroAntdModule\n  ]\n})\nexport class ProductModule { }\n","export default \"<nz-table #basicTable [nzData]=\\\"products\\\">\\n    <thead>\\n      <tr>\\n        <th>Serial Number</th>\\n        <th>Model</th>\\n        <th>Status</th>\\n       <th>Edit</th>\\n       <th>Delete</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let data of basicTable.data\\\">\\n        <td>{{ data.serialNumber}}</td>\\n        <td>{{ data.model }}</td>\\n        <td>{{ data.status }}</td>\\n        <td>   <a\\n          class=\\\"table-action-btn btn btn-sm bg-success-light\\\"\\n          data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\"\\n          (click)=\\\"Serial=data.serialNumber;model=data.model;purchaseSerialNumber=data.purchaseSerialNumber \\\"\\n        >\\n          Edit\\n        </a></td>\\n        <td>   <a\\n          class=\\\"table-action-btn btn btn-sm bg-danger-light\\\"\\n         \\n          (click)=\\\"deleteProduct(data.serialNumber)\\\"\\n\\n        >\\n          Delete\\n        </a></td>\\n   \\n      </tr>\\n    </tbody>\\n  </nz-table>\\n\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Update Model</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n       <!-- Row -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Custom Boostrap Validation -->\\n    <div class=\\\"card\\\">\\n  \\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm\\\">\\n            <form\\n                class=\\\"needs-validation\\\"\\n                [formGroup]=\\\"form\\\"\\n                autocomplete=\\\"off\\\"\\n              >\\n                <div class=\\\"form-row\\\">\\n                  <div class=\\\"col-md-8 mb-3\\\">\\n                    <label for=\\\"validationCustom01\\\">Serial Number</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"Serial Number\\\"\\n                      [ngModel]=\\\"Serial\\\"\\n                      name=\\\"serialNumber\\\"formControlName=\\\"serialNumber\\\"\\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.serialNumber.errors\\n                      }\\\" \\n                    />\\n                    \\n                    <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.serialNumber.errors\\\"\\n                  >\\n                   Field is required\\n                  </div>\\n                    <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                  </div>\\n                  <div class=\\\"col-md-8 mb-3\\\">\\n                    <label for=\\\"validationCustom01\\\">Model</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"Model\\\"\\n                      name=\\\"model\\\"\\n                      [ngModel]=\\\"model\\\"\\n                      formControlName=\\\"model\\\" \\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.model.errors\\n                      }\\\" \\n                 \\n                    />\\n               \\n                    <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.model.errors\\\"\\n                  >\\n                   Field is required\\n                  </div>\\n                    <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                  </div>\\n                 \\n                  <div class=\\\"col-md-8 mb-3\\\">\\n                    <label for=\\\"validationCustom01\\\">Purchase Invoice Serial Number</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"Purchase Invoice Serial Number\\\"\\n                      name=\\\"purchaseSerialNumber\\\"\\n                      [ngModel]=\\\"purchaseSerialNumber\\\"\\n                      formControlName=\\\"purchaseSerialNumber\\\" \\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.purchaseSerialNumber.errors\\n                      }\\\" \\n                    />\\n                    <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                  </div>\\n                 \\n                </div>\\n  \\n             \\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"EditProduct()\\\">Submit</button>\\n              </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- /Validation Tooltips -->\\n  </div>\\n</div>\\n<!-- /Row -->\\n\\n        </div>\\n        <!-- <div class=\\\"modal-footer\\\">\\n        </div> -->\\n      </div>\\n    </div>\\n  </div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0LXByb2R1Y3RzLmNvbXBvbmVudC5jc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddProductComponent } from './add-product/add-product.component';\nimport { ListProductsComponent } from './list-products/list-products.component';\nimport { SearchForProductComponent } from './search-for-product/search-for-product.component';\n\nconst routes: Routes = [\n\n  {\n    path: 'add',\n    component: AddProductComponent,\n  },\n  {\n    path: 'search',\n    component: SearchForProductComponent,\n  },\n  {\n    path: 'all-product',\n    \n    component:ListProductsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\">Test Phase Form</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Product Serial Number:</label>\\n          <input\\n            type=\\\"text\\\"\\n            class=\\\"form-control\\\"\\n            #Serial\\n            [(ngModel)]=\\\"search\\\"\\n            (keyup)=\\\"searchSerial(search)\\\"\\n          />\\n          <!-- {{allSerialNumbers | filterSerialnumber:search}} -->\\n          <div *ngFor=\\\"let post of allSerialNumbers | filter: search\\\">\\n            <a\\n              (click)=\\\"selectedSerial(post)\\\"\\n              *ngIf=\\\"!displayRecomendedSerial\\\"\\n              >{{ post }}</a\\n            >\\n          </div>\\n        </div>\\n\\n        <div class=\\\"text-right\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-primary\\\"\\n            (click)=\\\"searchForProduct()\\\"\\n          >\\n            Search\\n          </button>\\n        </div>\\n        <div class=\\\"pricing-box\\\" *ngIf=\\\"toggle\\\">\\n          <div class=\\\"col-md-12 col-lg-12 col-xl-12\\\">\\n            <div class=\\\"card\\\">\\n              <div class=\\\"card-body\\\">\\n                <ul class=\\\"pricing-options\\\">\\n                  <li style=\\\"font-size: 17px; font-weight: 400\\\">\\n                    Serial Number:<span> {{ product?.serialNumber }}</span>\\n                  </li>\\n                  <li style=\\\"font-size: 17px; font-weight: 400\\\">\\n                    Model:<span> {{ product?.model }}</span>\\n                  </li>\\n                  <li\\n                    style=\\\"font-size: 17px; font-weight: 400\\\"\\n                    *ngIf=\\\"product?.purchaseSerialNumber\\\"\\n                  >\\n                    it's Purchase invoice is:<span>\\n                      {{ product?.purchaseSerialNumber }}</span\\n                    >\\n                  </li>\\n                  <li\\n                  style=\\\"font-size: 17px; font-weight: 400\\\"\\n                >\\n                  Added At:<span>\\n                    {{ product?.addedAt |date:'medium' }}</span\\n                  >\\n                </li>\\n                  <li style=\\\"font-size: 17px; font-weight: 400\\\">\\n                    Status:<span class=\\\"badge bg-success inv-badge\\\">{{\\n                      product?.status\\n                    }}</span>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n     background-color: rgb(249 244 249);\\r\\n  }\\r\\n  \\r\\n   a:hover {\\r\\n    background-color: rgb(179, 177, 177);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC1mb3ItcHJvZHVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztLQUNiLGtDQUFrQztFQUNyQzs7R0FFQztJQUNDLG9DQUFvQztFQUN0QyIsImZpbGUiOiJzZWFyY2gtZm9yLXByb2R1Y3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0OSAyNDQgMjQ5KTtcclxuICB9XHJcbiAgXHJcbiAgIGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE3OSwgMTc3LCAxNzcpO1xyXG4gIH1cclxuICAiXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { NzTableLayout, NzTablePaginationPosition, NzTablePaginationType, NzTableSize } from 'ng-zorro-antd/table';import { ModelsService } from '../../services/models.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { ProductService } from '../../services/product.service';\n@Component({\n  selector: 'app-list-products',\n  templateUrl: './list-products.component.html',\n  styleUrls: ['./list-products.component.css']\n})\nexport class ListProductsComponent implements OnInit {\n  products:any;\n  constructor( public _ProductService: ProductService,  private _fb: FormBuilder) { }\n  form: FormGroup;\n  submitted: boolean;\n  Serial:any;\n  model:any;\n  purchaseSerialNumber: any;\n  ngOnInit(): void {\n    this.allProducts();\n    this.creteForm()\n  }\n allProducts(){\n   this._ProductService.getAllProduct().subscribe((res)=>{\n      this.products=res\n   },(error)=>{\n\n\n   })\n }\n alertWithFail(msg) {\n  Swal.fire('Failed', msg, 'error').then(\n    (res) => {\n      location.reload();\n    }\n  );\n};\nalertWithSuccess() {\n  Swal.fire('Saved', \"Saved Successfully\", 'success').then(\n    (res) => {\n      location.reload();\n    }\n  );\n}\nalertWithSuccessDeleted() {\n  Swal.fire('Deleted', \"Deleted Successfully\", 'success').then(\n    (res) => {\n      location.reload();\n    }\n  );\n}\ncreteForm() {\n  this.form = this._fb.group({\n    serialNumber: ['', [Validators.required]],\n    model: ['', [Validators.required]],\n    purchaseSerialNumber: [''],\n\n  });\n}\nEditProduct() {\n  this.submitted=true;\n  if (this.form.valid) {\n    this._ProductService.updateProduct(this.Serial,this.form.value).subscribe((res)=>{\n      this.alertWithSuccess();\n    },(error)=>{\n\n      this.alertWithFail(error.error);\n\n    });\n\n\n  }\n \n\n}\ndeleteProduct(serialNumber) {\n    \n\n  this._ProductService.deleteProduct(serialNumber).subscribe((res) => {\n    this.alertWithSuccessDeleted();\n  },(error)=>{\n    this.alertWithFail(\"Try Again Later\");\n\n  });\n}\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/product.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { ModelsService } from '../../services/models.service';\nimport { InvoicesService } from '../../services/invoices.service';\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css'],\n})\nexport class AddProductComponent implements OnInit {\n  listOfModels = new Array();\n  listAllPurchaseNumber = new Array();\n  constructor(\n    private _fb: FormBuilder,\n    public _ProductService: ProductService,\n    private _ModelsService: ModelsService,\n    private invoices: InvoicesService\n  ) {}\n  form: FormGroup;\n  submitted: boolean;\n  search: string;\n  Serial: any;\n  AllProduct: any;\n  // location = new Array();\n  displayRecomendedSerial = false;\n  allSerialNumbers = new Array();\n  @ViewChild('Model') Model: ElementRef;\n\n  ngOnInit(): void {\n    this.creteForm();\n    this.listModels();\n    this.listAllPurchaseInvoices();\n  }\n  listModels() {\n    this._ModelsService.listModels().subscribe(\n      (res) => {\n        this.AllProduct = res;\n        for (let val of this.AllProduct) {\n          // console.log(val.serialNumber);\n          console.log(val.model);\n\n          this.listOfModels.push(val.model);\n          // let stringSerial = val.model.toString();\n          // console.log(stringSerial);\n\n          // this.allSerialNumbers.push(val.model.toString());\n          // console.log('array of serial', this.allSerialNumbers);\n        }\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n  }\n  listAllPurchaseInvoices() {\n    this.invoices.listPurshuseInvoice().subscribe((res) => {\n      console.log(res, 'res all invoices');\n      for (let val of res) {\n        this.listAllPurchaseNumber.push(val.purchaseNumber);\n      }\n    });\n  }\n  creteForm() {\n    this.form = this._fb.group({\n      serialNumber: ['', [Validators.required]],\n      model: ['', [Validators.required]],\n      purchaseSerialNumber: ['', [Validators.required]],\n    });\n  }\n  selectedSerial(val) {\n    this.Model.nativeElement.value = val;\n    this.displayRecomendedSerial = true;\n  }\n  selectedItem(item) {\n    console.log(item);\n  }\n  data(val) {\n    return val;\n  }\n  // Getserial() {\n  //   const valueInput = this.Model.nativeElement.value;\n  //   this.Serial = valueInput;\n  //   return this.Serial;\n  // }\n  searchSerial(val) {\n    // console.log(data);\n\n    this.displayRecomendedSerial = false;\n    // let index = this.allSerialNumbers.indexOf(123);\n    // console.log(index);\n  }\n  alertWithFail(msg) {\n    Swal.fire('Failed', msg, 'error').then((res) => {\n      location.reload();\n    });\n  }\n  alertWithSuccess() {\n    Swal.fire('Saves', 'Saved Successfully', 'success').then((res) => {\n      location.reload();\n    });\n  }\n  saveProduct() {\n    this.submitted = true;\n    console.log(this.form.value);\n    if (this.form.valid) {\n      // this.form.value.model = this.Getserial();\n      // this.Getserial()\n      if (this.form.value.purchaseSerialNumber != '') {\n        console.log('hey');\n        var product: any = {\n          serialNumber: this.form.value.serialNumber,\n          model: this.form.value.model,\n          purchaseSerialNumber: this.form.value.purchaseSerialNumber,\n        };\n      } else {\n        product = {\n          serialNumber: this.form.value.serialNumber,\n          model: this.form.value.model,\n        };\n      }\n      console.log(product);\n\n      this._ProductService\n        .addNewProduct(localStorage.getItem('id'), product)\n        .subscribe(\n          (res) => {\n            console.log(res);\n            this.alertWithSuccess();\n          },\n          (err: any) => {\n            console.log(err);\n            this.alertWithFail(err.error);\n          }\n        );\n    }\n  }\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ProductService } from '../../services/product.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-search-for-product',\n  templateUrl: './search-for-product.component.html',\n  styleUrls: ['./search-for-product.component.css'],\n})\nexport class SearchForProductComponent implements OnInit {\n  public filter: any = '';\n  products: any;\n  product:any\n  search: string;\n  toggle:boolean = false;\n  displayRecomendedSerial = false;\n  allSerialNumbers = new Array();\n  Serial: any;\n  @ViewChild('Serial') serial: ElementRef;\n\n  constructor(private _ProductService: ProductService) {}\n\n  ngOnInit(): void {\n    this.getAllproducts();\n  }\n  getAllproducts() {\n    this._ProductService.getAllProduct().subscribe((res) => {\n      this.products = res;\n      for (let val of this.products) {\n        console.log(val.serialNumber);\n        let stringSerial = val.serialNumber.toString();\n        console.log(stringSerial);\n\n        this.allSerialNumbers.push(val.serialNumber.toString());\n      }\n    });\n  }\n  selectedSerial(val) {\n    this.serial.nativeElement.value = val;\n    this.displayRecomendedSerial = true;\n  }\n  data(val) {\n    return val;\n  }\n  searchSerial(val) {\n    this.displayRecomendedSerial = false;\n    \n\n    let filterd = this.allSerialNumbers.filter(this.data);\n\n  }\n  alertWithFail() {\n   \n    Swal.fire('Failed', 'Please Try Again', 'error').then((res) => {\n      location.reload();\n    });\n  }\n  searchForProduct(){\n    const valueInput = this.serial.nativeElement.value;\n    console.log('Serial numer', valueInput);\n    this._ProductService.getProductBrSerialnumber(valueInput).subscribe((res)=>{\n      console.log(res);\n      this.product=res;\n      this.toggle=true\n    },(error)=>{\nthis.alertWithFail()\n    })\n  }\n}\n","export default \"a {\\r\\n  color: black;\\r\\n  padding: 12px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n   background-color: rgb(249 244 249);\\r\\n}\\r\\n\\r\\n a:hover {\\r\\n  background-color: rgb(179, 177, 177);\\r\\n}\\r\\n\\r\\n .widthOfinput{\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZC1wcm9kdWN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixjQUFjO0dBQ2Isa0NBQWtDO0FBQ3JDOztDQUVDO0VBQ0Msb0NBQW9DO0FBQ3RDOztDQUNBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6ImFkZC1wcm9kdWN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJhIHtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0OSAyNDQgMjQ5KTtcclxufVxyXG5cclxuIGE6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigxNzksIDE3NywgMTc3KTtcclxufVxyXG4ud2lkdGhPZmlucHV0e1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59Il19 */\";","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12\\\">\\n    <!-- Custom Boostrap Validation -->\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h5 class=\\\"card-title\\\">Add New Product Form</h5>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm\\\">\\n            <form\\n              class=\\\"needs-validation\\\"\\n              [formGroup]=\\\"form\\\"\\n              autocomplete=\\\"off\\\"\\n            >\\n              <div class=\\\"form-row\\\">\\n                <div class=\\\"col-md-4 mb-3\\\">\\n                  <label for=\\\"validationCustom01\\\">Serial Number</label>\\n                  <!-- <input\\n                    type=\\\"text\\\"\\n                    class=\\\"form-control\\\"\\n                    id=\\\"validationCustom01\\\"\\n                    placeholder=\\\"Serial Number\\\"\\n                    name=\\\"serialNumber\\\"\\n                    formControlName=\\\"serialNumber\\\"\\n                    [ngClass]=\\\"{\\n                      'is-invalid':\\n                        submitted && form.controls.serialNumber.errors\\n                    }\\\"\\n                  /> -->\\n                  <input\\n                    nz-input\\n                    placeholder=\\\"Serial Number\\\"\\n                    id=\\\"validationCustom01\\\"\\n                    name=\\\"serialNumber\\\"\\n                    formControlName=\\\"serialNumber\\\"\\n                    [ngClass]=\\\"{\\n                      'is-invalid':\\n                        submitted && form.controls.serialNumber.errors\\n                    }\\\"\\n                  />\\n                  <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.serialNumber.errors\\\"\\n                  >\\n                    Field is required\\n                  </div>\\n                  <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                </div>\\n                <div class=\\\"col-md-4 mb-3\\\">\\n                  <label for=\\\"validationCustom01\\\">Model</label>\\n                  <nz-select\\n                    nzPlaceHolder=\\\"Select Model\\\"\\n                    formControlName=\\\"model\\\"\\n                    class=\\\"widthOfinput\\\"\\n                  >\\n                    <nz-option\\n                      *ngFor=\\\"let option of listOfModels\\\"\\n                      [nzLabel]=\\\"option\\\"\\n                      [nzValue]=\\\"option\\\"\\n                    ></nz-option>\\n                  </nz-select>\\n                  <!-- <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"Model\\\"\\n                      name=\\\"model\\\"\\n                      formControlName=\\\"model\\\"\\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.model.errors\\n                      }\\\"\\n                      #Model\\n                      [(ngModel)]=\\\"search\\\"\\n                      (keyup)=\\\"searchSerial(search)\\\"\\n                    />\\n                    <div *ngFor=\\\"let serial of allSerialNumbers | filter: search\\\">\\n                      <a\\n                        (click)=\\\"selectedSerial(serial)\\\"\\n                        *ngIf=\\\"!displayRecomendedSerial\\\"\\n                        >{{ serial }}</a\\n                      >\\n                    </div> -->\\n                  <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.model.errors\\\"\\n                  >\\n                    Field is required\\n                  </div>\\n                  <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                </div>\\n\\n                <div class=\\\"col-md-4 mb-3\\\">\\n                  <label for=\\\"validationCustom01\\\"\\n                    >Purchase Invoice Serial Number</label\\n                  >\\n\\n                  <nz-select\\n                    nzPlaceHolder=\\\"Purchase Invoice\\\"\\n                    formControlName=\\\"purchaseSerialNumber\\\"\\n                    class=\\\"widthOfinput\\\"\\n                  >\\n                    <nz-option\\n                      *ngFor=\\\"let option of listAllPurchaseNumber\\\"\\n                      [nzLabel]=\\\"option\\\"\\n                      [nzValue]=\\\"option\\\"\\n                    ></nz-option>\\n                  </nz-select>\\n                  <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"\\n                      submitted && form.controls.purchaseSerialNumber.errors\\n                    \\\"\\n                  >\\n                    Field is required\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <button\\n                class=\\\"btn btn-primary\\\"\\n                type=\\\"submit\\\"\\n                (click)=\\\"saveProduct()\\\"\\n              >\\n                Submit\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\";"]}