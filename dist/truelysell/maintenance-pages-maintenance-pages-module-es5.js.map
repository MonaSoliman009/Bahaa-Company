{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///src/app/admin/maintenance-pages/maintenance-outside/maintenance-outside.component.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///src/app/admin/maintenance-pages/maintenance-inside/maintenance-inside.component.css","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///src/app/admin/maintenance-pages/maintenance-outside-after/maintenance-outside-after.component.ts","webpack:///src/app/admin/maintenance-pages/maintenance-inside/maintenance-inside.component.html","webpack:///src/app/admin/maintenance-pages/maintenance-inside/maintenance-inside.component.ts","webpack:///src/app/admin/maintenance-pages/maintenance-outside-after/maintenance-outside-after.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///src/app/admin/maintenance-pages/maintenance-pages.module.ts","webpack:///src/app/admin/maintenance-pages/maintenance-outside/maintenance-outside.component.html","webpack:///src/app/admin/maintenance-pages/maintenance-pages-routing.module.ts","webpack:///src/app/admin/maintenance-pages/maintenance-outside/maintenance-outside.component.css","webpack:///src/app/admin/services/maintenance.service.ts","webpack:///src/app/admin/maintenance-pages/maintenance-outside-after/maintenance-outside-after.component.css","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteActivatedEvent","MatAutocompleteBase","_MatAutocompleteMixinBase","MatAutocompleteDefaultOptions","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","MatAutocomplete","_changeDetectorRef","_elementRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","value","length","split","reduce","classList","className","trim","_setVisibilityClasses","nativeElement","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","markForCheck","event","ɵfac","MatAutocomplete_Factory","t","ɵcmp","type","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","_t","optionGroups","viewQuery","MatAutocomplete_Query","template","first","hostAttrs","inputs","disableRipple","panelWidth","outputs","exportAs","features","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","ctorParameters","undefined","decorators","args","propDecorators","descendants","ngDevMode","selector","None","OnPush","host","providers","MatAutocompleteOrigin","elementRef","MatAutocompleteOrigin_Factory","ɵdir","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","asObservable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","tabOut","_getOutsideClickStream","detachments","activeItem","clickTarget","_isInsideShadowRoot","composedPath","target","formField","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","activeItemIndex","labelCount","_setScrollTop","newScrollPosition","_getScrollTop","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","altKey","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","abovePositions","positions","withPositions","connectedTo","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","MatAutocompleteTrigger_Factory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","autocompleteDisabled","toString","MatAutocompleteModule","MatAutocompleteModule_Factory","ɵmod","ɵinj","imports","ngJitMode","declarations","exports","MaintenanceOutsideComponent","_fb","_MaintenanceService","_ProductService","started","filter","displayRecomendedSerial","allSerialNumbers","Array","creteForm","createmaintenanceForm","getAllproducts","setTimeout","serial","e","code","which","onSubmit","maintenanceForm","group","shopName","required","recipient","deliveryMan","form","serialNumber","msg","fire","res","location","reload","valueInput","Serial","console","log","Getserial","controls","errors","submitted","valid","startMaitenanceOutsideStore","localStorage","getItem","message","alertWithFail","err","submitted2","submitMaintenanceOutsideStore","alertWithSuccess","getAllProduct","products","val","stringSerial","push","filterd","data","MatChipEvent","MatChipSelectionChange","isUserInput","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","_ngZone","platform","globalRippleOptions","animationMode","tabIndex","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","document","createElement","add","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","coercedValue","_dispatchSelectionChange","_value","textContent","selectable","basicChipAttrName","hasAttribute","tagName","toLowerCase","chip","_removeTriggerEvents","_markForCheck","removable","remove","toggleSelected","run","MatChip_Factory","MatChip_ContentQueries","MatChipRemove","avatar","trailingIcon","removeIcon","MatChip_HostBindings","MatChip_click_HostBindingHandler","_handleClick","MatChip_keydown_HostBindingHandler","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","color","String","_parentChip","nodeName","setAttribute","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MatChipsDefaultOptions","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","_required","ariaOrientation","valueChange","valueAccessor","multiple","_selectionModel","empty","_syncChipsState","_initializeSelection","writeValue","_chipInput","stateChanges","placeholder","_placeholder","focused","_hasFocusedChip","chips","withVerticalOrientation","withHorizontalOrientation","dir","_allowFocusEscape","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","_dropSubscriptions","inputElement","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","Math","min","input","_clearSelection","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","clear","fallbackValue","valueToEmit","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","indexOf","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","MatChipList_Factory","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","errorState","compareWith","errorStateMatcher","MatChipList_Template","MatChipInputEvent","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","separators","has","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","MatChipsModule_Factory","useValue","MatOption_mat_pseudo_checkbox_0_Template","_c2","VERSION","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","highContrastModeDetector","sanityChecks","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","doc","_getDocument","win","_isTestEnv","__karma__","jasmine","isEnabled","_checksAreEnabled","doctype","warn","theme","body","getComputedStyle","testElement","computedStyle","display","removeChild","version","full","MatCommonModule_Factory","CanDisable","mixinDisabled","base","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","oldState","parent","matcher","control","newState","isErrorState","HasInitialized","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","max","MAT_DATE_FORMATS","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","i","DEFAULT_DATE_NAMES","range","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parse","displayFormat","clone","setFullYear","Object","assign","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","test","obj","isNaN","NaN","n","slice","str","replace","d","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","ɵprov","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","ShowOnDirtyErrorStateMatcher","dirty","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","threshold","longpress","time","recognizeWith","recognizer","constructor","inheritances","item","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","prefix","setClass","isAdd","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","config","state","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","x","y","containerRect","_containerRect","animationConfig","animation","centered","left","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","fadeOut","wasActive","size","rippleEl","opacity","parentNode","_triggerElement","_registerEvents","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","touches","changedTouches","isVisible","terminateOnPointerUp","delay","eventTypes","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","configOrX","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","arguments","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","_active","_mostRecentViewValue","_stateChanges","_getHostElement","_emitSelectionChangeEvent","_origin","viewValue","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","MaintenanceOutsideAfterComponent","cost","repaired","submitMaintenanceOutsideStoreAfter","MaintenanceInsideComponent","newSection","newPart","creteMaintenanceInsideForm","onStart","MaintenanceData","newMaintenanceData","sparePartsData","newsparePartsData","removeAt","MaintenanceInsideForm","isAdded","Existence","array","get","isInside","product","sparePartNumber","startMaitenanceInsideStore","spareData","insideProduct","Maintenancedata","submitMaintenanceInsideStore","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r10","MatFormField_label_9_ng_content_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r14","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r13","updateOutlineGap","ctx_r4","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r6","MatFormField_div_13_Template","ctx_r7","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r16","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r8","_c4","_c5","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","labelOptions","_defaults","_platform","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_appearance","oldValue","_processHints","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","_connectionContainerRef","_validateControlChild","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","requestAnimationFrame","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","error","setDescribedByIds","labelEl","children","_isAttachedToDOM","startWidth","gapWidth","container","startEls","querySelectorAll","gapEls","containerStart","_getStartEnd","labelStart","labelWidth","child","offsetWidth","getRootNode","rootNode","documentElement","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","animations","MatFormFieldModule","MatFormFieldModule_Factory","MaintenancePagesModule","routes","path","component","MaintenancePagesRoutingModule","forChild","MaintenanceService","url","socket","productserialNumber","maintainererId","observer","comment"],"mappingsgBA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAQA,UAAMA,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,eAASC,sCAAT,CAAgDC,EAAhD,EAAoDC,GAApD,EAAyD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACnE,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAoB,CAApB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,mEAAkB,IAAlB,EAAwBA,MAAM,CAACC,EAA/B,EAAmC,SAAnC,EAA8CD,MAAM,CAACE,UAArD;AACH;AAAE;;AACH,UAAMC,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,UAAIC,4BAA4B,GAAG,CAAnC;AACA;AACA;AACA;;UACMC,4B;AACF;AACJ;AACA;AACA;AACI,4CAAYC,MAAZ,EAAoBC,MAApB,EAA4B;AAAA;;AACxB,aAAKD,MAAL,GAAcA,MAAd;AACA,aAAKC,MAAL,GAAcA,MAAd;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;;;AACA,eAASC,6BAAT,GAAyC,CAAG;;AAC5C,UAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;AACA;AACA;;;UACMC,mB;;;AAEN;;;AACA,UAAMC,yBAAyB,GAAG,kFAAmBD,mBAAnB,CAAlC;AACA;AACA;AACA;AACA;;;AACA,eAASE,6BAAT,GAAyC,CAAG;;AAC5C,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;;;AACA,UAAMC,gCAAgC,GAAG,IAAI,4DAAJ,CAAmB,kCAAnB,EAAuD;AAC5FC,kBAAU,EAAE,MADgF;AAE5FC,eAAO,EAAEC;AAFmF,OAAvD,CAAzC;AAIA;AACA;AACA;AACA;;AACA,eAASA,wCAAT,GAAoD;AAChD,eAAO;AAAEC,+BAAqB,EAAE;AAAzB,SAAP;AACH;;UACKC,e;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,iCAAYC,kBAAZ,EAAgCC,WAAhC,EAA6CC,QAA7C,EAAuD;AAAA;;AAAA;;AACnD;AACA,gBAAKF,kBAAL,GAA0BA,kBAA1B;AACA,gBAAKC,WAAL,GAAmBA,WAAnB;AACA,gBAAKE,oBAAL,GAA4B,kDAAaC,KAAzC;AACA;AACR;AACA;;AACQ,gBAAKC,SAAL,GAAiB,KAAjB;AACA,gBAAKC,OAAL,GAAe,KAAf;AACA;AACR;AACA;;AACQ,gBAAKC,WAAL,GAAmB,IAAnB;AACA;AACR;AACA;;AACQ,gBAAKC,cAAL,GAAsB,IAAI,0DAAJ,EAAtB;AACA;AACR;AACA;;AACQ,gBAAKC,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;AACR;AACA;;AACQ,gBAAKC,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;AACR;AACA;;AACQ,gBAAKC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA,gBAAK3B,UAAL,GAAkB,EAAlB;AACA;AACR;AACA;;AACQ,gBAAKD,EAAL,8BAA8BG,4BAA4B,EAA1D;AACA,gBAAK0B,sBAAL,GAA8B,CAAC,CAACV,QAAQ,CAACJ,qBAAzC;AAnCmD;AAoCtD;AACD;AACJ;AACA;AACA;;;;;eACI,eAAa;AAAE,mBAAO,KAAKQ,OAAL,IAAgB,KAAKD,SAA5B;AAAwC;AACvD;AACJ;AACA;AACA;AACA;;;;eACI,eAA4B;AAAE,mBAAO,KAAKO,sBAAZ;AAAqC;AACnE;AACJ;AACA;AACA;;eACI,aAA0BC,KAA1B,EAAiC;AAC7B,iBAAKD,sBAAL,GAA8B,oFAAsBC,KAAtB,CAA9B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;eACI,aAAcA,KAAd,EAAqB;AACjB,gBAAIA,KAAK,IAAIA,KAAK,CAACC,MAAnB,EAA2B;AACvB,mBAAK9B,UAAL,GAAkB6B,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiBC,MAAjB;AAAyB;AACvD;AACA;AACA;AACA;AACY,wBAACC,SAAD,EAAYC,SAAZ,EAA0B;AACtBD,yBAAS,CAACC,SAAS,CAACC,IAAV,EAAD,CAAT,GAA8B,IAA9B;AACA,uBAAOF,SAAP;AACH,eARiB;AAQb;AAAkB,gBARL,CAAlB;AASH,aAVD,MAWK;AACD,mBAAKjC,UAAL,GAAkB,EAAlB;AACH;;AACD,iBAAKoC,qBAAL,CAA2B,KAAKpC,UAAhC;;AACA,iBAAKiB,WAAL,CAAiBoB,aAAjB,CAA+BH,SAA/B,GAA2C,EAA3C;AACH;AACD;AACJ;AACA;;;;iBACI,8BAAqB;AAAA;;AACjB,iBAAKI,WAAL,GAAmB,IAAI,4EAAJ,CAA+B,KAAKC,OAApC,EAA6CC,QAA7C,EAAnB;AACA,iBAAKrB,oBAAL,GAA4B,KAAKmB,WAAL,CAAiBG,MAAjB,CAAwBC,SAAxB;AAAmC;AACvE;AACA;AACA;AACQ,sBAAAC,KAAK,EAAI;AACL,oBAAI,CAAChB,eAAL,CAAqBiB,IAArB,CAA0B;AAAExC,sBAAM,EAAE,MAAV;AAAgBC,sBAAM,EAAE,MAAI,CAACkC,OAAL,CAAaM,OAAb,GAAuBF,KAAvB,KAAiC;AAAzD,eAA1B;AACH,aAN2B,CAA5B,CAFiB,CASjB;;AACA,iBAAKG,cAAL;AACH;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAK3B,oBAAL,CAA0B4B,WAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,uBAAcC,SAAd,EAAyB;AACrB,gBAAI,KAAKC,KAAT,EAAgB;AACZ,mBAAKA,KAAL,CAAWZ,aAAX,CAAyBW,SAAzB,GAAqCA,SAArC;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,yBAAgB;AACZ,mBAAO,KAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWZ,aAAX,CAAyBW,SAAtC,GAAkD,CAAzD;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiB;AACb,iBAAK3B,SAAL,GAAiB,CAAC,CAAC,KAAKkB,OAAL,CAAaT,MAAhC;;AACA,iBAAKM,qBAAL,CAA2B,KAAKpC,UAAhC;;AACA,iBAAKgB,kBAAL,CAAwBkC,YAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,0BAAiB7C,MAAjB,EAAyB;AACrB;AACA,gBAAM8C,KAAK,GAAG,IAAIhD,4BAAJ,CAAiC,IAAjC,EAAuCE,MAAvC,CAAd;AACA,iBAAKmB,cAAL,CAAoBoB,IAApB,CAAyBO,KAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsBlB,SAAtB,EAAiC;AAC7BA,qBAAS,CAAC,0BAAD,CAAT,GAAwC,KAAKZ,SAA7C;AACAY,qBAAS,CAAC,yBAAD,CAAT,GAAuC,CAAC,KAAKZ,SAA7C;AACH;;;;QAxJyBb,yB;;AA0J9BO,qBAAe,CAACqC,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIvC,eAAV,EAA2B,gEAAyB,+DAAzB,CAA3B,EAA+E,gEAAyB,wDAAzB,CAA/E,EAA4H,gEAAyBL,gCAAzB,CAA5H,CAAP;AAAiM,OAA9P;;AACAK,qBAAe,CAACwC,IAAhB,GAAuB,gEAAyB;AAAEC,YAAI,EAAEzC,eAAR;AAAyB0C,iBAAS,EAAE,CAAC,CAAC,kBAAD,CAAD,CAApC;AAA4DC,sBAAc,EAAE,SAASC,8BAAT,CAAwC/D,EAAxC,EAA4CC,GAA5C,EAAiD+D,QAAjD,EAA2D;AAAE,cAAIhE,EAAE,GAAG,CAAT,EAAY;AAC7L,yEAAsBgE,QAAtB,EAAgC,gEAAhC,EAA2C,CAA3C;;AACA,yEAAsBA,QAAtB,EAAgC,kEAAhC,EAA6C,CAA7C;AACH;;AAAC,cAAIhE,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC0C,OAAJ,GAAcsB,EAAnE;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACiE,YAAJ,GAAmBD,EAAxE;AACH;AAAE,SAPyC;AAOvCE,iBAAS,EAAE,SAASC,qBAAT,CAA+BpE,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAClE,sEAAmB,yDAAnB,EAAgC,CAAhC;;AACA,sEAAmBF,GAAnB,EAAwB,CAAxB;AACH;;AAAC,cAAIE,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACoE,QAAJ,GAAeJ,EAAE,CAACK,KAAvE;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACoD,KAAJ,GAAYY,EAAE,CAACK,KAApE;AACH;AAAE,SAdyC;AAcvCC,iBAAS,EAAE,CAAC,CAAD,EAAI,kBAAJ,CAd4B;AAcHC,cAAM,EAAE;AAAEC,uBAAa,EAAE,eAAjB;AAAkC9C,qBAAW,EAAE,aAA/C;AAA8DT,+BAAqB,EAAE,uBAArF;AAA8GmB,mBAAS,EAAE,CAAC,OAAD,EAAU,WAAV,CAAzH;AAAiJqC,oBAAU,EAAE;AAA7J,SAdL;AAckLC,eAAO,EAAE;AAAE/C,wBAAc,EAAE,gBAAlB;AAAoCC,gBAAM,EAAE,QAA5C;AAAsDC,gBAAM,EAAE,QAA9D;AAAwEC,yBAAe,EAAE;AAAzF,SAd3L;AAcyS6C,gBAAQ,EAAE,CAAC,iBAAD,CAdnT;AAcwUC,gBAAQ,EAAE,CAAC,iEAA0B,CACjZ;AAAEC,iBAAO,EAAE,kFAAX;AAAwCC,qBAAW,EAAE5D;AAArD,SADiZ,CAA1B,CAAD,EAEtX,wEAFsX,CAdlV;AAgBA6D,0BAAkB,EAAE3E,GAhBpB;AAgByB4E,aAAK,EAAE,CAhBhC;AAgBmCC,YAAI,EAAE,CAhBzC;AAgB4CC,cAAM,EAAE,CAAC,CAAC,MAAD,EAAS,SAAT,EAAoB,CAApB,EAAuB,wBAAvB,EAAiD,CAAjD,EAAoD,IAApD,EAA0D,SAA1D,CAAD,EAAuE,CAAC,OAAD,EAAU,EAAV,CAAvE,CAhBpD;AAgB2Id,gBAAQ,EAAE,SAASe,wBAAT,CAAkCpF,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtP;;AACA,qEAAkB,CAAlB,EAAqBD,sCAArB,EAA6D,CAA7D,EAAgE,CAAhE,EAAmE,aAAnE;AACH;AAAE,SAnByC;AAmBvCsF,kBAAU,EAAE,CAAC,uDAAD,CAnB2B;AAmBTC,cAAM,EAAE,CAAC,8nBAAD,CAnBC;AAmBioBC,qBAAa,EAAE,CAnBhpB;AAmBmpBC,uBAAe,EAAE;AAnBpqB,OAAzB,CAAvB;AAoBA;;AACArE,qBAAe,CAACsE,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAE7B,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE;AAAR,SAFmC,EAGnC;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC9E,gCAAD;AAAtB,WAAD;AAA/B,SAHmC,CAAN;AAAA,OAAjC;;AAKAK,qBAAe,CAAC0E,cAAhB,GAAiC;AAC7BxB,gBAAQ,EAAE,CAAC;AAAET,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,yDAAD,EAAc;AAAE,sBAAQ;AAAV,WAAd;AAAzB,SAAD,CADmB;AAE7BvC,aAAK,EAAE,CAAC;AAAEO,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CAFsB;AAG7BjD,eAAO,EAAE,CAAC;AAAEiB,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAAC,gEAAD,EAAY;AAAEE,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAHoB;AAI7B5B,oBAAY,EAAE,CAAC;AAAEN,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAAC,kEAAD,EAAc;AAAEE,uBAAW,EAAE;AAAf,WAAd;AAA/B,SAAD,CAJe;AAK7BnE,mBAAW,EAAE,CAAC;AAAEiC,cAAI,EAAE;AAAR,SAAD,CALgB;AAM7B1C,6BAAqB,EAAE,CAAC;AAAE0C,cAAI,EAAE;AAAR,SAAD,CANM;AAO7Bc,kBAAU,EAAE,CAAC;AAAEd,cAAI,EAAE;AAAR,SAAD,CAPiB;AAQ7BhC,sBAAc,EAAE,CAAC;AAAEgC,cAAI,EAAE;AAAR,SAAD,CARa;AAS7B/B,cAAM,EAAE,CAAC;AAAE+B,cAAI,EAAE;AAAR,SAAD,CATqB;AAU7B9B,cAAM,EAAE,CAAC;AAAE8B,cAAI,EAAE;AAAR,SAAD,CAVqB;AAW7B7B,uBAAe,EAAE,CAAC;AAAE6B,cAAI,EAAE;AAAR,SAAD,CAXY;AAY7BvB,iBAAS,EAAE,CAAC;AAAEuB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,OAAD;AAArB,SAAD;AAZkB,OAAjC;;AAcA,OAAC,YAAY;AAAE,SAAC,OAAOG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB5E,eAAzB,EAA0C,CAAC;AACrGyC,cAAI,EAAE,uDAD+F;AAErGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,kBADX;AAEC3B,oBAAQ,EAAE,iLAFX;AAGCkB,yBAAa,EAAE,gEAAkBU,IAHlC;AAICT,2BAAe,EAAE,sEAAwBU,MAJ1C;AAKCtB,oBAAQ,EAAE,iBALX;AAMCJ,kBAAM,EAAE,CAAC,eAAD,CANT;AAOC2B,gBAAI,EAAE;AACF,uBAAS;AADP,aAPP;AAUCC,qBAAS,EAAE,CACP;AAAEtB,qBAAO,EAAE,kFAAX;AAAwCC,yBAAW,EAAE5D;AAArD,aADO,CAVZ;AAaCmE,kBAAM,EAAE,CAAC,8nBAAD;AAbT,WAAD;AAF+F,SAAD,CAA1C,EAiB1D,YAAY;AAAE,iBAAO,CAAC;AAAE1B,gBAAI,EAAE;AAAR,WAAD,EAAqC;AAAEA,gBAAI,EAAE;AAAR,WAArC,EAAkE;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC/G/B,kBAAI,EAAE,oDADyG;AAE/GgC,kBAAI,EAAE,CAAC9E,gCAAD;AAFyG,aAAD;AAA/B,WAAlE,CAAP;AAGF,SApB8C,EAoB5C;AAAEa,qBAAW,EAAE,CAAC;AAC1BiC,gBAAI,EAAE;AADoB,WAAD,CAAf;AAEVhC,wBAAc,EAAE,CAAC;AACjBgC,gBAAI,EAAE;AADW,WAAD,CAFN;AAIV/B,gBAAM,EAAE,CAAC;AACT+B,gBAAI,EAAE;AADG,WAAD,CAJE;AAMV9B,gBAAM,EAAE,CAAC;AACT8B,gBAAI,EAAE;AADG,WAAD,CANE;AAQV7B,yBAAe,EAAE,CAAC;AAClB6B,gBAAI,EAAE;AADY,WAAD,CARP;AAUV1C,+BAAqB,EAAE,CAAC;AACxB0C,gBAAI,EAAE;AADkB,WAAD,CAVb;AAYVvB,mBAAS,EAAE,CAAC;AACZuB,gBAAI,EAAE,mDADM;AAEZgC,gBAAI,EAAE,CAAC,OAAD;AAFM,WAAD,CAZD;AAeVvB,kBAAQ,EAAE,CAAC;AACXT,gBAAI,EAAE,uDADK;AAEXgC,gBAAI,EAAE,CAAC,yDAAD,EAAc;AAAE,wBAAQ;AAAV,aAAd;AAFK,WAAD,CAfA;AAkBVvC,eAAK,EAAE,CAAC;AACRO,gBAAI,EAAE,uDADE;AAERgC,gBAAI,EAAE,CAAC,OAAD;AAFE,WAAD,CAlBG;AAqBVjD,iBAAO,EAAE,CAAC;AACViB,gBAAI,EAAE,6DADI;AAEVgC,gBAAI,EAAE,CAAC,gEAAD,EAAY;AAAEE,yBAAW,EAAE;AAAf,aAAZ;AAFI,WAAD,CArBC;AAwBV5B,sBAAY,EAAE,CAAC;AACfN,gBAAI,EAAE,6DADS;AAEfgC,gBAAI,EAAE,CAAC,kEAAD,EAAc;AAAEE,yBAAW,EAAE;AAAf,aAAd;AAFS,WAAD,CAxBJ;AA2BVpB,oBAAU,EAAE,CAAC;AACbd,gBAAI,EAAE;AADO,WAAD;AA3BF,SApB4C,CAAnD;AAiDC,OAjDhB;;AAkDA,UAAI,KAAJ,EAAW,CA+FV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;UACMyC,qB;AACF;AACJ;AACA;AACI,qCAAYC,UAAZ,EAAwB;AAAA;;AACpB,aAAKA,UAAL,GAAkBA,UAAlB;AACH,O;;AAELD,2BAAqB,CAAC7C,IAAtB,GAA6B,SAAS+C,6BAAT,CAAuC7C,CAAvC,EAA0C;AAAE,eAAO,KAAKA,CAAC,IAAI2C,qBAAV,EAAiC,gEAAyB,wDAAzB,CAAjC,CAAP;AAAuF,OAAhK;;AACAA,2BAAqB,CAACG,IAAtB,GAA6B,gEAAyB;AAAE5C,YAAI,EAAEyC,qBAAR;AAA+BxC,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,uBAAL,EAA8B,EAA9B,CAAD,CAA1C;AAA+Ee,gBAAQ,EAAE,CAAC,uBAAD;AAAzF,OAAzB,CAA7B;AACA;;AACAyB,2BAAqB,CAACZ,cAAtB,GAAuC;AAAA,eAAM,CACzC;AAAE7B,cAAI,EAAE;AAAR,SADyC,CAAN;AAAA,OAAvC;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBM,qBAAzB,EAAgD,CAAC;AAC3GzC,cAAI,EAAE,uDADqG;AAE3GgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,yBADX;AAECpB,oBAAQ,EAAE;AAFX,WAAD;AAFqG,SAAD,CAAhD,EAM1D,YAAY;AAAE,iBAAO,CAAC;AAAEhB,gBAAI,EAAE;AAAR,WAAD,CAAP;AAAuC,SANK,EAMH,IANG,CAAnD;AAMwD,OANvE;;AAOA,UAAI,KAAJ,EAAW,CAMV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,UAAM6C,0BAA0B,GAAG,EAAnC;AACA;AACA;AACA;AACA;;AACA,UAAMC,yBAAyB,GAAG,GAAlC;AACA;AACA;AACA;AACA;;AACA,UAAMC,gCAAgC,GAAG,IAAI,4DAAJ,CAAmB,kCAAnB,CAAzC;AACA;AACA;AACA;AACA;AACA;;AACA,eAASC,wCAAT,CAAkDC,OAAlD,EAA2D;AACvD;AAAQ;AACZ;AACA;AACI;AAAA,mBAAMA,OAAO,CAACC,gBAAR,CAAyBC,UAAzB,EAAN;AAAA;AAHA;AAIH;AACD;AACA;AACA;AACA;;;AACA,UAAMC,iDAAiD,GAAG;AACtDlC,eAAO,EAAE6B,gCAD6C;AAEtDM,YAAI,EAAE,CAAC,4DAAD,CAFgD;AAGtDC,kBAAU,EAAEN;AAH0C,OAA1D;AAKA;AACA;AACA;AACA;AACA;;AACA,UAAMO,+BAA+B,GAAG;AACpCrC,eAAO,EAAE,iEAD2B;AAEpCC,mBAAW,EAAE;AAAY;AAC7B;AACA;AACI;AAAA,iBAAMqC,sBAAN;AAAA,SAHa,CAFuB;AAMpCC,aAAK,EAAE;AAN6B,OAAxC;AAQA;AACA;AACA;AACA;AACA;;AACA,eAASC,mCAAT,GAA+C;AAC3C,eAAOC,KAAK,CAAC,qEACT,4EADS,GAET,kEAFQ,CAAZ;AAGH;;UACKH,sB;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,wCAAYI,QAAZ,EAAsBC,QAAtB,EAAgCC,iBAAhC,EAAmDC,KAAnD,EAA0DvG,kBAA1D,EAA8EwG,cAA9E,EAA8FC,IAA9F,EAAoGC,UAApG,EAAgHC,SAAhH,EAA2HC,cAA3H,EAA2I;AAAA;;AAAA;;AACvI,eAAKR,QAAL,GAAgBA,QAAhB;AACA,eAAKC,QAAL,GAAgBA,QAAhB;AACA,eAAKC,iBAAL,GAAyBA,iBAAzB;AACA,eAAKC,KAAL,GAAaA,KAAb;AACA,eAAKvG,kBAAL,GAA0BA,kBAA1B;AACA,eAAKyG,IAAL,GAAYA,IAAZ;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,SAAL,GAAiBA,SAAjB;AACA,eAAKC,cAAL,GAAsBA,cAAtB;AACA,eAAKC,mBAAL,GAA2B,KAA3B;AACA,eAAKC,qBAAL,GAA6B,KAA7B;AACA;AACR;AACA;;AACQ,eAAKC,sBAAL,GAA8B,KAA9B;AACA;AACR;AACA;;AACQ,eAAKC,qBAAL,GAA6B,kDAAa5G,KAA1C;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAK6G,mBAAL,GAA2B,IAA3B;AACA;AACR;AACA;;AACQ,eAAKC,oBAAL,GAA4B,IAAI,4CAAJ,EAA5B;AACA;AACR;AACA;AACA;;AACQ,eAAKC,kBAAL;AAA2B;AACnC;AACA;AACQ,sBAAM;AACF;AACA;AACA;AACA,kBAAI,CAACF,mBAAL,GACI,MAAI,CAACN,SAAL,CAAeS,aAAf,KAAiC,MAAI,CAAChB,QAAL,CAAc/E,aAA/C,IAAgE,MAAI,CAACgG,SADzE;AAEH,WATD;AAUA;AACR;AACA;;;AACQ,eAAKC,SAAL;AAAkB;AAC1B;AACA;AACQ,sBAAM,CAAG,CAHT;AAIA;AACR;AACA;;;AACQ,eAAKC,UAAL;AAAmB;AAC3B;AACA;AACQ,sBAAM,CAAG,CAHT;AAIA;AACR;AACA;AACA;AACA;AACA;AACA;;;AACQ,eAAKC,QAAL,GAAgB,MAAhB;AACA;AACR;AACA;AACA;;AACQ,eAAKC,qBAAL,GAA6B,KAA7B;AACA,eAAKC,gBAAL,GAAwB,KAAxB;AACA;AACR;AACA;;AACQ,eAAKC,gBAAL;AAAyB;AAAkB;AAAO;AAC1D;AACA;AACQ,sBAAM;AACF,gBAAI,MAAI,CAACC,YAAL,IAAqB,MAAI,CAACA,YAAL,CAAkBrG,OAA3C,EAAoD;AAChD,qBAAO,oFAAS,MAAI,CAACqG,YAAL,CAAkBrG,OAAlB,CAA0BsG,GAA1B;AAA+B;AAC/D;AACA;AACA;AACgB,wBAAAxI,MAAM;AAAA,uBAAIA,MAAM,CAACyI,iBAAX;AAAA,eAJU,CAAT,EAAP;AAKH,aAPC,CAQF;AACA;;;AACA,mBAAO,MAAI,CAACvB,KAAL,CAAWwB,QAAX,CACFC,YADE,GAEFC,IAFE,CAEG,6DAAK,CAAL,CAFH,EAEY;AAAW;AAC1C;AACA;AACY;AAAA,qBAAM,MAAI,CAACN,gBAAX;AAAA,aAHmB,CAFZ,CAAP;AAMH,WAnB0C,CAA3C;AAoBA,eAAKO,eAAL,GAAuB1B,cAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;eACI,eAA2B;AAAE,mBAAO,KAAKM,qBAAZ;AAAoC;AACjE;AACJ;AACA;AACA;;eACI,aAAyBjG,KAAzB,EAAgC;AAC5B,iBAAKiG,qBAAL,GAA6B,oFAAsBjG,KAAtB,CAA7B;AACH;AACD;AACJ;AACA;;;;iBACI,2BAAkB;AAAA;;AACd;AACA,gBAAMsH,MAAM,GAAG,KAAKC,UAAL,EAAf;;AACA,gBAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,mBAAK5B,KAAL,CAAW8B,iBAAX;AAA8B;AAC1C;AACA;AACY;AAAA,uBAAMF,MAAM,CAACG,gBAAP,CAAwB,MAAxB,EAAgC,MAAI,CAACnB,kBAArC,CAAN;AAAA,eAHA;AAIH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,qBAAYoB,OAAZ,EAAqB;AACjB,gBAAIA,OAAO,CAAC,UAAD,CAAP,IAAuB,KAAKC,iBAAhC,EAAmD;AAC/C,mBAAKC,qBAAL,CAA2B,KAAKD,iBAAhC;;AACA,kBAAI,KAAKnB,SAAT,EAAoB;AACf;AAAkB,qBAAKqB,WAAxB,CAAsCC,cAAtC;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV;AACA,gBAAMR,MAAM,GAAG,KAAKC,UAAL,EAAf;;AACA,gBAAI,OAAOD,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,oBAAM,CAACS,mBAAP,CAA2B,MAA3B,EAAmC,KAAKzB,kBAAxC;AACH;;AACD,iBAAKH,qBAAL,CAA2BjF,WAA3B;;AACA,iBAAK8E,mBAAL,GAA2B,IAA3B;;AACA,iBAAKgC,aAAL;;AACA,iBAAK3B,oBAAL,CAA0B4B,QAA1B;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAgB;AACZ,mBAAO,KAAKpB,gBAAL,IAAyB,KAAKE,YAAL,CAAkBvH,SAAlD;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,qBAAY;AACR,iBAAK0I,cAAL;;AACA,iBAAKC,WAAL;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAa;AACT,iBAAKC,WAAL;;AACA,gBAAI,CAAC,KAAKvB,gBAAV,EAA4B;AACxB;AACH;;AACD,gBAAI,KAAKL,SAAT,EAAoB;AAChB;AACA,mBAAKO,YAAL,CAAkBlH,MAAlB,CAAyBkB,IAAzB;AACH;;AACD,iBAAKgG,YAAL,CAAkBtH,OAAlB,GAA4B,KAAKoH,gBAAL,GAAwB,KAApD;;AACA,gBAAI,KAAKgB,WAAL,IAAoB,KAAKA,WAAL,CAAiBQ,WAAjB,EAAxB,EAAwD;AACpD,mBAAKR,WAAL,CAAiBS,MAAjB;;AACA,mBAAKC,2BAAL,CAAiCrH,WAAjC;AACH,aAbQ,CAcT;AACA;;;AACA,gBAAI,CAAC,KAAK8E,mBAAV,EAA+B;AAC3B;AACA;AACA;AACA;AACA,mBAAK7G,kBAAL,CAAwBqJ,aAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,0BAAiB;AACb,gBAAI,KAAK3B,gBAAT,EAA2B;AACtB;AAAkB,mBAAKgB,WAAxB,CAAsCC,cAAtC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAA0B;AAAA;;AACtB,mBAAO,mDAAM,KAAKhB,gBAAX,EAA6B,KAAKC,YAAL,CAAkBtG,WAAlB,CAA8BgI,MAA9B,CAAqCrB,IAArC,CAA0C;AAAQ;AAC9F;AACA;AACQ;AAAA,qBAAM,MAAI,CAACP,gBAAX;AAAA,aAH8E,CAA1C,CAA7B,EAGyB,KAAKR,oBAH9B,EAGoD,KAAKqC,sBAAL,EAHpD,EAGmF,KAAKb,WAAL,GACtF,KAAKA,WAAL,CAAiBc,WAAjB,GAA+BvB,IAA/B,CAAoC;AAAQ;AACxD;AACA;AACY;AAAA,qBAAM,MAAI,CAACP,gBAAX;AAAA,aAHoC,CAApC,CADsF,GAKtF,iDARG,EAQGO,IARH,EASP;AACA;AAAK;AACb;AACA;AACA;AACQ,sBAAA9F,KAAK;AAAA,qBAAIA,KAAK,YAAY,+EAAjB,GAA4CA,KAA5C,GAAoD,IAAxD;AAAA,aAJL,CAVO,CAAP;AAeH;AACD;AACJ;AACA;AACA;;;;eACI,eAAmB;AACf,gBAAI,KAAKyF,YAAL,IAAqB,KAAKA,YAAL,CAAkBtG,WAA3C,EAAwD;AACpD,qBAAO,KAAKsG,YAAL,CAAkBtG,WAAlB,CAA8BmI,UAArC;AACH;;AACD,mBAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kCAAyB;AAAA;;AACrB,mBAAO;AAAO;AAAkB,mEAAU,KAAK9C,SAAf,EAA0B,OAA1B,CAAzB;AAAgE;AAAkB,mEAAU,KAAKA,SAAf,EAA0B,UAA1B,CAAlF,EACFsB,IADE,CACG;AAAQ;AAC1B;AACA;AACA;AACQ,sBAAA9F,KAAK,EAAI;AACL;AACA;;AACA;AACA,kBAAMuH,WAAW;AAAI;AAAmB,oBAAI,CAACC,mBAAL,IAA4BxH,KAAK,CAACyH,YAAlC,GAAiDzH,KAAK,CAACyH,YAAN,GAAqB,CAArB,CAAjD,GACpCzH,KAAK,CAAC0H,MADV;AAEA;;AACA,kBAAMC,SAAS,GAAG,MAAI,CAACpD,UAAL,GAAkB,MAAI,CAACA,UAAL,CAAgBzG,WAAhB,CAA4BoB,aAA9C,GAA8D,IAAhF;AACA,qBAAO,MAAI,CAACqG,gBAAL,IAAyBgC,WAAW,KAAK,MAAI,CAACtD,QAAL,CAAc/E,aAAvD,KACF,CAACyI,SAAD,IAAc,CAACA,SAAS,CAACC,QAAV,CAAmBL,WAAnB,CADb,KAEF,CAAC,CAAC,MAAI,CAAChB,WAAP,IAAsB,CAAC,MAAI,CAACA,WAAL,CAAiBsB,cAAjB,CAAgCD,QAAhC,CAAyCL,WAAzC,CAF5B;AAGH,aAfS,CADH,CAAP;AAiBH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,oBAAW7I,KAAX,EAAkB;AAAA;;AACdoJ,mBAAO,CAACC,OAAR,CAAgB,IAAhB,EAAsBC,IAAtB;AAA4B;AACpC;AACA;AACQ;AAAA,qBAAM,MAAI,CAACC,gBAAL,CAAsBvJ,KAAtB,CAAN;AAAA,aAHA;AAIH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,0BAAiBwJ,EAAjB,EAAqB;AACjB,iBAAK/C,SAAL,GAAiB+C,EAAjB;AACH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,2BAAkBA,EAAlB,EAAsB;AAClB,iBAAK9C,UAAL,GAAkB8C,EAAlB;AACH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,0BAAiBC,UAAjB,EAA6B;AACzB,iBAAKlE,QAAL,CAAc/E,aAAd,CAA4BkJ,QAA5B,GAAuCD,UAAvC;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,wBAAenI,KAAf,EAAsB;AAClB;AACA,gBAAMqI,OAAO,GAAGrI,KAAK,CAACqI,OAAtB,CAFkB,CAGlB;AACA;AACA;AACA;;AACA,gBAAIA,OAAO,KAAK,4DAAhB,EAAwB;AACpBrI,mBAAK,CAACsI,cAAN;AACH;;AACD,gBAAI,KAAKC,YAAL,IAAqBF,OAAO,KAAK,2DAAjC,IAA0C,KAAKnD,SAAnD,EAA8D;AAC1D,mBAAKqD,YAAL,CAAkBC,qBAAlB;;AACA,mBAAKC,gBAAL;;AACAzI,mBAAK,CAACsI,cAAN;AACH,aAJD,MAKK,IAAI,KAAK7C,YAAT,EAAuB;AACxB;AACA,kBAAMiD,cAAc,GAAG,KAAKjD,YAAL,CAAkBtG,WAAlB,CAA8BmI,UAArD;AACA;;AACA,kBAAMqB,UAAU,GAAGN,OAAO,KAAK,8DAAZ,IAAwBA,OAAO,KAAK,gEAAvD;;AACA,kBAAI,KAAKnD,SAAL,IAAkBmD,OAAO,KAAK,yDAAlC,EAAuC;AACnC,qBAAK5C,YAAL,CAAkBtG,WAAlB,CAA8ByJ,SAA9B,CAAwC5I,KAAxC;AACH,eAFD,MAGK,IAAI2I,UAAU,IAAI,KAAKE,QAAL,EAAlB,EAAmC;AACpC,qBAAKC,SAAL;AACH;;AACD,kBAAIH,UAAU,IAAI,KAAKlD,YAAL,CAAkBtG,WAAlB,CAA8BmI,UAA9B,KAA6CoB,cAA/D,EAA+E;AAC3E,qBAAKK,eAAL;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAa/I,KAAb,EAAoB;AAChB;AACA,gBAAI0H,MAAM;AAAI;AAAkB1H,iBAAK,CAAC0H,MAAtC;AACA;;AACA,gBAAIhJ,KAAK,GAAGgJ,MAAM,CAAChJ,KAAnB,CAJgB,CAKhB;;AACA,gBAAIgJ,MAAM,CAACrH,IAAP,KAAgB,QAApB,EAA8B;AAC1B3B,mBAAK,GAAGA,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqBsK,UAAU,CAACtK,KAAD,CAAvC;AACH,aARe,CAShB;AACA;AACA;AACA;AACA;;;AACA,gBAAI,KAAKuK,cAAL,KAAwBvK,KAA5B,EAAmC;AAC/B,mBAAKuK,cAAL,GAAsBvK,KAAtB;;AACA,mBAAKyG,SAAL,CAAezG,KAAf;;AACA,kBAAI,KAAKmK,QAAL,MAAmB,KAAKrE,SAAL,CAAeS,aAAf,KAAiCjF,KAAK,CAAC0H,MAA9D,EAAsE;AAClE,qBAAKoB,SAAL;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;iBACI,wBAAe;AACX,gBAAI,CAAC,KAAKhE,mBAAV,EAA+B;AAC3B,mBAAKA,mBAAL,GAA2B,IAA3B;AACH,aAFD,MAGK,IAAI,KAAK+D,QAAL,EAAJ,EAAqB;AACtB,mBAAKI,cAAL,GAAsB,KAAKhF,QAAL,CAAc/E,aAAd,CAA4BR,KAAlD;;AACA,mBAAKkI,cAAL;;AACA,mBAAKC,WAAL,CAAiB,IAAjB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,uBAAmC;AAAA,gBAAvBqC,aAAuB,uEAAP,KAAO;;AAC/B,gBAAI,KAAK3E,UAAL,IAAmB,KAAKA,UAAL,CAAgB4E,UAAhB,KAA+B,MAAtD,EAA8D;AAC1D,kBAAID,aAAJ,EAAmB;AACf,qBAAK3E,UAAL,CAAgB6E,oBAAhB;AACH,eAFD,MAGK;AACD,qBAAK7E,UAAL,CAAgB4E,UAAhB,GAA6B,QAA7B;AACH;;AACD,mBAAKvE,sBAAL,GAA8B,IAA9B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,uBAAc;AACV,gBAAI,KAAKA,sBAAT,EAAiC;AAC7B,mBAAKL,UAAL,CAAgB4E,UAAhB,GAA6B,MAA7B;AACA,mBAAKvE,sBAAL,GAA8B,KAA9B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkB;AACd;AACA,gBAAMpF,KAAK,GAAG,KAAKiG,YAAL,CAAkBtG,WAAlB,CAA8BkK,eAA9B,IAAiD,CAA/D;AACA;;AACA,gBAAMC,UAAU,GAAG,6FAA8B9J,KAA9B,EAAqC,KAAKiG,YAAL,CAAkBrG,OAAvD,EAAgE,KAAKqG,YAAL,CAAkB9E,YAAlF,CAAnB;;AACA,gBAAInB,KAAK,KAAK,CAAV,IAAe8J,UAAU,KAAK,CAAlC,EAAqC;AACjC;AACA;AACA;AACA,mBAAK7D,YAAL,CAAkB8D,aAAlB,CAAgC,CAAhC;AACH,aALD,MAMK;AACD;AACA,kBAAMC,iBAAiB,GAAG,wFAAyBhK,KAAK,GAAG8J,UAAjC,EAA6CpG,0BAA7C,EAAyE,KAAKuC,YAAL,CAAkBgE,aAAlB,EAAzE,EAA4GtG,yBAA5G,CAA1B;;AACA,mBAAKsC,YAAL,CAAkB8D,aAAlB,CAAgCC,iBAAhC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,sCAA6B;AAAA;;AACzB;AACA,gBAAME,WAAW,GAAG,KAAKtF,KAAL,CAAWwB,QAAX,CAAoBC,YAApB,GAAmCC,IAAnC,CAAwC,6DAAK,CAAL,CAAxC,CAApB;AACA;;;AACA,gBAAM6D,aAAa,GAAG,KAAKlE,YAAL,CAAkBrG,OAAlB,CAA0BgH,OAA1B,CAAkCN,IAAlC,CAAuC;AAAK;AAC1E;AACA;AACQ;AAAA,qBAAM,MAAI,CAACO,iBAAL,CAAuBuD,mBAAvB,EAAN;AAAA,aAH6D,CAAvC,EAItB;AACA;AACA,0EAAM,CAAN,CANsB,CAAtB,CAJyB,CAWzB;;AACA,mBAAO,mDAAMF,WAAN,EAAmBC,aAAnB,EACF7D,IADE,EAEP;AACA;AACA;AAAW;AACnB;AACA;AACQ,wBAAM;AACF;AACA,kBAAM+D,OAAO,GAAG,MAAI,CAAC3E,SAArB;;AACA,oBAAI,CAACuD,gBAAL;;AACA,oBAAI,CAAChD,YAAL,CAAkB9F,cAAlB;;AACA,kBAAI,MAAI,CAACuF,SAAT,EAAoB;AACf;AAAkB,sBAAI,CAACqB,WAAxB,CAAsCC,cAAtC,GADgB,CAEhB;AACA;AACA;AACA;;;AACA,oBAAIqD,OAAO,KAAK,MAAI,CAAC3E,SAArB,EAAgC;AAC5B,wBAAI,CAACO,YAAL,CAAkBnH,MAAlB,CAAyBmB,IAAzB;AACH;AACJ;;AACD,qBAAO,MAAI,CAACqK,mBAAZ;AACH,aAnBD,CAJO,EAwBP;AACA,yEAAK,CAAL,CAzBO,EA0BH;AA1BG,aA2BFvK,SA3BE;AA2BS;AACxB;AACA;AACA;AACQ,sBAAAS,KAAK;AAAA,qBAAI,MAAI,CAAC+J,iBAAL,CAAuB/J,KAAvB,CAAJ;AAAA,aA/BE,CAAP;AAgCH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yBAAgB;AACZ,gBAAI,KAAKuG,WAAT,EAAsB;AAClB,mBAAKyD,UAAL;;AACA,mBAAKzD,WAAL,CAAiB0D,OAAjB;;AACA,mBAAK1D,WAAL,GAAmB,IAAnB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,0BAAiB7H,KAAjB,EAAwB;AACpB;AACA,gBAAMwL,SAAS,GAAG,KAAKzE,YAAL,IAAqB,KAAKA,YAAL,CAAkBrH,WAAvC,GACd,KAAKqH,YAAL,CAAkBrH,WAAlB,CAA8BM,KAA9B,CADc,GAEdA,KAFJ,CAFoB,CAKpB;AACA;;AACA;;AACA,gBAAMyL,UAAU,GAAGD,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgC,EAAnD,CARoB,CASpB;AACA;;AACA,gBAAI,KAAK3F,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgB6F,QAAhB,CAAyB1L,KAAzB,GAAiCyL,UAAjC;AACH,aAFD,MAGK;AACD,mBAAKlG,QAAL,CAAc/E,aAAd,CAA4BR,KAA5B,GAAoCyL,UAApC;AACH;;AACD,iBAAKlB,cAAL,GAAsBkB,UAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBnK,KAAlB,EAAyB;AACrB,gBAAIA,KAAK,IAAIA,KAAK,CAAC/C,MAAnB,EAA2B;AACvB,mBAAKoN,4BAAL,CAAkCrK,KAAK,CAAC/C,MAAxC;;AACA,mBAAKgL,gBAAL,CAAsBjI,KAAK,CAAC/C,MAAN,CAAayB,KAAnC;;AACA,mBAAKyG,SAAL,CAAenF,KAAK,CAAC/C,MAAN,CAAayB,KAA5B;;AACA,mBAAKuF,QAAL,CAAc/E,aAAd,CAA4BoL,KAA5B;;AACA,mBAAK7E,YAAL,CAAkB8E,gBAAlB,CAAmCvK,KAAK,CAAC/C,MAAzC;AACH;;AACD,iBAAK+M,UAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,sCAA6BQ,IAA7B,EAAmC;AAC/B,iBAAK/E,YAAL,CAAkBrG,OAAlB,CAA0BqL,OAA1B;AAAmC;AAC3C;AACA;AACA;AACQ,sBAAAvN,MAAM,EAAI;AACN,kBAAIA,MAAM,IAAIsN,IAAV,IAAkBtN,MAAM,CAACwN,QAA7B,EAAuC;AACnCxN,sBAAM,CAACyN,QAAP;AACH;AACJ,aARD;AASH;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiB;AAAA;;AACb,gBAAI,CAAC,KAAKlF,YAAV,EAAwB;AACpB,oBAAM1B,mCAAmC,EAAzC;AACH,aAHY,CAIb;AACA;;;AACA,gBAAI,KAAKyD,mBAAL,IAA4B,IAAhC,EAAsC;AAClC,mBAAKA,mBAAL,GAA2B,CAAC,CAAC,8EAAe,KAAKvD,QAAL,CAAc/E,aAA7B,CAA7B;AACH;AACD;;;AACA,gBAAI0L,UAAU,GAAG,KAAKrE,WAAtB;;AACA,gBAAI,CAACqE,UAAL,EAAiB;AACb,mBAAKC,OAAL,GAAe,IAAI,mEAAJ,CAAmB,KAAKpF,YAAL,CAAkB3E,QAArC,EAA+C,KAAKqD,iBAApD,CAAf;AACAyG,wBAAU,GAAG,KAAK1G,QAAL,CAAc4G,MAAd,CAAqB,KAAKC,iBAAL,EAArB,CAAb;AACA,mBAAKxE,WAAL,GAAmBqE,UAAnB,CAHa,CAIb;AACA;;AACAA,wBAAU,CAACI,aAAX,GAA2BzL,SAA3B;AAAsC;AAClD;AACA;AACA;AACY,wBAAAS,KAAK,EAAI;AACL;AACA;AACA,oBAAIA,KAAK,CAACqI,OAAN,KAAkB,4DAAlB,IAA6BrI,KAAK,CAACqI,OAAN,KAAkB,8DAAlB,IAA8BrI,KAAK,CAACiL,MAArE,EAA8E;AAC1E,wBAAI,CAACxC,gBAAL;;AACA,wBAAI,CAAC1D,oBAAL,CAA0BmG,IAA1B,GAF0E,CAG1E;AACA;;;AACAlL,uBAAK,CAACmL,eAAN;AACAnL,uBAAK,CAACsI,cAAN;AACH;AACJ,eAfD;;AAgBA,kBAAI,KAAK7D,cAAT,EAAyB;AACrB,qBAAKI,qBAAL,GAA6B,KAAKJ,cAAL,CAAoBnF,MAApB,GAA6BC,SAA7B;AAAwC;AACrF;AACA;AACgB,4BAAM;AACF,sBAAI,MAAI,CAAC2F,SAAL,IAAkB0F,UAAtB,EAAkC;AAC9BA,8BAAU,CAACQ,UAAX,CAAsB;AAAEC,2BAAK,EAAE,MAAI,CAACC,cAAL;AAAT,qBAAtB;AACH;AACJ,iBAP4B,CAA7B;AAQH;AACJ,aAhCD,MAiCK;AACD;AACA,mBAAKjF,iBAAL,CAAuBkF,SAAvB,CAAiC,KAAKC,oBAAL,EAAjC;;AACAZ,wBAAU,CAACQ,UAAX,CAAsB;AAAEC,qBAAK,EAAE,KAAKC,cAAL;AAAT,eAAtB;AACH;;AACD,gBAAIV,UAAU,IAAI,CAACA,UAAU,CAAC7D,WAAX,EAAnB,EAA6C;AACzC6D,wBAAU,CAACa,MAAX,CAAkB,KAAKZ,OAAvB;AACA,mBAAK5D,2BAAL,GAAmC,KAAKyE,0BAAL,EAAnC;AACH;AACD;;;AACA,gBAAM7B,OAAO,GAAG,KAAK3E,SAArB;;AACA,iBAAKO,YAAL,CAAkB9F,cAAlB;;AACA,iBAAK8F,YAAL,CAAkBtH,OAAlB,GAA4B,KAAKoH,gBAAL,GAAwB,IAApD,CAxDa,CAyDb;AACA;;AACA,gBAAI,KAAKL,SAAL,IAAkB2E,OAAO,KAAK,KAAK3E,SAAvC,EAAkD;AAC9C,mBAAKO,YAAL,CAAkBnH,MAAlB,CAAyBmB,IAAzB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,6BAAoB;AAChB,mBAAO,IAAI,kEAAJ,CAAkB;AACrBkM,8BAAgB,EAAE,KAAKC,mBAAL,EADG;AAErBvH,4BAAc,EAAE,KAAK0B,eAAL,EAFK;AAGrBsF,mBAAK,EAAE,KAAKC,cAAL,EAHc;AAIrBO,uBAAS,EAAE,KAAKvH;AAJK,aAAlB,CAAP;AAMH;AACD;AACJ;AACA;AACA;;;;iBACI,+BAAsB;AAClB;AACA,gBAAMwH,QAAQ,GAAG,KAAK5H,QAAL,CAAcmB,QAAd,GACZ0G,mBADY,CACQ,KAAKP,oBAAL,EADR,EAEZQ,sBAFY,CAEW,KAFX,EAGZC,QAHY,CAGH,KAHG,CAAjB;;AAIA,iBAAK3F,qBAAL,CAA2BwF,QAA3B;;AACA,iBAAKzF,iBAAL,GAAyByF,QAAzB;AACA,mBAAOA,QAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsBH,gBAAtB,EAAwC;AACpC;AACA;;AACA;AACA,gBAAMO,cAAc,GAAG,CACnB;AAAEC,qBAAO,EAAE,OAAX;AAAoBC,qBAAO,EAAE,QAA7B;AAAuCC,sBAAQ,EAAE,OAAjD;AAA0DC,sBAAQ,EAAE;AAApE,aADmB,EAEnB;AAAEH,qBAAO,EAAE,KAAX;AAAkBC,qBAAO,EAAE,QAA3B;AAAqCC,sBAAQ,EAAE,KAA/C;AAAsDC,sBAAQ,EAAE;AAAhE,aAFmB,CAAvB,CAJoC,CAQpC;AACA;AACA;;AACA;;AACA,gBAAMC,UAAU,GAAG,8BAAnB;AACA;;AACA,gBAAMC,cAAc,GAAG,CACnB;AAAEL,qBAAO,EAAE,OAAX;AAAoBC,qBAAO,EAAE,KAA7B;AAAoCC,sBAAQ,EAAE,OAA9C;AAAuDC,sBAAQ,EAAE,QAAjE;AAA2EC,wBAAU,EAAVA;AAA3E,aADmB,EAEnB;AAAEJ,qBAAO,EAAE,KAAX;AAAkBC,qBAAO,EAAE,KAA3B;AAAkCC,sBAAQ,EAAE,KAA5C;AAAmDC,sBAAQ,EAAE,QAA7D;AAAuEC,wBAAU,EAAVA;AAAvE,aAFmB,CAAvB;AAIA;;AACA,gBAAIE,SAAJ;;AACA,gBAAI,KAAKpH,QAAL,KAAkB,OAAtB,EAA+B;AAC3BoH,uBAAS,GAAGD,cAAZ;AACH,aAFD,MAGK,IAAI,KAAKnH,QAAL,KAAkB,OAAtB,EAA+B;AAChCoH,uBAAS,GAAGP,cAAZ;AACH,aAFI,MAGA;AACDO,uBAAS,aAAOP,cAAP,EAA0BM,cAA1B,CAAT;AACH;;AACDb,4BAAgB,CAACe,aAAjB,CAA+BD,SAA/B;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AACnB,gBAAI,KAAKE,WAAT,EAAsB;AAClB,qBAAO,KAAKA,WAAL,CAAiB5J,UAAxB;AACH;;AACD,mBAAO,KAAKwB,UAAL,GAAkB,KAAKA,UAAL,CAAgBqI,yBAAhB,EAAlB,GAAgE,KAAK3I,QAA5E;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiB;AACb,mBAAO,KAAKwB,YAAL,CAAkBtE,UAAlB,IAAgC,KAAK0L,aAAL,EAAvC;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yBAAgB;AACZ,mBAAO,KAAKrB,oBAAL,GAA4BtM,aAA5B,CAA0C4N,qBAA1C,GAAkEzB,KAAzE;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,4BAAmB;AACf,iBAAK5F,YAAL,CAAkBtG,WAAlB,CAA8B4N,aAA9B,CAA4C,KAAKtH,YAAL,CAAkB9H,qBAAlB,GAA0C,CAA1C,GAA8C,CAAC,CAA3F;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,oBAAW;AACP;AACA,gBAAMqP,OAAO,GAAG,KAAK/I,QAAL,CAAc/E,aAA9B;AACA,mBAAO,CAAC8N,OAAO,CAACC,QAAT,IAAqB,CAACD,OAAO,CAAC5E,QAA9B,IAA0C,CAAC,KAAKzD,qBAAvD;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sBAAa;AACT,gBAAIuI,EAAJ;;AACA,mBAAO,CAAC,CAACA,EAAE,GAAG,KAAK1I,SAAX,MAA0B,IAA1B,IAAkC0I,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACC,WAA/D,KAA+EnH,MAAtF;AACH;;;;;;AAELnC,4BAAsB,CAAC5D,IAAvB,GAA8B,SAASmN,8BAAT,CAAwCjN,CAAxC,EAA2C;AAAE,eAAO,KAAKA,CAAC,IAAI0D,sBAAV,EAAkC,gEAAyB,wDAAzB,CAAlC,EAA+E,gEAAyB,4DAAzB,CAA/E,EAAyH,gEAAyB,8DAAzB,CAAzH,EAA4K,gEAAyB,oDAAzB,CAA5K,EAAqN,gEAAyB,+DAAzB,CAArN,EAAyQ,gEAAyBT,gCAAzB,CAAzQ,EAAqU,gEAAyB,gEAAzB,EAAgD,CAAhD,CAArU,EAAyX,gEAAyB,4EAAzB,EAAyC,CAAzC,CAAzX,EAAsa,gEAAyB,wDAAzB,EAAmC,CAAnC,CAAta,EAA6c,gEAAyB,oEAAzB,CAA7c,CAAP;AAAsgB,OAAjlB;;AACAS,4BAAsB,CAACZ,IAAvB,GAA8B,gEAAyB;AAAE5C,YAAI,EAAEwD,sBAAR;AAAgCvD,iBAAS,EAAE,CAAC,CAAC,OAAD,EAAU,iBAAV,EAA6B,EAA7B,CAAD,EAAmC,CAAC,UAAD,EAAa,iBAAb,EAAgC,EAAhC,CAAnC,CAA3C;AAAoHU,iBAAS,EAAE,CAAC,CAAD,EAAI,0BAAJ,CAA/H;AAAgKqM,gBAAQ,EAAE,CAA1K;AAA6KC,oBAAY,EAAE,SAASC,mCAAT,CAA6C9Q,EAA7C,EAAiDC,GAAjD,EAAsD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9S,qEAAkB,SAAlB,EAA6B,SAAS+Q,iDAAT,GAA6D;AAAE,qBAAO9Q,GAAG,CAAC+Q,YAAJ,EAAP;AAA4B,aAAxH,EAA0H,MAA1H,EAAkI,SAASC,8CAAT,GAA0D;AAAE,qBAAOhR,GAAG,CAAC0I,UAAJ,EAAP;AAA0B,aAAxN,EAA0N,OAA1N,EAAmO,SAASuI,+CAAT,CAAyDC,MAAzD,EAAiE;AAAE,qBAAOlR,GAAG,CAACmR,YAAJ,CAAiBD,MAAjB,CAAP;AAAkC,aAAxU,EAA0U,SAA1U,EAAqV,SAASE,iDAAT,CAA2DF,MAA3D,EAAmE;AAAE,qBAAOlR,GAAG,CAACqR,cAAJ,CAAmBH,MAAnB,CAAP;AAAoC,aAA9b;AACH;;AAAC,cAAInR,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,cAAnB,EAAmCC,GAAG,CAAC4I,qBAAvC,EAA8D,MAA9D,EAAsE5I,GAAG,CAACsR,oBAAJ,GAA2B,IAA3B,GAAkC,UAAxG,EAAoH,mBAApH,EAAyItR,GAAG,CAACsR,oBAAJ,GAA2B,IAA3B,GAAkC,MAA3K,EAAmL,uBAAnL,EAA4MtR,GAAG,CAACwI,SAAJ,IAAiBxI,GAAG,CAAC6L,YAArB,GAAoC7L,GAAG,CAAC6L,YAAJ,CAAiB3L,EAArD,GAA0D,IAAtQ,EAA4Q,eAA5Q,EAA6RF,GAAG,CAACsR,oBAAJ,GAA2B,IAA3B,GAAkCtR,GAAG,CAACwI,SAAJ,CAAc+I,QAAd,EAA/T,EAAyV,WAAzV,EAAsWvR,GAAG,CAACsR,oBAAJ,IAA4B,CAACtR,GAAG,CAACwI,SAAjC,GAA6C,IAA7C,GAAoDxI,GAAG,CAAC+I,YAAJ,IAAoB,IAApB,GAA2B,IAA3B,GAAkC/I,GAAG,CAAC+I,YAAJ,CAAiB7I,EAA7c,EAAid,eAAjd,EAAke,CAACF,GAAG,CAACsR,oBAAve;AACH;AAAE,SAJgD;AAI9C/M,cAAM,EAAE;AAAEoE,kBAAQ,EAAE,CAAC,yBAAD,EAA4B,UAA5B,CAAZ;AAAqDC,+BAAqB,EAAE,CAAC,cAAD,EAAiB,uBAAjB,CAA5E;AAAuH0I,8BAAoB,EAAE,CAAC,yBAAD,EAA4B,sBAA5B,CAA7I;AAAkMvI,sBAAY,EAAE,CAAC,iBAAD,EAAoB,cAApB,CAAhN;AAAqPkH,qBAAW,EAAE,CAAC,4BAAD,EAA+B,aAA/B;AAAlQ,SAJsC;AAI6QtL,gBAAQ,EAAE,CAAC,wBAAD,CAJvR;AAImTC,gBAAQ,EAAE,CAAC,iEAA0B,CAACsC,+BAAD,CAA1B,CAAD,EAA+D,kEAA/D;AAJ7T,OAAzB,CAA9B;AAKA;;AACAC,4BAAsB,CAAC3B,cAAvB,GAAwC;AAAA,eAAM,CAC1C;AAAE7B,cAAI,EAAE;AAAR,SAD0C,EAE1C;AAAEA,cAAI,EAAE;AAAR,SAF0C,EAG1C;AAAEA,cAAI,EAAE;AAAR,SAH0C,EAI1C;AAAEA,cAAI,EAAE;AAAR,SAJ0C,EAK1C;AAAEA,cAAI,EAAE;AAAR,SAL0C,EAM1C;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAACe,gCAAD;AAAtB,WAAD;AAA/B,SAN0C,EAO1C;AAAE/C,cAAI,EAAE,gEAAR;AAAwB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAApC,SAP0C,EAQ1C;AAAEA,cAAI,EAAE,0EAAR;AAAsB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,4EAAD;AAAtB,WAArB,EAAgE;AAAEhC,gBAAI,EAAE;AAAR,WAAhE;AAAlC,SAR0C,EAS1C;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAT0C,EAU1C;AAAEhC,cAAI,EAAE;AAAR,SAV0C,CAAN;AAAA,OAAxC;;AAYAwD,4BAAsB,CAACvB,cAAvB,GAAwC;AACpCmD,oBAAY,EAAE,CAAC;AAAEpF,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD,CADsB;AAEpCgD,gBAAQ,EAAE,CAAC;AAAEhF,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD,CAF0B;AAGpCsK,mBAAW,EAAE,CAAC;AAAEtM,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,4BAAD;AAArB,SAAD,CAHuB;AAIpCiD,6BAAqB,EAAE,CAAC;AAAEjF,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,cAAD;AAArB,SAAD,CAJa;AAKpC2L,4BAAoB,EAAE,CAAC;AAAE3N,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,yBAAD;AAArB,SAAD;AALc,OAAxC;;AAOA,OAAC,YAAY;AAAE,SAAC,OAAOG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBqB,sBAAzB,EAAiD,CAAC;AAC5GxD,cAAI,EAAE,uDADsG;AAE5GgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,qDADT;AAECG,gBAAI,EAAE;AACF,uBAAS,0BADP;AAEF,qCAAuB,uBAFrB;AAGF,6BAAe,0CAHb;AAIF,0CAA4B,sCAJ1B;AAKF,8CAAgC,sDAL9B;AAMF,sCAAwB,oDANtB;AAOF,kCAAoB,gEAPlB;AAQF,sCAAwB,uBARtB;AASF;AACA;AACA,2BAAa,gBAXX;AAYF,wBAAU,cAZR;AAaF,yBAAW,sBAbT;AAcF,2BAAa;AAdX,aAFP;AAkBCvB,oBAAQ,EAAE,wBAlBX;AAmBCwB,qBAAS,EAAE,CAACe,+BAAD;AAnBZ,WAAD;AAFsG,SAAD,CAAjD,EAuB1D,YAAY;AAAE,iBAAO,CAAC;AAAEvD,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAwD;AAAEA,gBAAI,EAAE;AAAR,WAAxD,EAA2F;AAAEA,gBAAI,EAAE;AAAR,WAA3F,EAAoH;AAAEA,gBAAI,EAAE;AAAR,WAApH,EAAwJ;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AACrM/B,kBAAI,EAAE,oDAD+L;AAErMgC,kBAAI,EAAE,CAACe,gCAAD;AAF+L,aAAD;AAA/B,WAAxJ,EAGX;AAAE/C,gBAAI,EAAE,gEAAR;AAA+B+B,sBAAU,EAAE,CAAC;AAC9C/B,kBAAI,EAAE;AADwC,aAAD;AAA3C,WAHW,EAKX;AAAEA,gBAAI,EAAE,0EAAR;AAA6B+B,sBAAU,EAAE,CAAC;AAC5C/B,kBAAI,EAAE;AADsC,aAAD,EAE5C;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,4EAAD;AAFP,aAF4C,EAK5C;AACChC,kBAAI,EAAE;AADP,aAL4C;AAAzC,WALW,EAYX;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC/B,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFkC;AAA/B,WAZW,EAiBX;AAAEhC,gBAAI,EAAE;AAAR,WAjBW,CAAP;AAiB8B,SAxCc,EAwCZ;AAAEgF,kBAAQ,EAAE,CAAC;AACvDhF,gBAAI,EAAE,mDADiD;AAEvDgC,gBAAI,EAAE,CAAC,yBAAD;AAFiD,WAAD,CAAZ;AAG1CiD,+BAAqB,EAAE,CAAC;AACxBjF,gBAAI,EAAE,mDADkB;AAExBgC,gBAAI,EAAE,CAAC,cAAD;AAFkB,WAAD,CAHmB;AAM1C2L,8BAAoB,EAAE,CAAC;AACvB3N,gBAAI,EAAE,mDADiB;AAEvBgC,gBAAI,EAAE,CAAC,yBAAD;AAFiB,WAAD,CANoB;AAS1CoD,sBAAY,EAAE,CAAC;AACfpF,gBAAI,EAAE,mDADS;AAEfgC,gBAAI,EAAE,CAAC,iBAAD;AAFS,WAAD,CAT4B;AAY1CsK,qBAAW,EAAE,CAAC;AACdtM,gBAAI,EAAE,mDADQ;AAEdgC,gBAAI,EAAE,CAAC,4BAAD;AAFQ,WAAD;AAZ6B,SAxCY,CAAnD;AAuDC,OAvDhB;;AAwDA,UAAI,KAAJ,EAAW,CAgLV;AAED;AACA;AACA;AACA;AACA;;;UACM6L,qB;;;;AAENA,2BAAqB,CAACjO,IAAtB,GAA6B,SAASkO,6BAAT,CAAuChO,CAAvC,EAA0C;AAAE,eAAO,KAAKA,CAAC,IAAI+N,qBAAV,GAAP;AAA4C,OAArH;;AACAA,2BAAqB,CAACE,IAAtB,GAA6B,+DAAwB;AAAE/N,YAAI,EAAE6N;AAAR,OAAxB,CAA7B;AACAA,2BAAqB,CAACG,IAAtB,GAA6B,+DAAwB;AAAExL,iBAAS,EAAE,CAACY,iDAAD,CAAb;AAAkE6K,eAAO,EAAE,CAAC,CAAC,sEAAD,EAAkB,kEAAlB,EAAiC,sEAAjC,EAAkD,4DAAlD,CAAD,EAAkE,0EAAlE,EACxH,sEADwH,EAExH,sEAFwH;AAA3E,OAAxB,CAA7B;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BL,qBAA1B,EAAiD;AAAEM,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC5Q,eAAD,EAAkBiG,sBAAlB,EAA0Cf,qBAA1C,CAAP;AAA0E,WAAxG;AAA0GwL,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EAAkB,kEAAlB,EAAiC,sEAAjC,EAAkD,4DAAlD,CAAP;AAAyE,WAA1M;AAA4MG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,0EAAD,EAAsB7Q,eAAtB,EAAuC,sEAAvC,EAAwDiG,sBAAxD,EAAgFf,qBAAhF,EAAuG,sEAAvG,CAAP;AAAiI;AAApW,SAAjD,CAAnD;AAA8c,OAA7d;;AACA,OAAC,YAAY;AAAE,SAAC,OAAON,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB0L,qBAAzB,EAAgD,CAAC;AAC3G7N,cAAI,EAAE,sDADqG;AAE3GgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAAC,sEAAD,EAAkB,kEAAlB,EAAiC,sEAAjC,EAAkD,4DAAlD,CADV;AAECG,mBAAO,EAAE,CACL,0EADK,EAEL7Q,eAFK,EAGL,sEAHK,EAILiG,sBAJK,EAKLf,qBALK,EAML,sEANK,CAFV;AAUC0L,wBAAY,EAAE,CAAC5Q,eAAD,EAAkBiG,sBAAlB,EAA0Cf,qBAA1C,CAVf;AAWCD,qBAAS,EAAE,CAACY,iDAAD;AAXZ,WAAD;AAFqG,SAAD,CAAhD,EAe1D,IAf0D,EAepD,IAfoD,CAAnD;AAeO,OAftB;AAiBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC/jDaiL,2BAA2B;AAgBtC,6CAAoBC,GAApB,EAA4CC,mBAA5C,EAA4FC,eAA5F,EAA6H;AAAA;;AAAzG,eAAAF,GAAA,GAAAA,GAAA;AAAwB,eAAAC,mBAAA,GAAAA,mBAAA;AAAgD,eAAAC,eAAA,GAAAA,eAAA;AAf5F,eAAAC,OAAA,GAAmB,KAAnB;AACO,eAAAC,MAAA,GAAc,EAAd;AAKP,eAAAC,uBAAA,GAA0B,IAA1B;AACA,eAAAC,gBAAA,GAAmB,IAAIC,KAAJ,EAAnB;AAQgI;;AAhB1F;AAAA;AAAA,iBAkBtC,oBAAQ;AAAA;;AACN,iBAAKC,SAAL;AACA,iBAAKC,qBAAL;AACA,iBAAKC,cAAL;AACAC,sBAAU,CAAC,YAAI;AACb,qBAAI,CAACC,MAAL,CAAYrQ,aAAZ,CAA0BoL,KAA1B;AACD,aAFS,EAER,CAFQ,CAAV;AAGD;AAzBqC;AAAA;AAAA,iBA0BtC,sBAAakF,CAAb,EAAc;AACZ,gBAAIC,IAAI,GAAID,CAAC,CAACnH,OAAF,GAAYmH,CAAC,CAACnH,OAAd,GAAwBmH,CAAC,CAACE,KAAtC;;AACJ,gBAAGD,IAAI,IAAI,EAAX,EAAe;AAAE;AACb,mBAAKE,QAAL;AACH;AAEE;AAhCqC;AAAA;AAAA,iBAiCtC,iCAAqB;AACnB,iBAAKC,eAAL,GAAuB,KAAKjB,GAAL,CAASkB,KAAT,CAAe;AACpCC,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWC,QAAZ,CAAL,CAD0B;AAEpCC,uBAAS,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWD,QAAZ,CAAL,CAFyB;AAGpCE,yBAAW,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWF,QAAZ,CAAL;AAHuB,aAAf,CAAvB;AAOD;AAzCqC;AAAA;AAAA,iBA0CtC,qBAAY;AACV,iBAAKG,IAAL,GAAY,KAAKvB,GAAL,CAASkB,KAAT,CAAe;AACzBM,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL;AADW,aAAf,CAAZ;AAGD;AA9CqC;AAAA;AAAA,iBA+CtC,uBAAcK,GAAd,EAAmB;AACjB,mFAAKC,IAAL,CAAU,QAAV,EAAoBD,GAApB,EAAyB,OAAzB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AArDqC;AAAA;AAAA,iBAsDtC,0BAAiBJ,GAAjB,EAAsB;AACpB,mFAAKC,IAAL,CAAU,MAAV,EAAkBD,GAAlB,EAAuB,SAAvB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AA5DqC;AAAA;AAAA,iBA6DtC,qBAAY;AACV,gBAAMC,UAAU,GAAG,KAAKlB,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA7C;AACA,iBAAKgS,MAAL,GAAcD,UAAd;AACA,mBAAOA,UAAP;AACD;AAjEqC;AAAA;AAAA,iBAkEtC,oBAAQ;AAAA;;AACNE,mBAAO,CAACC,GAAR,CAAY,KAAKC,SAAL,EAAZ;AACAF,mBAAO,CAACC,GAAR,CAAY,KAAKV,IAAL,CAAUY,QAAV,CAAmBX,YAAnB,CAAgCY,MAA5C;AAEA,iBAAKC,SAAL,GAAe,IAAf;;AACC,gBAAI,KAAKd,IAAL,CAAUe,KAAd,EAAqB;AAEpB,mBAAKrC,mBAAL,CAAyBsC,2BAAzB,CAAqD,KAAKL,SAAL,EAArD,EAAuEM,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAvE,EAAmG7R,SAAnG,CAA6G,UAAC+Q,GAAD,EAAc;AACzHK,uBAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,oBAAIA,GAAG,CAACe,OAAJ,IAAe,mCAAnB,EAAwD;AACtD,yBAAI,CAACvC,OAAL,GAAe,IAAf;AAGD,iBAJD,MAIK;AACH,yBAAI,CAACwC,aAAL,CAAmBhB,GAAG,CAACe,OAAvB;AAED;AACF,eAVD,EAUG,UAACE,GAAD,EAAS;AACVZ,uBAAO,CAACC,GAAR,CAAYW,GAAZ;AAED,eAbD;;AAcAZ,qBAAO,CAACC,GAAR,CAAY,KAAKV,IAAL,CAAUxR,KAAV,CAAgByR,YAA5B,EAA0CgB,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA1C;AACD;AACD;AAzFoC;AAAA;AAAA,iBA0FrC,mCAAuB;AAAA;;AAEtB,iBAAKI,UAAL,GAAgB,IAAhB;;AACA,gBAAI,KAAK5B,eAAL,CAAqBqB,KAAzB,EAAgC;AAE9B,mBAAKrC,mBAAL,CAAyB6C,6BAAzB,CAAuD,KAAKZ,SAAL,EAAvD,EAAyEM,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAzE,EAAoG,KAAKxB,eAAL,CAAqBlR,KAAzH,EAAgIa,SAAhI,CAA0I,UAAC+Q,GAAD,EAAc;AACtJK,uBAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,uBAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,oBAAIN,GAAG,CAACe,OAAJ,IAAe,oCAAnB,EAAyD;AACvD,yBAAI,CAACK,gBAAL,CAAsBpB,GAAG,CAACe,OAA1B;AAGD,iBAJD,MAIK;AACH,yBAAI,CAACC,aAAL,CAAmBhB,GAAG,CAACe,OAAvB;AAED;AACF,eAXD,EAWG,UAACE,GAAD,EAAS;AACVZ,uBAAO,CAACC,GAAR,CAAYW,GAAZ;AAED,eAdD;;AAiBAZ,qBAAO,CAACC,GAAR,CAAY,KAAKhB,eAAL,CAAqBlR,KAAjC;AACD;AACD;AAlHoC;AAAA;AAAA,iBAmHrC,0BAAiB;AAAA;;AAChB,iBAAKmQ,eAAL,CAAqB8C,aAArB,GAAqCpS,SAArC,CAA+C,UAAC+Q,GAAD,EAAS;AACtD,qBAAI,CAACsB,QAAL,GAAgBtB,GAAhB;;AADsD,yDAEtC,OAAI,CAACsB,QAFiC;AAAA;;AAAA;AAEtD,oEAA+B;AAAA,sBAAtBC,GAAsB;AAC7B,sBAAIC,YAAY,GAAGD,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAAnB;AACA0C,yBAAO,CAACC,GAAR,CAAYkB,YAAZ;;AAEA,yBAAI,CAAC7C,gBAAL,CAAsB8C,IAAtB,CAA2BF,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAA3B;AACD;AAPqD;AAAA;AAAA;AAAA;AAAA;AAQvD,aARD;AASD;AA7HqC;AAAA;AAAA,iBA8HtC,wBAAe4D,GAAf,EAAoB;AAClB,iBAAKtC,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA1B,GAAkCmT,GAAlC;AACA,iBAAK7C,uBAAL,GAA+B,IAA/B,CAFkB,CAGlB;AAED;AAnIqC;AAAA;AAAA,iBAoItC,cAAK6C,GAAL,EAAU;AACR,mBAAOA,GAAP;AACD;AAtIqC;AAAA;AAAA,iBAuItC,sBAAaA,GAAb,EAAkB;AAChB,iBAAK7C,uBAAL,GAA+B,KAA/B;AAGA,gBAAIgD,OAAO,GAAG,KAAK/C,gBAAL,CAAsBF,MAAtB,CAA6B,KAAKkD,IAAlC,CAAd;AAED;AA7IqC;;AAAA;AAAA,S;;;;gBAV/B;;gBAEA;;gBACA;;;;;;gBAqBN,uD;AAAS,iBAAC,QAAD;;;AAdCvD,iCAA2B,6DALvC,gEAAU;AACTjM,gBAAQ,EAAE,yBADD;AAET3B,gBAAQ,EAAR,sFAFS;;AAAA,OAAV,CAKuC,GAA3B4N,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACXbeA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAOA,UAAMnS,GAAG,GAAG,CAAC,GAAD,CAAZ;;AACA,eAAS2V,YAAT,GAAwB,CAAG;;AAC3B,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;;;UACMC,sB;AACF;AACJ;AACA;AACA;AACA;AACI,sCAAYlV,MAAZ,EAAoByN,QAApB,EAAmD;AAAA,YAArB0H,WAAqB,uEAAP,KAAO;;AAAA;;AAC/C,aAAKnV,MAAL,GAAcA,MAAd;AACA,aAAKyN,QAAL,GAAgBA,QAAhB;AACA,aAAK0H,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAgBV,C,CACD;;AACA;AACA;AACA;;;UACMC,W;AACF;AACJ;AACA;AACI,2BAAYvU,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAKV;AACD;;;AACA,UAAMwU,iBAAiB,GAAG,6EAAc,0EAAW,kFAAmBD,WAAnB,CAAX,EAA4C,SAA5C,CAAd,EAAsE,CAAC,CAAvE,CAA1B;AACA;AACA;AACA;AACA;;;UACME,a;;;;AAENA,mBAAa,CAACtS,IAAd,GAAqB,SAASuS,qBAAT,CAA+BrS,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIoS,aAAV,GAAP;AAAoC,OAA7F;;AACAA,mBAAa,CAACtP,IAAd,GAAqB,gEAAyB;AAAE5C,YAAI,EAAEkS,aAAR;AAAuBjS,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,EAAsB,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAtB,CAAlC;AAAoFU,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ;AAA/F,OAAzB,CAArB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOwB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+P,aAAzB,EAAwC,CAAC;AACnGlS,cAAI,EAAE,uDAD6F;AAEnGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,kCADX;AAECG,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAF6F,SAAD,CAAxC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;;;UACM6P,mB;;;;AAENA,yBAAmB,CAACxS,IAApB,GAA2B,SAASyS,2BAAT,CAAqCvS,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAIsS,mBAAV,GAAP;AAA0C,OAA/G;;AACAA,yBAAmB,CAACxP,IAApB,GAA2B,gEAAyB;AAAE5C,YAAI,EAAEoS,mBAAR;AAA6BnS,iBAAS,EAAE,CAAC,CAAC,wBAAD,CAAD,EAA6B,CAAC,EAAD,EAAK,qBAAL,EAA4B,EAA5B,CAA7B,CAAxC;AAAuGU,iBAAS,EAAE,CAAC,CAAD,EAAI,wBAAJ;AAAlH,OAAzB,CAA3B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOwB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBiQ,mBAAzB,EAA8C,CAAC;AACzGpS,cAAI,EAAE,uDADmG;AAEzGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,+CADX;AAECG,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFmG,SAAD,CAA9C,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;;;UACM+P,O;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,yBAAY7U,WAAZ,EAAyB8U,OAAzB,EAAkCC,QAAlC,EAA4CC,mBAA5C,EACA;AACAC,qBAFA,EAEelV,kBAFf,EAEmCmV,QAFnC,EAGA;AACAxO,iBAJA,EAIW;AAAA;;AAAA;;AACP,uCAAM1G,WAAN;AACA,kBAAKA,WAAL,GAAmBA,WAAnB;AACA,kBAAK8U,OAAL,GAAeA,OAAf;AACA,kBAAK/U,kBAAL,GAA0BA,kBAA1B;AACA;AACR;AACA;;AACQ,kBAAKoV,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,kBAAKC,kBAAL,GAA0B,IAA1B;AACA;AACR;AACA;;AACQ,kBAAKC,iBAAL,GAAyB,KAAzB;AACA;AACR;AACA;;AACQ,kBAAKC,iBAAL,GAAyB,KAAzB;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,WAAL,GAAmB,IAAnB;AACA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAKC,UAAL,GAAkB,IAAlB;AACA;AACR;AACA;;AACQ,kBAAKC,QAAL,GAAgB,IAAI,4CAAJ,EAAhB;AACA;AACR;AACA;;AACQ,kBAAKC,OAAL,GAAe,IAAI,4CAAJ,EAAf;AACA;AACR;AACA;;AACQ,kBAAKC,eAAL,GAAuB,IAAI,0DAAJ,EAAvB;AACA;AACR;AACA;;AACQ,kBAAKC,SAAL,GAAiB,IAAI,0DAAJ,EAAjB;AACA;AACR;AACA;;AACQ,kBAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;;AACA,kBAAKC,iBAAL,GA7CO,CA8CP;AACA;AACA;;;AACA,kBAAKC,iBAAL,GAAyB,CAACvP,SAAS,IAAIwP,QAAd,EAAwBC,aAAxB,CAAsC,KAAtC,CAAzB;;AACA,kBAAKF,iBAAL,CAAuBjV,SAAvB,CAAiCoV,GAAjC,CAAqC,iBAArC;;AACA,kBAAKpW,WAAL,CAAiBoB,aAAjB,CAA+BiV,WAA/B,CAA2C,QAAKJ,iBAAhD;;AACA,kBAAKK,WAAL,GAAmB,IAAI,qEAAJ,kCAAyBxB,OAAzB,EAAkC,QAAKmB,iBAAvC,EAA0DlB,QAA1D,CAAnB;;AACA,kBAAKuB,WAAL,CAAiBC,kBAAjB,CAAoCvW,WAApC;;AACA,kBAAKwW,YAAL,GAAoBxB,mBAAmB,IAAI,EAA3C;AACA,kBAAKyB,mBAAL,GAA2BxB,aAAa,KAAK,gBAA7C;AACA,kBAAKC,QAAL,GAAgBA,QAAQ,IAAI,IAAZ,GAAoBwB,QAAQ,CAACxB,QAAD,CAAR,IAAsB,CAAC,CAA3C,GAAgD,CAAC,CAAjE;AAxDO;AAyDV;AACD;AACJ;AACA;AACA;AACA;;;;;eACI,eAAqB;AACjB,mBAAO,KAAK5K,QAAL,IAAiB,KAAKlH,aAAtB,IAAuC,CAAC,CAAC,KAAKoT,YAAL,CAAkBlM,QAAlE;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKiL,SAAZ;AAAwB;AACzC;AACJ;AACA;AACA;;eACI,aAAa3U,KAAb,EAAoB;AAChB;AACA,gBAAM+V,YAAY,GAAG,oFAAsB/V,KAAtB,CAArB;;AACA,gBAAI+V,YAAY,KAAK,KAAKpB,SAA1B,EAAqC;AACjC,mBAAKA,SAAL,GAAiBoB,YAAjB;;AACA,mBAAKC,wBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAY;AACR,mBAAO,KAAKC,MAAL,KAAgBxS,SAAhB,GACD,KAAKwS,MADJ,GAED,KAAK7W,WAAL,CAAiBoB,aAAjB,CAA+B0V,WAFrC;AAGH;AACD;AACJ;AACA;AACA;;eACI,aAAUlW,KAAV,EAAiB;AAAE,iBAAKiW,MAAL,GAAcjW,KAAd;AAAsB;AACzC;AACJ;AACA;AACA;AACA;AACA;AACA;;;;eACI,eAAiB;AAAE,mBAAO,KAAK4U,WAAL,IAAoB,KAAKJ,kBAAhC;AAAqD;AACxE;AACJ;AACA;AACA;;eACI,aAAexU,KAAf,EAAsB;AAClB,iBAAK4U,WAAL,GAAmB,oFAAsB5U,KAAtB,CAAnB;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAK0U,iBAAL,IAA0B,KAAKG,SAAtC;AAAkD;AACnE;AACJ;AACA;AACA;;eACI,aAAa7U,KAAb,EAAoB;AAChB,iBAAK6U,SAAL,GAAiB,oFAAsB7U,KAAtB,CAAjB;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAgB;AAAE,mBAAO,KAAK8U,UAAZ;AAAyB;AAC3C;AACJ;AACA;AACA;;eACI,aAAc9U,KAAd,EAAqB;AACjB,iBAAK8U,UAAL,GAAkB,oFAAsB9U,KAAtB,CAAlB;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAmB;AACf;AACA;AACA,mBAAO,KAAKmW,UAAL,KAAoB,KAAK1B,iBAAL,IAA0B,KAAKzI,QAAnD,IACH,KAAKA,QAAL,CAAcuD,QAAd,EADG,GACwB,IAD/B;AAEH;AACD;AACJ;AACA;;;;iBACI,6BAAoB;AAChB;AACA,gBAAM6G,iBAAiB,GAAG,gBAA1B;AACA;;AACA,gBAAM9H,OAAO;AAAI;AAAkB,iBAAKlP,WAAL,CAAiBoB,aAApD;;AACA,gBAAI8N,OAAO,CAAC+H,YAAR,CAAqBD,iBAArB,KACA9H,OAAO,CAACgI,OAAR,CAAgBC,WAAhB,OAAkCH,iBADtC,EACyD;AACrD9H,qBAAO,CAAClO,SAAR,CAAkBoV,GAAlB,CAAsBY,iBAAtB;AACA;AACH,aAJD,MAKK;AACD9H,qBAAO,CAAClO,SAAR,CAAkBoV,GAAlB,CAAsB,mBAAtB;AACH;AACJ;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAKN,SAAL,CAAenU,IAAf,CAAoB;AAAEyV,kBAAI,EAAE;AAAR,aAApB;;AACA,iBAAKd,WAAL,CAAiBe,oBAAjB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kBAAS;AACL,gBAAI,CAAC,KAAK9B,SAAV,EAAqB;AACjB,mBAAKA,SAAL,GAAiB,IAAjB;;AACA,mBAAKqB,wBAAL;;AACA,mBAAKU,aAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,oBAAW;AACP,gBAAI,KAAK/B,SAAT,EAAoB;AAChB,mBAAKA,SAAL,GAAiB,KAAjB;;AACA,mBAAKqB,wBAAL;;AACA,mBAAKU,aAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AACnB,gBAAI,CAAC,KAAK/B,SAAV,EAAqB;AACjB,mBAAKA,SAAL,GAAiB,IAAjB;;AACA,mBAAKqB,wBAAL,CAA8B,IAA9B;;AACA,mBAAKU,aAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,0BAAoC;AAAA,gBAArBhD,WAAqB,uEAAP,KAAO;AAChC,iBAAKiB,SAAL,GAAiB,CAAC,KAAK3I,QAAvB;;AACA,iBAAKgK,wBAAL,CAA8BtC,WAA9B;;AACA,iBAAKgD,aAAL;;AACA,mBAAO,KAAK1K,QAAZ;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQ;AACJ,gBAAI,CAAC,KAAKuI,SAAV,EAAqB;AACjB,mBAAKnV,WAAL,CAAiBoB,aAAjB,CAA+BoL,KAA/B;;AACA,mBAAKmJ,QAAL,CAAcvI,IAAd,CAAmB;AAAEgK,oBAAI,EAAE;AAAR,eAAnB;AACH;;AACD,iBAAKjC,SAAL,GAAiB,IAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,kBAAS;AACL,gBAAI,KAAKoC,SAAT,EAAoB;AAChB,mBAAKxB,OAAL,CAAapU,IAAb,CAAkB;AAAEyV,oBAAI,EAAE;AAAR,eAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sBAAalV,KAAb,EAAoB;AAChB,gBAAI,KAAKoI,QAAT,EAAmB;AACfpI,mBAAK,CAACsI,cAAN;AACH,aAFD,MAGK;AACDtI,mBAAK,CAACmL,eAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wBAAenL,KAAf,EAAsB;AAClB,gBAAI,KAAKoI,QAAT,EAAmB;AACf;AACH;;AACD,oBAAQpI,KAAK,CAACqI,OAAd;AACI,mBAAK,4DAAL;AACA,mBAAK,+DAAL;AACI;AACA,qBAAKiN,MAAL,GAFJ,CAGI;;AACAtV,qBAAK,CAACsI,cAAN;AACA;;AACJ,mBAAK,2DAAL;AACI;AACA,oBAAI,KAAKuM,UAAT,EAAqB;AACjB,uBAAKU,cAAL,CAAoB,IAApB;AACH,iBAJL,CAKI;;;AACAvV,qBAAK,CAACsI,cAAN;AACA;AAfR;AAiBH;AACD;AACJ;AACA;;;;iBACI,iBAAQ;AAAA;;AACJ;AACA;AACA;AACA;AACA,iBAAKsK,OAAL,CAAahN,QAAb,CACKC,YADL,GAEKC,IAFL,CAEU,4DAAK,CAAL,CAFV,EAGKvG,SAHL;AAGgB;AACxB;AACA;AACQ,wBAAM;AACF,qBAAI,CAACqT,OAAL,CAAa4C,GAAb;AAAkB;AAC9B;AACA;AACY,0BAAM;AACF,uBAAI,CAACvC,SAAL,GAAiB,KAAjB;;AACA,uBAAI,CAACS,OAAL,CAAaxI,IAAb,CAAkB;AAAEgK,sBAAI,EAAE;AAAR,iBAAlB;AACH,eAND;AAOH,aAdD;AAeH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,oCAA8C;AAAA,gBAArB9C,WAAqB,uEAAP,KAAO;AAC1C,iBAAKuB,eAAL,CAAqBlU,IAArB,CAA0B;AACtBxC,oBAAM,EAAE,IADc;AAEtBmV,yBAAW,EAAXA,WAFsB;AAGtB1H,sBAAQ,EAAE,KAAK2I;AAHO,aAA1B;AAKH;AACD;AACJ;AACA;AACA;;;;iBACI,yBAAgB;AACZ;AACA,gBAAI,KAAKxV,kBAAT,EAA6B;AACzB,mBAAKA,kBAAL,CAAwBkC,YAAxB;AACH;AACJ;;;;QAjViBuS,iB;;AAmVtBK,aAAO,CAAC1S,IAAR,GAAe,SAASwV,eAAT,CAAyBtV,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIwS,OAAV,EAAmB,gEAAyB,wDAAzB,CAAnB,EAAgE,gEAAyB,oDAAzB,CAAhE,EAAyG,gEAAyB,8DAAzB,CAAzG,EAAoJ,gEAAyB,gFAAzB,EAAoD,CAApD,CAApJ,EAA4M,gEAAyB,0FAAzB,EAAgD,CAAhD,CAA5M,EAAgQ,gEAAyB,+DAAzB,CAAhQ,EAAoT,gEAAyB,UAAzB,CAApT,EAA0V,gEAAyB,wDAAzB,EAAmC,CAAnC,CAA1V,CAAP;AAA0Y,OAAvb;;AACAA,aAAO,CAAC1P,IAAR,GAAe,gEAAyB;AAAE5C,YAAI,EAAEsS,OAAR;AAAiBrS,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,EAAqB,CAAC,EAAD,EAAK,gBAAL,EAAuB,EAAvB,CAArB,EAAiD,CAAC,UAAD,CAAjD,EAA+D,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAA/D,CAA5B;AAAkHC,sBAAc,EAAE,SAASmV,sBAAT,CAAgCjZ,EAAhC,EAAoCC,GAApC,EAAyC+D,QAAzC,EAAmD;AAAE,cAAIhE,EAAE,GAAG,CAAT,EAAY;AACnO,yEAAsBgE,QAAtB,EAAgC8R,aAAhC,EAA+C,CAA/C;;AACA,yEAAsB9R,QAAtB,EAAgCgS,mBAAhC,EAAqD,CAArD;;AACA,yEAAsBhS,QAAtB,EAAgCkV,aAAhC,EAA+C,CAA/C;AACH;;AAAC,cAAIlZ,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACkZ,MAAJ,GAAalV,EAAE,CAACK,KAArE;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACmZ,YAAJ,GAAmBnV,EAAE,CAACK,KAA3E;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACoZ,UAAJ,GAAiBpV,EAAE,CAACK,KAAzE;AACH;AAAE,SATiC;AAS/BC,iBAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,UAAtB,EAAkC,qBAAlC,CAToB;AASsCqM,gBAAQ,EAAE,EAThD;AASoDC,oBAAY,EAAE,SAASyI,oBAAT,CAA8BtZ,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACvJ,qEAAkB,OAAlB,EAA2B,SAASuZ,gCAAT,CAA0CpI,MAA1C,EAAkD;AAAE,qBAAOlR,GAAG,CAACuZ,YAAJ,CAAiBrI,MAAjB,CAAP;AAAkC,aAAjH,EAAmH,SAAnH,EAA8H,SAASsI,kCAAT,CAA4CtI,MAA5C,EAAoD;AAAE,qBAAOlR,GAAG,CAACqR,cAAJ,CAAmBH,MAAnB,CAAP;AAAoC,aAAxN,EAA0N,OAA1N,EAAmO,SAASuI,gCAAT,GAA4C;AAAE,qBAAOzZ,GAAG,CAAC4N,KAAJ,EAAP;AAAqB,aAAtS,EAAwS,MAAxS,EAAgT,SAAS8L,+BAAT,GAA2C;AAAE,qBAAO1Z,GAAG,CAAC2Z,KAAJ,EAAP;AAAqB,aAAlX;AACH;;AAAC,cAAI5Z,EAAE,GAAG,CAAT,EAAY;AACV,sEAAmB,UAAnB,EAA+BC,GAAG,CAAC0L,QAAJ,GAAe,IAAf,GAAsB1L,GAAG,CAACsW,QAAzD,EAAmE,UAAnE,EAA+EtW,GAAG,CAAC0L,QAAJ,IAAgB,IAA/F,EAAqG,eAArG,EAAsH1L,GAAG,CAAC0L,QAAJ,CAAa6F,QAAb,EAAtH,EAA+I,eAA/I,EAAgKvR,GAAG,CAAC4Z,YAApK;;AACA,sEAAmB,mBAAnB,EAAwC5Z,GAAG,CAACgO,QAA5C,EAAsD,sBAAtD,EAA8EhO,GAAG,CAACkZ,MAAlF,EAA0F,6BAA1F,EAAyHlZ,GAAG,CAACmZ,YAAJ,IAAoBnZ,GAAG,CAACoZ,UAAjJ,EAA6J,mBAA7J,EAAkLpZ,GAAG,CAAC0L,QAAtL,EAAgM,yBAAhM,EAA2N1L,GAAG,CAAC6X,mBAA/N;AACH;AAAE,SAdiC;AAc/BtT,cAAM,EAAE;AAAEsV,eAAK,EAAE,OAAT;AAAkBrV,uBAAa,EAAE,eAAjC;AAAkD8R,kBAAQ,EAAE,UAA5D;AAAwEtI,kBAAQ,EAAE,UAAlF;AAA8FhM,eAAK,EAAE,OAArG;AAA8GmW,oBAAU,EAAE,YAA1H;AAAwIzM,kBAAQ,EAAE,UAAlJ;AAA8JiN,mBAAS,EAAE;AAAzK,SAduB;AAciKjU,eAAO,EAAE;AAAEuS,yBAAe,EAAE,iBAAnB;AAAsCC,mBAAS,EAAE,WAAjD;AAA8DC,iBAAO,EAAE;AAAvE,SAd1K;AAc8PxS,gBAAQ,EAAE,CAAC,SAAD,CAdxQ;AAcqRC,gBAAQ,EAAE,CAAC,wEAAD;AAd/R,OAAzB,CAAf;AAeA;;AACAqR,aAAO,CAACzQ,cAAR,GAAyB;AAAA,eAAM,CAC3B;AAAE7B,cAAI,EAAE;AAAR,SAD2B,EAE3B;AAAEA,cAAI,EAAE;AAAR,SAF2B,EAG3B;AAAEA,cAAI,EAAE;AAAR,SAH2B,EAI3B;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,gFAAD;AAAtB,WAArB;AAA/B,SAJ2B,EAK3B;AAAEhC,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,0FAAD;AAAtB,WAArB;AAA5B,SAL2B,EAM3B;AAAEhC,cAAI,EAAE;AAAR,SAN2B,EAO3B;AAAEA,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE,uDAAR;AAAmBgC,gBAAI,EAAE,CAAC,UAAD;AAAzB,WAAD;AAA5B,SAP2B,EAQ3B;AAAEhC,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAR2B,CAAN;AAAA,OAAzB;;AAUAsQ,aAAO,CAACrQ,cAAR,GAAyB;AACrBsT,cAAM,EAAE,CAAC;AAAEvV,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAACkQ,aAAD;AAA5B,SAAD,CADa;AAErBsD,oBAAY,EAAE,CAAC;AAAExV,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAACoQ,mBAAD;AAA5B,SAAD,CAFO;AAGrBqD,kBAAU,EAAE,CAAC;AAAEzV,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAAC;AAAY;AAC1D;AACA;AACgB;AAAA,mBAAMsT,aAAN;AAAA,WAH8B,CAAD;AAA5B,SAAD,CAHS;AAOrBjL,gBAAQ,EAAE,CAAC;AAAErK,cAAI,EAAE;AAAR,SAAD,CAPW;AAQrB3B,aAAK,EAAE,CAAC;AAAE2B,cAAI,EAAE;AAAR,SAAD,CARc;AASrBwU,kBAAU,EAAE,CAAC;AAAExU,cAAI,EAAE;AAAR,SAAD,CATS;AAUrB+H,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE;AAAR,SAAD,CAVW;AAWrBgV,iBAAS,EAAE,CAAC;AAAEhV,cAAI,EAAE;AAAR,SAAD,CAXU;AAYrBsT,uBAAe,EAAE,CAAC;AAAEtT,cAAI,EAAE;AAAR,SAAD,CAZI;AAarBuT,iBAAS,EAAE,CAAC;AAAEvT,cAAI,EAAE;AAAR,SAAD,CAbU;AAcrBwT,eAAO,EAAE,CAAC;AAAExT,cAAI,EAAE;AAAR,SAAD;AAdY,OAAzB;;AAgBA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBmQ,OAAzB,EAAkC,CAAC;AAC7FtS,cAAI,EAAE,uDADuF;AAE7FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,0DADT;AAECxB,kBAAM,EAAE,CAAC,OAAD,EAAU,eAAV,EAA2B,UAA3B,CAFT;AAGCI,oBAAQ,EAAE,SAHX;AAICuB,gBAAI,EAAE;AACF,uBAAS,8BADP;AAEF,iCAAmB,4BAFjB;AAGF,sBAAQ,QAHN;AAIF,2CAA6B,UAJ3B;AAKF,8CAAgC,QAL9B;AAMF,qDAAuC,4BANrC;AAOF,2CAA6B,UAP3B;AAQF,iDAAmC,qBARjC;AASF,iCAAmB,kBATjB;AAUF,sCAAwB,qBAVtB;AAWF,sCAAwB,cAXtB;AAYF,yBAAW,sBAZT;AAaF,2BAAa,wBAbX;AAcF,yBAAW,SAdT;AAeF,wBAAU;AAfR;AAJP,WAAD;AAFuF,SAAD,CAAlC,EAwB1D,YAAY;AAAE,iBAAO,CAAC;AAAEvC,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAuD;AAAEA,gBAAI,EAAE;AAAR,WAAvD,EAAkF;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC/H/B,kBAAI,EAAE;AADyH,aAAD,EAE/H;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,gFAAD;AAFP,aAF+H;AAA/B,WAAlF,EAKX;AAAEhC,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AAC/B/B,kBAAI,EAAE;AADyB,aAAD,EAE/B;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,0FAAD;AAFP,aAF+B;AAA5B,WALW,EAUX;AAAEhC,gBAAI,EAAE;AAAR,WAVW,EAUyB;AAAEA,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AACnE/B,kBAAI,EAAE,uDAD6D;AAEnEgC,kBAAI,EAAE,CAAC,UAAD;AAF6D,aAAD;AAA5B,WAVzB,EAaX;AAAEhC,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC/B,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFkC;AAA/B,WAbW,CAAP;AAkBF,SA1C8C,EA0C5C;AAAEsR,yBAAe,EAAE,CAAC;AAC9BtT,gBAAI,EAAE;AADwB,WAAD,CAAnB;AAEVuT,mBAAS,EAAE,CAAC;AACZvT,gBAAI,EAAE;AADM,WAAD,CAFD;AAIVwT,iBAAO,EAAE,CAAC;AACVxT,gBAAI,EAAE;AADI,WAAD,CAJC;AAMVqK,kBAAQ,EAAE,CAAC;AACXrK,gBAAI,EAAE;AADK,WAAD,CANA;AAQV3B,eAAK,EAAE,CAAC;AACR2B,gBAAI,EAAE;AADE,WAAD,CARG;AAUVwU,oBAAU,EAAE,CAAC;AACbxU,gBAAI,EAAE;AADO,WAAD,CAVF;AAYV+H,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE;AADK,WAAD,CAZA;AAcVgV,mBAAS,EAAE,CAAC;AACZhV,gBAAI,EAAE;AADM,WAAD,CAdD;AAgBVuV,gBAAM,EAAE,CAAC;AACTvV,gBAAI,EAAE,0DADG;AAETgC,gBAAI,EAAE,CAACkQ,aAAD;AAFG,WAAD,CAhBE;AAmBVsD,sBAAY,EAAE,CAAC;AACfxV,gBAAI,EAAE,0DADS;AAEfgC,gBAAI,EAAE,CAACoQ,mBAAD;AAFS,WAAD,CAnBJ;AAsBVqD,oBAAU,EAAE,CAAC;AACbzV,gBAAI,EAAE,0DADO;AAEbgC,gBAAI,EAAE,CAAC;AAAa;AAChC;AACA;AAA+B;AAAA,qBAAMsT,aAAN;AAAA,aAFZ,CAAD;AAFO,WAAD;AAtBF,SA1C4C,CAAnD;AAqEC,OArEhB;;AAsEA,UAAI,KAAJ,EAAW,CAuIV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMA,a;AACF;AACJ;AACA;AACA;AACI,+BAAYc,WAAZ,EACA;AACA1T,kBAFA,EAEY;AAAA;;AACR,eAAK0T,WAAL,GAAmBA,WAAnB,CADQ,CAER;;AACA,cAAI1T,UAAU,IAAIA,UAAU,CAAC7D,aAAX,CAAyBwX,QAAzB,KAAsC,QAAxD,EAAkE;AAC9D3T,sBAAU,CAAC7D,aAAX,CAAyByX,YAAzB,CAAsC,MAAtC,EAA8C,QAA9C;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;;iBACI,sBAAa3W,KAAb,EAAoB;AAChB;AACA,gBAAM4W,UAAU,GAAG,KAAKH,WAAxB;;AACA,gBAAIG,UAAU,CAACvB,SAAX,IAAwB,CAACuB,UAAU,CAACxO,QAAxC,EAAkD;AAC9CwO,wBAAU,CAACtB,MAAX;AACH,aALe,CAMhB;AACA;AACA;AACA;AACA;;;AACAtV,iBAAK,CAACmL,eAAN;AACH;;;;;;AAELwK,mBAAa,CAAC1V,IAAd,GAAqB,SAAS4W,qBAAT,CAA+B1W,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIwV,aAAV,EAAyB,gEAAyBhD,OAAzB,CAAzB,EAA4D,gEAAyB,wDAAzB,CAA5D,CAAP;AAAkH,OAA3K;;AACAgD,mBAAa,CAAC1S,IAAd,GAAqB,gEAAyB;AAAE5C,YAAI,EAAEsV,aAAR;AAAuBrV,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAlC;AAA+DU,iBAAS,EAAE,CAAC,CAAD,EAAI,iBAAJ,EAAuB,wBAAvB,CAA1E;AAA4HsM,oBAAY,EAAE,SAASwJ,0BAAT,CAAoCra,EAApC,EAAwCC,GAAxC,EAA6C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC3O,qEAAkB,OAAlB,EAA2B,SAASsa,sCAAT,CAAgDnJ,MAAhD,EAAwD;AAAE,qBAAOlR,GAAG,CAACuZ,YAAJ,CAAiBrI,MAAjB,CAAP;AAAkC,aAAvH;AACH;AAAE;AAFuC,OAAzB,CAArB;AAGA;;AACA+H,mBAAa,CAACzT,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAE7B,cAAI,EAAEsS;AAAR,SADiC,EAEjC;AAAEtS,cAAI,EAAE;AAAR,SAFiC,CAAN;AAAA,OAA/B;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBmT,aAAzB,EAAwC,CAAC;AACnGtV,cAAI,EAAE,uDAD6F;AAEnGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,iBADX;AAECG,gBAAI,EAAE;AACF,uBAAS,wCADP;AAEF,yBAAW;AAFT;AAFP,WAAD;AAF6F,SAAD,CAAxC,EAS1D,YAAY;AAAE,iBAAO,CAAC;AAAEvC,gBAAI,EAAEsS;AAAR,WAAD,EAAoB;AAAEtS,gBAAI,EAAE;AAAR,WAApB,CAAP;AAA0D,SATd,EASgB,IAThB,CAAnD;AAS2E,OAT1F;;AAUA,UAAI,KAAJ,EAAW,CAMV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAAS2W,sBAAT,GAAkC,CAAG;;AACrC,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;;;AACA,UAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;UACMC,e;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,+BAAYC,yBAAZ,EAAuCC,WAAvC,EAAoDC,gBAApD,EAAsEC,SAAtE,EAAiF;AAAA;;AAC7E,aAAKH,yBAAL,GAAiCA,yBAAjC;AACA,aAAKC,WAAL,GAAmBA,WAAnB;AACA,aAAKC,gBAAL,GAAwBA,gBAAxB;AACA,aAAKC,SAAL,GAAiBA,SAAjB;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAYV;AACD;;;AACA,UAAMC,qBAAqB,GAAG,+EAAgBL,eAAhB,CAA9B,C,CACA;;AACA;;;AACA,UAAIM,YAAY,GAAG,CAAnB;AACA;AACA;AACA;;UACMC,iB;AACF;AACJ;AACA;AACA;AACI,iCAAYxa,MAAZ,EAAoByB,KAApB,EAA2B;AAAA;;AACvB,aAAKzB,MAAL,GAAcA,MAAd;AACA,aAAKyB,KAAL,GAAaA,KAAb;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;;;UACMgZ,W;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,6BAAY5Z,WAAZ,EAAyBD,kBAAzB,EAA6CyG,IAA7C,EAAmD8S,WAAnD,EAAgEC,gBAAhE,EAAkFF,yBAAlF,EAA6GG,SAA7G,EAAwH;AAAA;;AAAA;;AACpH,uCAAMH,yBAAN,EAAiCC,WAAjC,EAA8CC,gBAA9C,EAAgEC,SAAhE;AACA,kBAAKxZ,WAAL,GAAmBA,WAAnB;AACA,kBAAKD,kBAAL,GAA0BA,kBAA1B;AACA,kBAAKyG,IAAL,GAAYA,IAAZ;AACA,kBAAKgT,SAAL,GAAiBA,SAAjB;AACA;AACR;AACA;AACA;;AACQ,kBAAKK,WAAL,GAAmB,eAAnB;AACA;AACR;AACA;AACA;AACA;;AACQ,kBAAKC,uBAAL,GAA+B,IAA/B;AACA;AACR;AACA;;AACQ,kBAAKC,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;AACR;AACA;;AACQ,kBAAKC,IAAL,2BAA6BN,YAAY,EAAzC;AACA;AACR;AACA;;AACQ,kBAAKO,SAAL,GAAiB,CAAjB;AACA;AACR;AACA;AACA;;AACQ,kBAAKC,aAAL,GAAqB,IAArB;AACA;AACR;AACA;;AACQ,kBAAK5S,UAAL;AAAmB;AAC3B;AACA;AACQ,sBAAM,CAAG,CAHT;AAIA;AACR;AACA;;;AACQ,kBAAKD,SAAL;AAAkB;AAC1B;AACA;AACQ,sBAAM,CAAG,CAHT;;AAIA,kBAAK8S,SAAL,GAAiB,KAAjB;;AACA,kBAAKC,YAAL;AAAqB;AAC7B;AACA;AACA;AACA;AACQ,oBAACC,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,KAAKC,EAAnB;AAAA,WALA;;AAMA,kBAAKC,SAAL,GAAiB,KAAjB;AACA,kBAAK9E,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,kBAAK+E,eAAL,GAAuB,YAAvB;AACA,kBAAKhF,WAAL,GAAmB,IAAnB;AACA;AACR;AACA;;AACQ,kBAAKhU,MAAL,GAAc,IAAI,0DAAJ,EAAd;AACA;AACR;AACA;AACA;AACA;;AACQ,kBAAKiZ,WAAL,GAAmB,IAAI,0DAAJ,EAAnB;;AACA,cAAI,QAAKjB,SAAT,EAAoB;AAChB,oBAAKA,SAAL,CAAekB,aAAf;AACH;;AA1EmH;AA2EvH;AACD;AACJ;AACA;AACA;;;;;eACI,eAAe;AACX,mBAAO,KAAKC,QAAL,GAAgB,KAAKC,eAAL,CAAqBhO,QAArC,GAAgD,KAAKgO,eAAL,CAAqBhO,QAArB,CAA8B,CAA9B,CAAvD;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAW;AAAE,mBAAO,KAAKiO,KAAL,GAAa,IAAb,GAAoB,SAA3B;AAAuC;AACpD;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKV,SAAZ;AAAwB;AACzC;AACJ;AACA;AACA;;eACI,aAAavZ,KAAb,EAAoB;AAChB,iBAAKuZ,SAAL,GAAiB,oFAAsBvZ,KAAtB,CAAjB;;AACA,iBAAKka,eAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;eACI,eAAkB;AAAE,mBAAO,KAAKV,YAAZ;AAA2B;AAC/C;AACJ;AACA;AACA;;eACI,aAAgBhQ,EAAhB,EAAoB;AAChB,iBAAKgQ,YAAL,GAAoBhQ,EAApB;;AACA,gBAAI,KAAKwQ,eAAT,EAA0B;AACtB;AACA,mBAAKG,oBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAY;AAAE,mBAAO,KAAKlE,MAAZ;AAAqB;AACnC;AACJ;AACA;AACA;;eACI,aAAUjW,KAAV,EAAiB;AACb,iBAAKoa,UAAL,CAAgBpa,KAAhB;AACA,iBAAKiW,MAAL,GAAcjW,KAAd;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAS;AACL,mBAAO,KAAKqa,UAAL,GAAkB,KAAKA,UAAL,CAAgBnc,EAAlC,GAAuC,KAAKkb,IAAnD;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKO,SAAZ;AAAwB;AACzC;AACJ;AACA;AACA;;eACI,aAAa3Z,KAAb,EAAoB;AAChB,iBAAK2Z,SAAL,GAAiB,oFAAsB3Z,KAAtB,CAAjB;AACA,iBAAKsa,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAkB;AACd,mBAAO,KAAK6N,UAAL,GAAkB,KAAKA,UAAL,CAAgBE,WAAlC,GAAgD,KAAKC,YAA5D;AACH;AACD;AACJ;AACA;AACA;;eACI,aAAgBxa,KAAhB,EAAuB;AACnB,iBAAKwa,YAAL,GAAoBxa,KAApB;AACA,iBAAKsa,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAc;AACV,mBAAQ,KAAK6N,UAAL,IAAmB,KAAKA,UAAL,CAAgBI,OAApC,IAAgD,KAAKC,eAAL,EAAvD;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAY;AACR,mBAAO,CAAC,CAAC,KAAKL,UAAN,IAAoB,KAAKA,UAAL,CAAgBJ,KAArC,KAA+C,KAAKU,KAAL,CAAW1a,MAAX,KAAsB,CAA5E;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAuB;AAAE,mBAAO,CAAC,KAAKga,KAAN,IAAe,KAAKQ,OAA3B;AAAqC;AAC9D;AACJ;AACA;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAK7B,SAAL,GAAiB,CAAC,CAAC,KAAKA,SAAL,CAAelP,QAAlC,GAA6C,KAAKmL,SAAzD;AAAqE;AACtF;AACJ;AACA;AACA;;eACI,aAAa7U,KAAb,EAAoB;AAChB,iBAAK6U,SAAL,GAAiB,oFAAsB7U,KAAtB,CAAjB;;AACA,iBAAKka,eAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAiB;AAAE,mBAAO,KAAKtF,WAAZ;AAA0B;AAC7C;AACJ;AACA;AACA;;eACI,aAAe5U,KAAf,EAAsB;AAAA;;AAClB,iBAAK4U,WAAL,GAAmB,oFAAsB5U,KAAtB,CAAnB;;AACA,gBAAI,KAAK2a,KAAT,EAAgB;AACZ,mBAAKA,KAAL,CAAW5O,OAAX;AAAoB;AAChC;AACA;AACA;AACY,wBAAAyK,IAAI;AAAA,uBAAIA,IAAI,CAAChC,kBAAL,GAA0B,OAAI,CAACI,WAAnC;AAAA,eAJJ;AAKH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,aAAa5U,KAAb,EAAoB;AAChB,iBAAKsZ,aAAL,GAAqBtZ,KAArB;AACA,iBAAKqZ,SAAL,GAAiBrZ,KAAjB;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAA2B;AACvB,mBAAO,oFAAS,KAAK2a,KAAL,CAAW3T,GAAX;AAAgB;AACxC;AACA;AACA;AACQ,sBAAAwP,IAAI;AAAA,qBAAIA,IAAI,CAACvB,eAAT;AAAA,aAJY,CAAT,EAAP;AAKH;AACD;AACJ;AACA;AACA;;;;eACI,eAAuB;AACnB,mBAAO,oFAAS,KAAK0F,KAAL,CAAW3T,GAAX;AAAgB;AACxC;AACA;AACA;AACQ,sBAAAwP,IAAI;AAAA,qBAAIA,IAAI,CAACzB,QAAT;AAAA,aAJY,CAAT,EAAP;AAKH;AACD;AACJ;AACA;AACA;;;;eACI,eAAsB;AAClB,mBAAO,oFAAS,KAAK4F,KAAL,CAAW3T,GAAX;AAAgB;AACxC;AACA;AACA;AACQ,sBAAAwP,IAAI;AAAA,qBAAIA,IAAI,CAACxB,OAAT;AAAA,aAJY,CAAT,EAAP;AAKH;AACD;AACJ;AACA;AACA;;;;eACI,eAAwB;AACpB,mBAAO,oFAAS,KAAK2F,KAAL,CAAW3T,GAAX;AAAgB;AACxC;AACA;AACA;AACQ,sBAAAwP,IAAI;AAAA,qBAAIA,IAAI,CAACtB,SAAT;AAAA,aAJY,CAAT,EAAP;AAKH;AACD;AACJ;AACA;;;;iBACI,8BAAqB;AAAA;;AACjB,iBAAKzU,WAAL,GAAmB,IAAI,iEAAJ,CAAoB,KAAKka,KAAzB,EACdha,QADc,GAEdia,uBAFc,GAGdC,yBAHc,CAGY,KAAKjV,IAAL,GAAY,KAAKA,IAAL,CAAU5F,KAAtB,GAA8B,KAH1C,CAAnB;;AAIA,gBAAI,KAAK4F,IAAT,EAAe;AACX,mBAAKA,IAAL,CAAUhF,MAAV,CACKwG,IADL,CACU,iEAAU,KAAK+R,UAAf,CADV,EAEKtY,SAFL;AAEgB;AAC5B;AACA;AACA;AACY,wBAAAia,GAAG;AAAA,uBAAI,OAAI,CAACra,WAAL,CAAiBoa,yBAAjB,CAA2CC,GAA3C,CAAJ;AAAA,eANH;AAOH;;AACD,iBAAKra,WAAL,CAAiBgI,MAAjB,CAAwBrB,IAAxB,CAA6B,iEAAU,KAAK+R,UAAf,CAA7B,EAAyDtY,SAAzD;AAAoE;AAC5E;AACA;AACQ,wBAAM;AACF,qBAAI,CAACka,iBAAL;AACH,aALD,EAdiB,CAoBjB;;;AACA,iBAAKJ,KAAL,CAAWjT,OAAX,CAAmBN,IAAnB,CAAwB,iEAAU,IAAV,CAAxB,EAAyC,iEAAU,KAAK+R,UAAf,CAAzC,EAAqEtY,SAArE;AAAgF;AACxF;AACA;AACQ,wBAAM;AACF,kBAAI,OAAI,CAAC6I,QAAT,EAAmB;AACf;AACA;AACAN,uBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;AACxC;AACA;AACgB,4BAAM;AACF,yBAAI,CAAC4Q,eAAL;AACH,iBALD;AAMH;;AACD,qBAAI,CAACc,WAAL,GAXE,CAYF;;;AACA,qBAAI,CAACb,oBAAL,GAbE,CAcF;;;AACA,qBAAI,CAACc,eAAL,GAfE,CAgBF;;;AACA,qBAAI,CAACC,6BAAL;;AACA,qBAAI,CAACZ,YAAL,CAAkB9N,IAAlB;AACH,aAtBD;AAuBH;AACD;AACJ;AACA;;;;iBACI,oBAAW;AACP,iBAAKwN,eAAL,GAAuB,IAAI,wEAAJ,CAAmB,KAAKD,QAAxB,EAAkCtW,SAAlC,EAA6C,KAA7C,CAAvB;AACA,iBAAK6W,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;;;;iBACI,qBAAY;AACR,gBAAI,KAAKoM,SAAT,EAAoB;AAChB;AACA;AACA;AACA,mBAAKuC,gBAAL;;AACA,kBAAI,KAAKvC,SAAL,CAAelP,QAAf,KAA4B,KAAKmL,SAArC,EAAgD;AAC5C,qBAAKnL,QAAL,GAAgB,CAAC,CAAC,KAAKkP,SAAL,CAAelP,QAAjC;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAKyP,UAAL,CAAgB3M,IAAhB;;AACA,iBAAK2M,UAAL,CAAgBlR,QAAhB;;AACA,iBAAKqS,YAAL,CAAkBrS,QAAlB;;AACA,iBAAKmT,kBAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,uBAAcC,YAAd,EAA4B;AACxB,iBAAKhB,UAAL,GAAkBgB,YAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBC,GAAlB,EAAuB;AAAE,iBAAKC,gBAAL,GAAwBD,GAAG,CAACE,IAAJ,CAAS,GAAT,CAAxB;AAAwC,W,CACjE;;AACA;AACJ;AACA;AACA;;;;iBACI,oBAAWxb,KAAX,EAAkB;AACd,gBAAI,KAAK2a,KAAT,EAAgB;AACZ,mBAAKc,oBAAL,CAA0Bzb,KAA1B,EAAiC,KAAjC;AACH;AACJ,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,0BAAiBwJ,EAAjB,EAAqB;AACjB,iBAAK/C,SAAL,GAAiB+C,EAAjB;AACH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,2BAAkBA,EAAlB,EAAsB;AAClB,iBAAK9C,UAAL,GAAkB8C,EAAlB;AACH,W,CACD;;AACA;AACJ;AACA;AACA;;;;iBACI,0BAAiBC,UAAjB,EAA6B;AACzB,iBAAKC,QAAL,GAAgBD,UAAhB;AACA,iBAAK6Q,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,0BAAiBlL,KAAjB,EAAwB;AACpB,gBAAI,CAAC,KAAKoa,mBAAL,CAAyBpa,KAAzB,CAAL,EAAsC;AAClC,mBAAKsK,KAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,eAAMlL,OAAN,EAAe;AACX,gBAAI,KAAKgJ,QAAT,EAAmB;AACf;AACH,aAHU,CAIX;AACA;;;AACA,gBAAI,KAAK2Q,UAAL,IAAmB,KAAKA,UAAL,CAAgBI,OAAvC,EAAgD,CAC5C;AACH,aAFD,MAGK,IAAI,KAAKE,KAAL,CAAW1a,MAAX,GAAoB,CAAxB,EAA2B;AAC5B,mBAAKQ,WAAL,CAAiBkb,kBAAjB;;AACA,mBAAKrB,YAAL,CAAkB9N,IAAlB;AACH,aAHI,MAIA;AACD,mBAAKoP,WAAL,CAAiBlb,OAAjB;;AACA,mBAAK4Z,YAAL,CAAkB9N,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,qBAAY9L,OAAZ,EAAqB;AACjB,gBAAI,KAAK2Z,UAAT,EAAqB;AACjB,mBAAKA,UAAL,CAAgBzO,KAAhB,CAAsBlL,OAAtB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kBAASY,KAAT,EAAgB;AACZ;AACA,gBAAM0H,MAAM;AAAI;AAAkB1H,iBAAK,CAAC0H,MAAxC,CAFY,CAGZ;;AACA,gBAAI1H,KAAK,CAACqI,OAAN,KAAkB,+DAAlB,IAA+B,KAAKkS,aAAL,CAAmB7S,MAAnB,CAAnC,EAA+D;AAC3D,mBAAKvI,WAAL,CAAiBqb,iBAAjB;;AACAxa,mBAAK,CAACsI,cAAN;AACH,aAHD,MAIK,IAAIZ,MAAM,IAAIA,MAAM,CAAC5I,SAAP,CAAiB8I,QAAjB,CAA0B,UAA1B,CAAd,EAAqD;AACtD,kBAAI5H,KAAK,CAACqI,OAAN,KAAkB,0DAAtB,EAA4B;AACxB,qBAAKlJ,WAAL,CAAiBkb,kBAAjB;;AACAra,qBAAK,CAACsI,cAAN;AACH,eAHD,MAIK,IAAItI,KAAK,CAACqI,OAAN,KAAkB,yDAAtB,EAA2B;AAC5B,qBAAKlJ,WAAL,CAAiBqb,iBAAjB;;AACAxa,qBAAK,CAACsI,cAAN;AACH,eAHI,MAIA;AACD,qBAAKnJ,WAAL,CAAiByJ,SAAjB,CAA2B5I,KAA3B;AACH;;AACD,mBAAKgZ,YAAL,CAAkB9N,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB;AACd;AACA,iBAAK6M,SAAL,GAAiB,KAAKC,aAAL,KAAuB,KAAKqB,KAAL,CAAW1a,MAAX,KAAsB,CAAtB,GAA0B,CAAC,CAA3B,GAA+B,CAAtD,CAAjB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,yCAAgC;AAC5B;AACA,gBAAI,KAAKiZ,uBAAL,IAAgC,IAApC,EAA0C;AACtC,kBAAI,KAAKyB,KAAL,CAAW1a,MAAf,EAAuB;AACnB;AACA,oBAAM8b,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAK/C,uBAAd,EAAuC,KAAKyB,KAAL,CAAW1a,MAAX,GAAoB,CAA3D,CAArB;;AACA,qBAAKQ,WAAL,CAAiB4N,aAAjB,CAA+B0N,YAA/B;AACH,eAJD,MAKK;AACD,qBAAKnQ,KAAL;AACH;AACJ;;AACD,iBAAKsN,uBAAL,GAA+B,IAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,uBAAcpY,KAAd,EAAqB;AACjB,mBAAOA,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,KAAK6Z,KAAL,CAAW1a,MAAxC;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,uBAAcqO,OAAd,EAAuB;AACnB,gBAAIA,OAAO,IAAIA,OAAO,CAAC0J,QAAR,CAAiBzB,WAAjB,OAAmC,OAAlD,EAA2D;AACvD;AACA,kBAAI2F,KAAK;AAAI;AAAkB5N,qBAA/B;AACA,qBAAO,CAAC4N,KAAK,CAAClc,KAAd;AACH;;AACD,mBAAO,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,8BAAqBA,KAArB,EAAgD;AAAA;;AAAA,gBAApB0T,WAAoB,uEAAN,IAAM;;AAC5C,iBAAKyI,eAAL;;AACA,iBAAKxB,KAAL,CAAW5O,OAAX;AAAoB;AAC5B;AACA;AACA;AACQ,sBAAAyK,IAAI;AAAA,qBAAIA,IAAI,CAACvK,QAAL,EAAJ;AAAA,aAJJ;;AAKA,gBAAIuE,KAAK,CAAC4L,OAAN,CAAcpc,KAAd,CAAJ,EAA0B;AACtBA,mBAAK,CAAC+L,OAAN;AAAe;AAC3B;AACA;AACA;AACY,wBAAAsQ,YAAY;AAAA,uBAAI,OAAI,CAACC,YAAL,CAAkBD,YAAlB,EAAgC3I,WAAhC,CAAJ;AAAA,eAJZ;;AAKA,mBAAK6I,WAAL;AACH,aAPD,MAQK;AACD;AACA,kBAAMC,iBAAiB,GAAG,KAAKF,YAAL,CAAkBtc,KAAlB,EAAyB0T,WAAzB,CAA1B,CAFC,CAGD;AACA;;;AACA,kBAAI8I,iBAAJ,EAAuB;AACnB,oBAAI9I,WAAJ,EAAiB;AACb,uBAAKjT,WAAL,CAAiB4N,aAAjB,CAA+BmO,iBAA/B;AACH;AACJ;AACJ;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,sBAAaxc,KAAb,EAAwC;AAAA;;AAAA,gBAApB0T,WAAoB,uEAAN,IAAM;;AACpC;AACA,gBAAM8I,iBAAiB,GAAG,KAAK7B,KAAL,CAAW8B,IAAX;AAAiB;AACnD;AACA;AACA;AACQ,sBAAAjG,IAAI,EAAI;AACJ,qBAAOA,IAAI,CAACxW,KAAL,IAAc,IAAd,IAAsB,OAAI,CAACwZ,YAAL,CAAkBhD,IAAI,CAACxW,KAAvB,EAA8BA,KAA9B,CAA7B;AACH,aANyB,CAA1B;;AAOA,gBAAIwc,iBAAJ,EAAuB;AACnB9I,yBAAW,GAAG8I,iBAAiB,CAACE,oBAAlB,EAAH,GAA8CF,iBAAiB,CAACG,MAAlB,EAAzD;;AACA,mBAAK3C,eAAL,CAAqB2C,MAArB,CAA4BH,iBAA5B;AACH;;AACD,mBAAOA,iBAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AAAA;;AACnB;AACA;AACApT,mBAAO,CAACC,OAAR,GAAkBC,IAAlB;AAAwB;AAChC;AACA;AACQ,wBAAM;AACF,kBAAI,OAAI,CAACsP,SAAL,IAAkB,OAAI,CAAC3C,MAA3B,EAAmC;AAC/B,uBAAI,CAACwF,oBAAL,CAA0B,OAAI,CAAC7C,SAAL,GAAiB,OAAI,CAACA,SAAL,CAAe5Y,KAAhC,GAAwC,OAAI,CAACiW,MAAvE,EAA+E,KAA/E;;AACA,uBAAI,CAACqE,YAAL,CAAkB9N,IAAlB;AACH;AACJ,aARD;AASH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,yBAAgBV,IAAhB,EAAsB;AAClB,iBAAKkO,eAAL,CAAqB4C,KAArB;;AACA,iBAAKjC,KAAL,CAAW5O,OAAX;AAAoB;AAC5B;AACA;AACA;AACQ,sBAAAyK,IAAI,EAAI;AACJ,kBAAIA,IAAI,KAAK1K,IAAb,EAAmB;AACf0K,oBAAI,CAACvK,QAAL;AACH;AACJ,aARD;AASA,iBAAKqO,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,uBAAc;AAAA;;AACV,gBAAI,KAAK+M,SAAT,EAAoB;AAChB,mBAAKS,eAAL,CAAqB4C,KAArB;;AACA,mBAAKjC,KAAL,CAAW5O,OAAX;AAAoB;AAChC;AACA;AACA;AACY,wBAAAyK,IAAI,EAAI;AACJ,oBAAIA,IAAI,CAACxK,QAAT,EAAmB;AACf,yBAAI,CAACgO,eAAL,CAAqB2C,MAArB,CAA4BnG,IAA5B;AACH;AACJ,eARD;AASA,mBAAK8D,YAAL,CAAkB9N,IAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBqQ,aAAlB,EAAiC;AAC7B;AACA,gBAAIC,WAAW,GAAG,IAAlB;;AACA,gBAAItM,KAAK,CAAC4L,OAAN,CAAc,KAAKpQ,QAAnB,CAAJ,EAAkC;AAC9B8Q,yBAAW,GAAG,KAAK9Q,QAAL,CAAchF,GAAd;AAAmB;AAC7C;AACA;AACA;AACY,wBAAAwP,IAAI;AAAA,uBAAIA,IAAI,CAACxW,KAAT;AAAA,eAJU,CAAd;AAKH,aAND,MAOK;AACD8c,yBAAW,GAAG,KAAK9Q,QAAL,GAAgB,KAAKA,QAAL,CAAchM,KAA9B,GAAsC6c,aAApD;AACH;;AACD,iBAAK5G,MAAL,GAAc6G,WAAd;AACA,iBAAKlc,MAAL,CAAYG,IAAZ,CAAiB,IAAIgY,iBAAJ,CAAsB,IAAtB,EAA4B+D,WAA5B,CAAjB;AACA,iBAAKjD,WAAL,CAAiB9Y,IAAjB,CAAsB+b,WAAtB;;AACA,iBAAKrW,SAAL,CAAeqW,WAAf;;AACA,iBAAK3d,kBAAL,CAAwBkC,YAAxB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQ;AAAA;;AACJ,gBAAI,CAAC,KAAKqZ,eAAL,EAAL,EAA6B;AACzB,mBAAKja,WAAL,CAAiB4N,aAAjB,CAA+B,CAAC,CAAhC;AACH;;AACD,gBAAI,CAAC,KAAK3E,QAAV,EAAoB;AAChB,kBAAI,KAAK2Q,UAAT,EAAqB;AACjB;AACA;AACA;AACA;AACAzJ,0BAAU;AAAE;AAC5B;AACA;AACgB,4BAAM;AACF,sBAAI,CAAC,OAAI,CAAC6J,OAAV,EAAmB;AACf,2BAAI,CAACsC,cAAL;AACH;AACJ,iBAPS,CAAV;AAQH,eAbD,MAcK;AACD;AACA,qBAAKA,cAAL;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,0BAAiB;AACb,iBAAKrW,UAAL;;AACA,iBAAKvH,kBAAL,CAAwBkC,YAAxB;;AACA,iBAAKiZ,YAAL,CAAkB9N,IAAlB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,6BAAoB;AAAA;;AAChB,gBAAI,KAAK6M,SAAL,KAAmB,CAAC,CAAxB,EAA2B;AACvB,mBAAKA,SAAL,GAAiB,CAAC,CAAlB;AACAzI,wBAAU;AAAE;AACxB;AACA;AACY,0BAAM;AACF,uBAAI,CAACyI,SAAL,GAAiB,OAAI,CAACC,aAAL,IAAsB,CAAvC;;AACA,uBAAI,CAACna,kBAAL,CAAwBkC,YAAxB;AACH,eANS,CAAV;AAOH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAc;AACV,iBAAK+Z,kBAAL;;AACA,iBAAK4B,mBAAL;;AACA,iBAAKC,uBAAL;;AACA,iBAAKC,qBAAL;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,8BAAqB;AACjB,gBAAI,KAAKC,sBAAT,EAAiC;AAC7B,mBAAKA,sBAAL,CAA4Bjc,WAA5B;;AACA,mBAAKic,sBAAL,GAA8B,IAA9B;AACH;;AACD,gBAAI,KAAKC,qBAAT,EAAgC;AAC5B,mBAAKA,qBAAL,CAA2Blc,WAA3B;;AACA,mBAAKkc,qBAAL,GAA6B,IAA7B;AACH;;AACD,gBAAI,KAAKC,0BAAT,EAAqC;AACjC,mBAAKA,0BAAL,CAAgCnc,WAAhC;;AACA,mBAAKmc,0BAAL,GAAkC,IAAlC;AACH;;AACD,gBAAI,KAAKC,uBAAT,EAAkC;AAC9B,mBAAKA,uBAAL,CAA6Bpc,WAA7B;;AACA,mBAAKoc,uBAAL,GAA+B,IAA/B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,mCAA0B;AAAA;;AACtB,iBAAKD,0BAAL,GAAkC,KAAKE,oBAAL,CAA0B1c,SAA1B;AAAqC;AAC/E;AACA;AACA;AACQ,sBAAAS,KAAK,EAAI;AACLA,mBAAK,CAAC/C,MAAN,CAAayN,QAAb,GACM,OAAI,CAACgO,eAAL,CAAqB2C,MAArB,CAA4Brb,KAAK,CAAC/C,MAAlC,CADN,GAEM,OAAI,CAACyb,eAAL,CAAqB/N,QAArB,CAA8B3K,KAAK,CAAC/C,MAApC,CAFN,CADK,CAIL;;AACA,kBAAI,CAAC,OAAI,CAACwb,QAAV,EAAoB;AAChB,uBAAI,CAACY,KAAL,CAAW5O,OAAX;AAAoB;AACpC;AACA;AACA;AACgB,0BAAAyK,IAAI,EAAI;AACJ,sBAAI,CAAC,OAAI,CAACwD,eAAL,CAAqBwD,UAArB,CAAgChH,IAAhC,CAAD,IAA0CA,IAAI,CAACxK,QAAnD,EAA6D;AACzDwK,wBAAI,CAACvK,QAAL;AACH;AACJ,iBARD;AASH;;AACD,kBAAI3K,KAAK,CAACoS,WAAV,EAAuB;AACnB,uBAAI,CAAC+J,iBAAL;AACH;AACJ,aAvBiC,CAAlC;AAwBH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,+BAAsB;AAAA;;AAClB,iBAAKN,sBAAL,GAA8B,KAAKO,gBAAL,CAAsB7c,SAAtB;AAAiC;AACvE;AACA;AACA;AACQ,sBAAAS,KAAK,EAAI;AACL;AACA,kBAAIqc,SAAS,GAAG,OAAI,CAAChD,KAAL,CAAW3Z,OAAX,GAAqB4c,OAArB,CAA6Btc,KAAK,CAACkV,IAAnC,CAAhB;;AACA,kBAAI,OAAI,CAACqH,aAAL,CAAmBF,SAAnB,CAAJ,EAAmC;AAC/B,uBAAI,CAACld,WAAL,CAAiBqd,gBAAjB,CAAkCH,SAAlC;AACH;;AACD,qBAAI,CAACrD,YAAL,CAAkB9N,IAAlB;AACH,aAX6B,CAA9B;AAYA,iBAAK4Q,qBAAL,GAA6B,KAAKW,eAAL,CAAqBld,SAArB;AAAgC;AACrE;AACA;AACQ,wBAAM;AACF,qBAAI,CAAC8W,KAAL;;AACA,qBAAI,CAAC2C,YAAL,CAAkB9N,IAAlB;AACH,aAN4B,CAA7B;AAOH;AACD;AACJ;AACA;AACA;;;;iBACI,iCAAwB;AAAA;;AACpB,iBAAK8Q,uBAAL,GAA+B,KAAKU,iBAAL,CAAuBnd,SAAvB;AAAkC;AACzE;AACA;AACA;AACQ,sBAAAS,KAAK,EAAI;AACL;AACA,kBAAMkV,IAAI,GAAGlV,KAAK,CAACkV,IAAnB;AACA;;AACA,kBAAMmH,SAAS,GAAG,OAAI,CAAChD,KAAL,CAAW3Z,OAAX,GAAqB4c,OAArB,CAA6Btc,KAAK,CAACkV,IAAnC,CAAlB,CAJK,CAKL;AACA;AACA;;;AACA,kBAAI,OAAI,CAACqH,aAAL,CAAmBF,SAAnB,KAAiCnH,IAAI,CAACjC,SAA1C,EAAqD;AACjD,uBAAI,CAAC2E,uBAAL,GAA+ByE,SAA/B;AACH;AACJ,aAf8B,CAA/B;AAgBH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,6BAAoBrc,KAApB,EAA2B;AACvB;AACA,gBAAI2c,cAAc;AAAI;AAAkB3c,iBAAK,CAAC0H,MAA9C;;AACA,mBAAOiV,cAAc,IAAIA,cAAc,KAAK,KAAK7e,WAAL,CAAiBoB,aAA7D,EAA4E;AACxE,kBAAIyd,cAAc,CAAC7d,SAAf,CAAyB8I,QAAzB,CAAkC,UAAlC,CAAJ,EAAmD;AAC/C,uBAAO,IAAP;AACH;;AACD+U,4BAAc,GAAGA,cAAc,CAACC,aAAhC;AACH;;AACD,mBAAO,KAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB;AACd,mBAAO,KAAKvD,KAAL,CAAWwD,IAAX;AAAiB;AAChC;AACA;AACA;AACQ,sBAAA3H,IAAI;AAAA,qBAAIA,IAAI,CAACjC,SAAT;AAAA,aAJG,CAAP;AAKH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB;AAAA;;AACd,gBAAI,KAAKoG,KAAT,EAAgB;AACZ,mBAAKA,KAAL,CAAW5O,OAAX;AAAoB;AAChC;AACA;AACA;AACY,wBAAAyK,IAAI,EAAI;AACJA,oBAAI,CAAC9B,iBAAL,GAAyB,OAAI,CAACG,SAA9B;AACA2B,oBAAI,CAAC/B,iBAAL,GAAyB,OAAI,CAACsF,QAA9B;AACH,eAPD;AAQH;AACJ;;;;QAz3BqBlB,qB;;AA23B1BG,iBAAW,CAACzX,IAAZ,GAAmB,SAAS6c,mBAAT,CAA6B3c,CAA7B,EAAgC;AAAE,eAAO,KAAKA,CAAC,IAAIuX,WAAV,EAAuB,gEAAyB,wDAAzB,CAAvB,EAAoE,gEAAyB,+DAAzB,CAApE,EAAwH,gEAAyB,iEAAzB,EAAgD,CAAhD,CAAxH,EAA4K,gEAAyB,sDAAzB,EAAwC,CAAxC,CAA5K,EAAwN,gEAAyB,kEAAzB,EAAoD,CAApD,CAAxN,EAAgR,gEAAyB,wEAAzB,CAAhR,EAAoU,gEAAyB,yDAAzB,EAA2C,EAA3C,CAApU,CAAP;AAA6X,OAAlb;;AACAA,iBAAW,CAACtX,IAAZ,GAAmB,gEAAyB;AAAEC,YAAI,EAAEqX,WAAR;AAAqBpX,iBAAS,EAAE,CAAC,CAAC,eAAD,CAAD,CAAhC;AAAqDC,sBAAc,EAAE,SAASwc,0BAAT,CAAoCtgB,EAApC,EAAwCC,GAAxC,EAA6C+D,QAA7C,EAAuD;AAAE,cAAIhE,EAAE,GAAG,CAAT,EAAY;AAC9K,yEAAsBgE,QAAtB,EAAgCkS,OAAhC,EAAyC,CAAzC;AACH;;AAAC,cAAIlW,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC2c,KAAJ,GAAY3Y,EAAjE;AACH;AAAE,SALqC;AAKnCM,iBAAS,EAAE,CAAC,CAAD,EAAI,eAAJ,CALwB;AAKFqM,gBAAQ,EAAE,EALR;AAKYC,oBAAY,EAAE,SAAS0P,wBAAT,CAAkCvgB,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACvH,qEAAkB,OAAlB,EAA2B,SAASwgB,oCAAT,GAAgD;AAAE,qBAAOvgB,GAAG,CAAC4N,KAAJ,EAAP;AAAqB,aAAlG,EAAoG,MAApG,EAA4G,SAAS4S,mCAAT,GAA+C;AAAE,qBAAOxgB,GAAG,CAAC2Z,KAAJ,EAAP;AAAqB,aAAlL,EAAoL,SAApL,EAA+L,SAAS8G,sCAAT,CAAgDvP,MAAhD,EAAwD;AAAE,qBAAOlR,GAAG,CAAC0gB,QAAJ,CAAaxP,MAAb,CAAP;AAA8B,aAAvR;AACH;;AAAC,cAAInR,EAAE,GAAG,CAAT,EAAY;AACV,yEAAsB,IAAtB,EAA4BC,GAAG,CAACob,IAAhC;;AACA,sEAAmB,UAAnB,EAA+Bpb,GAAG,CAAC0L,QAAJ,GAAe,IAAf,GAAsB1L,GAAG,CAACqb,SAAzD,EAAoE,kBAApE,EAAwFrb,GAAG,CAACud,gBAAJ,IAAwB,IAAhH,EAAsH,eAAtH,EAAuIvd,GAAG,CAAC2gB,IAAJ,GAAW3gB,GAAG,CAACqT,QAAf,GAA0B,IAAjK,EAAuK,eAAvK,EAAwLrT,GAAG,CAAC0L,QAAJ,CAAa6F,QAAb,EAAxL,EAAiN,cAAjN,EAAiOvR,GAAG,CAAC4gB,UAArO,EAAiP,sBAAjP,EAAyQ5gB,GAAG,CAAC+b,QAA7Q,EAAuR,MAAvR,EAA+R/b,GAAG,CAAC2gB,IAAnS,EAAyS,kBAAzS,EAA6T3gB,GAAG,CAAC4b,eAAjU;;AACA,sEAAmB,wBAAnB,EAA6C5b,GAAG,CAAC0L,QAAjD,EAA2D,uBAA3D,EAAoF1L,GAAG,CAAC4gB,UAAxF,EAAoG,wBAApG,EAA8H5gB,GAAG,CAACqT,QAAlI;AACH;AAAE,SAXqC;AAWnC9O,cAAM,EAAE;AAAEqX,yBAAe,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CAAnB;AAA4DG,kBAAQ,EAAE,UAAtE;AAAkF8E,qBAAW,EAAE,aAA/F;AAA8G7e,eAAK,EAAE,OAArH;AAA8HqR,kBAAQ,EAAE,UAAxI;AAAoJkJ,qBAAW,EAAE,aAAjK;AAAgL7Q,kBAAQ,EAAE,UAA1L;AAAsMyM,oBAAU,EAAE,YAAlN;AAAgO7B,kBAAQ,EAAE,UAA1O;AAAsPwK,2BAAiB,EAAE;AAAzQ,SAX2B;AAWqQpc,eAAO,EAAE;AAAE9B,gBAAM,EAAE,QAAV;AAAoBiZ,qBAAW,EAAE;AAAjC,SAX9Q;AAWgUlX,gBAAQ,EAAE,CAAC,aAAD,CAX1U;AAW2VC,gBAAQ,EAAE,CAAC,iEAA0B,CAAC;AAAEC,iBAAO,EAAE,iFAAX;AAAgCC,qBAAW,EAAEkW;AAA7C,SAAD,CAA1B,CAAD,EAA0F,wEAA1F,CAXrW;AAWmejW,0BAAkB,EAAElF,GAXvf;AAW4fmF,aAAK,EAAE,CAXngB;AAWsgBC,YAAI,EAAE,CAX5gB;AAW+gBC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,uBAAJ,CAAD,CAXvhB;AAWujBd,gBAAQ,EAAE,SAAS2c,oBAAT,CAA8BhhB,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC1pB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,uEAAoB,CAApB;;AACA;AACH;AAAE,SAhBqC;AAgBnCsF,cAAM,EAAE,CAAC,6/FAAD,CAhB2B;AAgBs+FC,qBAAa,EAAE,CAhBr/F;AAgBw/FC,uBAAe,EAAE;AAhBzgG,OAAzB,CAAnB;AAiBA;;AACAyV,iBAAW,CAACxV,cAAZ,GAA6B;AAAA,eAAM,CAC/B;AAAE7B,cAAI,EAAE;AAAR,SAD+B,EAE/B;AAAEA,cAAI,EAAE;AAAR,SAF+B,EAG/B;AAAEA,cAAI,EAAE,iEAAR;AAAwB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAApC,SAH+B,EAI/B;AAAEA,cAAI,EAAE,sDAAR;AAAgB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAA5B,SAJ+B,EAK/B;AAAEA,cAAI,EAAE,kEAAR;AAA4B+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAAxC,SAL+B,EAM/B;AAAEA,cAAI,EAAE;AAAR,SAN+B,EAO/B;AAAEA,cAAI,EAAE,yDAAR;AAAmB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE;AAAR,WAArB;AAA/B,SAP+B,CAAN;AAAA,OAA7B;;AASAqX,iBAAW,CAACpV,cAAZ,GAA6B;AACzBkb,yBAAiB,EAAE,CAAC;AAAEnd,cAAI,EAAE;AAAR,SAAD,CADM;AAEzBoY,gBAAQ,EAAE,CAAC;AAAEpY,cAAI,EAAE;AAAR,SAAD,CAFe;AAGzBkd,mBAAW,EAAE,CAAC;AAAEld,cAAI,EAAE;AAAR,SAAD,CAHY;AAIzB3B,aAAK,EAAE,CAAC;AAAE2B,cAAI,EAAE;AAAR,SAAD,CAJkB;AAKzB0P,gBAAQ,EAAE,CAAC;AAAE1P,cAAI,EAAE;AAAR,SAAD,CALe;AAMzB4Y,mBAAW,EAAE,CAAC;AAAE5Y,cAAI,EAAE;AAAR,SAAD,CANY;AAOzB+H,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE;AAAR,SAAD,CAPe;AAQzBiY,uBAAe,EAAE,CAAC;AAAEjY,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,kBAAD;AAArB,SAAD,CARQ;AASzBwS,kBAAU,EAAE,CAAC;AAAExU,cAAI,EAAE;AAAR,SAAD,CATa;AAUzB2S,gBAAQ,EAAE,CAAC;AAAE3S,cAAI,EAAE;AAAR,SAAD,CAVe;AAWzBf,cAAM,EAAE,CAAC;AAAEe,cAAI,EAAE;AAAR,SAAD,CAXiB;AAYzBkY,mBAAW,EAAE,CAAC;AAAElY,cAAI,EAAE;AAAR,SAAD,CAZY;AAazBgZ,aAAK,EAAE,CAAC;AAAEhZ,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAACsQ,OAAD,EAAU;AACjC;AACA;AACApQ,uBAAW,EAAE;AAHoB,WAAV;AAA/B,SAAD;AAbkB,OAA7B;;AAmBA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBkV,WAAzB,EAAsC,CAAC;AACjGrX,cAAI,EAAE,uDAD2F;AAEjGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,eADX;AAEC3B,oBAAQ,wEAFT;AAGCO,oBAAQ,EAAE,aAHX;AAICuB,gBAAI,EAAE;AACF,iCAAmB,6BADjB;AAEF,yCAA2B,0BAFzB;AAGF,sCAAwB,wBAHtB;AAIF,sCAAwB,qBAJtB;AAKF,qCAAuB,YALrB;AAMF,6CAA+B,UAN7B;AAOF,6BAAe,MAPb;AAQF,gDAAkC,UARhC;AASF,+CAAiC,YAT/B;AAUF,gDAAkC,UAVhC;AAWF,yCAA2B,iBAXzB;AAYF,uBAAS,eAZP;AAaF,yBAAW,SAbT;AAcF,wBAAU,SAdR;AAeF,2BAAa,kBAfX;AAgBF,sBAAQ;AAhBN,aAJP;AAsBCC,qBAAS,EAAE,CAAC;AAAEtB,qBAAO,EAAE,iFAAX;AAAgCC,yBAAW,EAAEkW;AAA7C,aAAD,CAtBZ;AAuBC1V,yBAAa,EAAE,gEAAkBU,IAvBlC;AAwBCT,2BAAe,EAAE,sEAAwBU,MAxB1C;AAyBCZ,kBAAM,EAAE,CAAC,6/FAAD;AAzBT,WAAD;AAF2F,SAAD,CAAtC,EA6B1D,YAAY;AAAE,iBAAO,CAAC;AAAE1B,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAE,iEAAR;AAA+B+B,sBAAU,EAAE,CAAC;AAC3H/B,kBAAI,EAAE;AADqH,aAAD;AAA3C,WAAlE,EAEX;AAAEA,gBAAI,EAAE,sDAAR;AAAuB+B,sBAAU,EAAE,CAAC;AACtC/B,kBAAI,EAAE;AADgC,aAAD;AAAnC,WAFW,EAIX;AAAEA,gBAAI,EAAE,kEAAR;AAAmC+B,sBAAU,EAAE,CAAC;AAClD/B,kBAAI,EAAE;AAD4C,aAAD;AAA/C,WAJW,EAMX;AAAEA,gBAAI,EAAE;AAAR,WANW,EAMyB;AAAEA,gBAAI,EAAE,yDAAR;AAA0B+B,sBAAU,EAAE,CAAC;AAC7E/B,kBAAI,EAAE;AADuE,aAAD,EAE7E;AACCA,kBAAI,EAAE;AADP,aAF6E;AAAtC,WANzB,CAAP;AAUF,SAvC8C,EAuC5C;AAAEiY,yBAAe,EAAE,CAAC;AAC9BjY,gBAAI,EAAE,mDADwB;AAE9BgC,gBAAI,EAAE,CAAC,kBAAD;AAFwB,WAAD,CAAnB;AAGV/C,gBAAM,EAAE,CAAC;AACTe,gBAAI,EAAE;AADG,WAAD,CAHE;AAKVkY,qBAAW,EAAE,CAAC;AACdlY,gBAAI,EAAE;AADQ,WAAD,CALH;AAOVoY,kBAAQ,EAAE,CAAC;AACXpY,gBAAI,EAAE;AADK,WAAD,CAPA;AASVkd,qBAAW,EAAE,CAAC;AACdld,gBAAI,EAAE;AADQ,WAAD,CATH;AAWV3B,eAAK,EAAE,CAAC;AACR2B,gBAAI,EAAE;AADE,WAAD,CAXG;AAaV0P,kBAAQ,EAAE,CAAC;AACX1P,gBAAI,EAAE;AADK,WAAD,CAbA;AAeV4Y,qBAAW,EAAE,CAAC;AACd5Y,gBAAI,EAAE;AADQ,WAAD,CAfH;AAiBV+H,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE;AADK,WAAD,CAjBA;AAmBVwU,oBAAU,EAAE,CAAC;AACbxU,gBAAI,EAAE;AADO,WAAD,CAnBF;AAqBV2S,kBAAQ,EAAE,CAAC;AACX3S,gBAAI,EAAE;AADK,WAAD,CArBA;AAuBVmd,2BAAiB,EAAE,CAAC;AACpBnd,gBAAI,EAAE;AADc,WAAD,CAvBT;AAyBVgZ,eAAK,EAAE,CAAC;AACRhZ,gBAAI,EAAE,6DADE;AAERgC,gBAAI,EAAE,CAACsQ,OAAD,EAAU;AACR;AACA;AACApQ,yBAAW,EAAE;AAHL,aAAV;AAFE,WAAD;AAzBG,SAvC4C,CAAnD;AAuEC,OAvEhB;;AAwEA,UAAI,KAAJ,EAAW,CAmLV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASmb,iBAAT,GAA6B,CAAG;;AAChC,UAAI,KAAJ,EAAW,CAWV,C,CACD;;AACA;;;AACA,UAAIC,cAAc,GAAG,CAArB;AACA;AACA;AACA;AACA;;UACMC,Y;AACF;AACJ;AACA;AACA;AACI,8BAAY9f,WAAZ,EAAyB+f,eAAzB,EAA0C;AAAA;;AACtC,eAAK/f,WAAL,GAAmBA,WAAnB;AACA,eAAK+f,eAAL,GAAuBA,eAAvB;AACA;AACR;AACA;;AACQ,eAAK1E,OAAL,GAAe,KAAf;AACA,eAAK2E,UAAL,GAAkB,KAAlB;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAKC,iBAAL,GAAyB,KAAKF,eAAL,CAAqBE,iBAA9C;AACA;AACR;AACA;;AACQ,eAAKC,OAAL,GAAe,IAAI,0DAAJ,EAAf;AACA;AACR;AACA;;AACQ,eAAK/E,WAAL,GAAmB,EAAnB;AACA;AACR;AACA;;AACQ,eAAKrc,EAAL,iCAAiC+gB,cAAc,EAA/C;AACA,eAAKpK,SAAL,GAAiB,KAAjB;AACA,eAAK0K,aAAL;AAAsB;AAAkB,eAAKngB,WAAL,CAAiBoB,aAAzD;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;eACI,aAAaR,KAAb,EAAoB;AAChB,gBAAIA,KAAJ,EAAW;AACP,mBAAKwf,SAAL,GAAiBxf,KAAjB;;AACA,mBAAKwf,SAAL,CAAeC,aAAf,CAA6B,IAA7B;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAgB;AAAE,mBAAO,KAAKL,UAAZ;AAAyB;AAC3C;AACJ;AACA;AACA;;eACI,aAAcpf,KAAd,EAAqB;AAAE,iBAAKof,UAAL,GAAkB,oFAAsBpf,KAAtB,CAAlB;AAAiD;AACxE;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAK6U,SAAL,IAAmB,KAAK2K,SAAL,IAAkB,KAAKA,SAAL,CAAe9V,QAA3D;AAAuE;AACxF;AACJ;AACA;AACA;;eACI,aAAa1J,KAAb,EAAoB;AAAE,iBAAK6U,SAAL,GAAiB,oFAAsB7U,KAAtB,CAAjB;AAAgD;AACtE;AACJ;AACA;AACA;;;;eACI,eAAY;AAAE,mBAAO,CAAC,KAAKuf,aAAL,CAAmBvf,KAA3B;AAAmC;AACjD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAKwf,SAAL,CAAelF,YAAf,CAA4B9N,IAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,kBAASlL,KAAT,EAAgB;AACZ;AACA;AACA,gBAAIA,KAAK,IAAIA,KAAK,CAACqI,OAAN,KAAkB,yDAA3B,IAAkC,CAAC,6EAAerI,KAAf,EAAsB,UAAtB,CAAvC,EAA0E;AACtE,mBAAKke,SAAL,CAAezE,iBAAf;AACH;;AACD,iBAAK2E,YAAL,CAAkBpe,KAAlB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQ;AACJ,gBAAI,KAAKqe,SAAT,EAAoB;AAChB,mBAAKD,YAAL;AACH;;AACD,iBAAKjF,OAAL,GAAe,KAAf,CAJI,CAKJ;;AACA,gBAAI,CAAC,KAAK+E,SAAL,CAAe/E,OAApB,EAA6B;AACzB,mBAAK+E,SAAL,CAAe7H,KAAf;AACH;;AACD,iBAAK6H,SAAL,CAAelF,YAAf,CAA4B9N,IAA5B;AACH;AACD;AACJ;AACA;;;;iBACI,kBAAS;AACL,iBAAKiO,OAAL,GAAe,IAAf;;AACA,iBAAK+E,SAAL,CAAelF,YAAf,CAA4B9N,IAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sBAAalL,KAAb,EAAoB;AAChB,gBAAI,CAAC,KAAKie,aAAL,CAAmBvf,KAApB,IAA6B,CAAC,CAACsB,KAAnC,EAA0C;AACtC,mBAAKke,SAAL,CAAed,QAAf,CAAwBpd,KAAxB;AACH;;AACD,gBAAI,CAACA,KAAD,IAAU,KAAKse,eAAL,CAAqBte,KAArB,CAAd,EAA2C;AACvC,mBAAKge,OAAL,CAAave,IAAb,CAAkB;AAAEmb,qBAAK,EAAE,KAAKqD,aAAd;AAA6Bvf,qBAAK,EAAE,KAAKuf,aAAL,CAAmBvf;AAAvD,eAAlB;;AACA,kBAAIsB,KAAJ,EAAW;AACPA,qBAAK,CAACsI,cAAN;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;iBACI,oBAAW;AACP;AACA,iBAAK4V,SAAL,CAAelF,YAAf,CAA4B9N,IAA5B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,eAAM9L,OAAN,EAAe;AACX,iBAAK6e,aAAL,CAAmB3T,KAAnB,CAAyBlL,OAAzB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,yBAAgBY,KAAhB,EAAuB;AACnB,gBAAI,6EAAeA,KAAf,CAAJ,EAA2B;AACvB,qBAAO,KAAP;AACH;AACD;;;AACA,gBAAMue,UAAU,GAAG,KAAKR,iBAAxB;AACA;;AACA,gBAAM1V,OAAO,GAAGrI,KAAK,CAACqI,OAAtB;AACA,mBAAO6G,KAAK,CAAC4L,OAAN,CAAcyD,UAAd,IAA4BA,UAAU,CAACjC,OAAX,CAAmBjU,OAAnB,IAA8B,CAAC,CAA3D,GAA+DkW,UAAU,CAACC,GAAX,CAAenW,OAAf,CAAtE;AACH;;;;;;AAELuV,kBAAY,CAAC3d,IAAb,GAAoB,SAASwe,oBAAT,CAA8Bte,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIyd,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB3G,yBAAzB,CAArE,CAAP;AAAmI,OAA1L;;AACA2G,kBAAY,CAAC3a,IAAb,GAAoB,gEAAyB;AAAE5C,YAAI,EAAEud,YAAR;AAAsBtd,iBAAS,EAAE,CAAC,CAAC,OAAD,EAAU,iBAAV,EAA6B,EAA7B,CAAD,CAAjC;AAAqEU,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,EAAsB,mBAAtB,CAAhF;AAA4HqM,gBAAQ,EAAE,CAAtI;AAAyIC,oBAAY,EAAE,SAASoR,yBAAT,CAAmCjiB,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtP,qEAAkB,SAAlB,EAA6B,SAASkiB,uCAAT,CAAiD/Q,MAAjD,EAAyD;AAAE,qBAAOlR,GAAG,CAAC0gB,QAAJ,CAAaxP,MAAb,CAAP;AAA8B,aAAtH,EAAwH,MAAxH,EAAgI,SAASgR,oCAAT,GAAgD;AAAE,qBAAOliB,GAAG,CAAC2Z,KAAJ,EAAP;AAAqB,aAAvM,EAAyM,OAAzM,EAAkN,SAASwI,qCAAT,GAAiD;AAAE,qBAAOniB,GAAG,CAACoiB,MAAJ,EAAP;AAAsB,aAA3R,EAA6R,OAA7R,EAAsS,SAASC,qCAAT,GAAiD;AAAE,qBAAOriB,GAAG,CAACsiB,QAAJ,EAAP;AAAwB,aAAjX;AACH;;AAAC,cAAIviB,EAAE,GAAG,CAAT,EAAY;AACV,yEAAsB,IAAtB,EAA4BC,GAAG,CAACE,EAAhC;;AACA,sEAAmB,UAAnB,EAA+BF,GAAG,CAAC0L,QAAJ,IAAgB,IAA/C,EAAqD,aAArD,EAAoE1L,GAAG,CAACuc,WAAJ,IAAmB,IAAvF,EAA6F,cAA7F,EAA6Gvc,GAAG,CAACwhB,SAAJ,IAAiBxhB,GAAG,CAACwhB,SAAJ,CAAc5G,SAA/B,GAA2C5a,GAAG,CAACwhB,SAAJ,CAAc5G,SAAd,CAAwB2H,OAAnE,GAA6E,IAA1L,EAAgM,eAAhM,EAAiNviB,GAAG,CAACwhB,SAAJ,IAAiBxhB,GAAG,CAACwhB,SAAJ,CAAcnO,QAA/B,IAA2C,IAA5P;AACH;AAAE,SALsC;AAKpC9O,cAAM,EAAE;AAAE8c,2BAAiB,EAAE,CAAC,+BAAD,EAAkC,mBAAlC,CAArB;AAA6E9E,qBAAW,EAAE,aAA1F;AAAyGrc,YAAE,EAAE,IAA7G;AAAmHsiB,kBAAQ,EAAE,CAAC,iBAAD,EAAoB,UAApB,CAA7H;AAA8Jb,mBAAS,EAAE,CAAC,uBAAD,EAA0B,WAA1B,CAAzK;AAAiNjW,kBAAQ,EAAE;AAA3N,SAL4B;AAK6MhH,eAAO,EAAE;AAAE4c,iBAAO,EAAE;AAAX,SALtN;AAK2P3c,gBAAQ,EAAE,CAAC,cAAD,EAAiB,iBAAjB,CALrQ;AAK0SC,gBAAQ,EAAE,CAAC,kEAAD;AALpT,OAAzB,CAApB;AAMA;;AACAsc,kBAAY,CAAC1b,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAE7B,cAAI,EAAE;AAAR,SADgC,EAEhC;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC4U,yBAAD;AAAtB,WAAD;AAA/B,SAFgC,CAAN;AAAA,OAA9B;;AAIA2G,kBAAY,CAACtb,cAAb,GAA8B;AAC1B4c,gBAAQ,EAAE,CAAC;AAAE7e,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD,CADgB;AAE1Bgc,iBAAS,EAAE,CAAC;AAAEhe,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,uBAAD;AAArB,SAAD,CAFe;AAG1B0b,yBAAiB,EAAE,CAAC;AAAE1d,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,+BAAD;AAArB,SAAD,CAHO;AAI1B2b,eAAO,EAAE,CAAC;AAAE3d,cAAI,EAAE,oDAAR;AAAgBgC,cAAI,EAAE,CAAC,sBAAD;AAAtB,SAAD,CAJiB;AAK1B4W,mBAAW,EAAE,CAAC;AAAE5Y,cAAI,EAAE;AAAR,SAAD,CALa;AAM1BzD,UAAE,EAAE,CAAC;AAAEyD,cAAI,EAAE;AAAR,SAAD,CANsB;AAO1B+H,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE;AAAR,SAAD;AAPgB,OAA9B;;AASA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBob,YAAzB,EAAuC,CAAC;AAClGvd,cAAI,EAAE,uDAD4F;AAElGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,wBADX;AAECpB,oBAAQ,EAAE,+BAFX;AAGCuB,gBAAI,EAAE;AACF,uBAAS,kCADP;AAEF,2BAAa,kBAFX;AAGF,wBAAU,SAHR;AAIF,yBAAW,UAJT;AAKF,yBAAW,YALT;AAMF,sBAAQ,IANN;AAOF,iCAAmB,kBAPjB;AAQF,oCAAsB,qBARpB;AASF,qCAAuB,uEATrB;AAUF,sCAAwB;AAVtB;AAHP,WAAD;AAF4F,SAAD,CAAvC,EAkB1D,YAAY;AAAE,iBAAO,CAAC;AAAEvC,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC3E/B,kBAAI,EAAE,oDADqE;AAE3EgC,kBAAI,EAAE,CAAC4U,yBAAD;AAFqE,aAAD;AAA/B,WAA9B,CAAP;AAGF,SArB8C,EAqB5C;AAAE8G,2BAAiB,EAAE,CAAC;AAChC1d,gBAAI,EAAE,mDAD0B;AAEhCgC,gBAAI,EAAE,CAAC,+BAAD;AAF0B,WAAD,CAArB;AAGV2b,iBAAO,EAAE,CAAC;AACV3d,gBAAI,EAAE,oDADI;AAEVgC,gBAAI,EAAE,CAAC,sBAAD;AAFI,WAAD,CAHC;AAMV4W,qBAAW,EAAE,CAAC;AACd5Y,gBAAI,EAAE;AADQ,WAAD,CANH;AAQVzD,YAAE,EAAE,CAAC;AACLyD,gBAAI,EAAE;AADD,WAAD,CARM;AAUV6e,kBAAQ,EAAE,CAAC;AACX7e,gBAAI,EAAE,mDADK;AAEXgC,gBAAI,EAAE,CAAC,iBAAD;AAFK,WAAD,CAVA;AAaVgc,mBAAS,EAAE,CAAC;AACZhe,gBAAI,EAAE,mDADM;AAEZgC,gBAAI,EAAE,CAAC,uBAAD;AAFM,WAAD,CAbD;AAgBV+F,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE;AADK,WAAD;AAhBA,SArB4C,CAAnD;AAuCC,OAvChB;;AAwCA,UAAI,KAAJ,EAAW,CAyDV;AAED;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAM8e,iBAAiB,GAAG,CACtBzH,WADsB,EAEtB/E,OAFsB,EAGtBiL,YAHsB,EAItBjI,aAJsB,EAKtBpD,aALsB,EAMtBE,mBANsB,CAA1B;AAQA,UAAM2M,EAAE,GAAI;AACRrB,yBAAiB,EAAE,CAAC,2DAAD;AADX,OAAZ;;UAGMsB,c;;;;AAENA,oBAAc,CAACpf,IAAf,GAAsB,SAASqf,sBAAT,CAAgCnf,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIkf,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAACjR,IAAf,GAAsB,+DAAwB;AAAE/N,YAAI,EAAEgf;AAAR,OAAxB,CAAtB;AACAA,oBAAc,CAAChR,IAAf,GAAsB,+DAAwB;AAAExL,iBAAS,EAAE,CACnD,wEADmD,EAEnD;AACItB,iBAAO,EAAE0V,yBADb;AAEIsI,kBAAQ;AAAI;AAAiBH;AAFjC,SAFmD;AAAb,OAAxB,CAAtB;;AAOA,OAAC,YAAY;AAAE,SAAC,OAAO7Q,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B8Q,cAA1B,EAA0C;AAAE7Q,sBAAY,EAAE,CAACkJ,WAAD,EAAc/E,OAAd,EAAuBiL,YAAvB,EAAqCjI,aAArC,EAAoDpD,aAApD,EAAmEE,mBAAnE,CAAhB;AAAyGhE,iBAAO,EAAE,CAACiJ,WAAD,EAAc/E,OAAd,EAAuBiL,YAAvB,EAAqCjI,aAArC,EAAoDpD,aAApD,EAAmEE,mBAAnE;AAAlH,SAA1C,CAAnD;AAA4S,OAA3T;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOjQ,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB6c,cAAzB,EAAyC,CAAC;AACpGhf,cAAI,EAAE,sDAD8F;AAEpGgC,cAAI,EAAE,CAAC;AACCoM,mBAAO,EAAE0Q,iBADV;AAEC3Q,wBAAY,EAAE2Q,iBAFf;AAGCtc,qBAAS,EAAE,CACP,wEADO,EAEP;AACItB,qBAAO,EAAE0V,yBADb;AAEIsI,sBAAQ;AAAI;AAAiBH;AAFjC,aAFO;AAHZ,WAAD;AAF8F,SAAD,CAAzC,EAa1D,IAb0D,EAapD,IAboD,CAAnD;AAaO,OAbtB;AAeA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;ACh4EA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAfaA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AAMA,UAAM7iB,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,YAAD,CAAD,EAAiB,CAAC,cAAD,CAAjB,CAAN,CAAZ;AACA,UAAMO,GAAG,GAAG,CAAC,GAAD,EAAM,0BAAN,CAAZ;;AACA,eAAS0iB,wCAAT,CAAkD/iB,EAAlD,EAAsDC,GAAtD,EAA2D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACrE,kEAAiB,CAAjB,EAAoB,qBAApB,EAA2C,CAA3C;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAME,MAAM,GAAG,6DAAf;;AACA,mEAAkB,OAAlB,EAA2BA,MAAM,CAAC+N,QAAP,GAAkB,SAAlB,GAA8B,WAAzD,EAAsE,UAAtE,EAAkF/N,MAAM,CAACyL,QAAzF;AACH;AAAE;;AACH,UAAMqX,GAAG,GAAG,CAAC,GAAD,CAAZ;AACA,UAAMC,OAAO,GAAG,IAAI,qDAAJ,CAAY,OAAZ,CAAhB;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;UACMC,e;;;;AAENA,qBAAe,CAACC,cAAhB,GAAiC,6BAAjC;AACAD,qBAAe,CAACE,kBAAhB,GAAqC,6BAArC;AACAF,qBAAe,CAACG,kBAAhB,GAAqC,2BAArC;AACAH,qBAAe,CAACI,WAAhB,GAA8B,6BAA9B;;AACA,UAAI,KAAJ,EAAW,CASV;AACD;AACA;AACA;;;UACMC,kB;;;;AAENA,wBAAkB,CAACC,OAAnB,GAA6B,OAA7B;AACAD,wBAAkB,CAACE,QAAnB,GAA8B,OAA9B;AACAF,wBAAkB,CAACG,OAAnB,GAA6B,OAA7B;;AACA,UAAI,KAAJ,EAAW,CAOV;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMC,SAAS,GAAG,IAAI,qDAAJ,CAAY,OAAZ,CAAlB;AACA;AACA;AACA;AACA;;AACA,eAASC,8BAAT,GAA0C;AACtC,eAAO,IAAP;AACH;AACD;AACA;AACA;AACA;;;AACA,UAAMC,sBAAsB,GAAG,IAAI,4DAAJ,CAAmB,mBAAnB,EAAwC;AACnE9iB,kBAAU,EAAE,MADuD;AAEnEC,eAAO,EAAE4iB;AAF0D,OAAxC,CAA/B;AAIA;AACA;AACA;AACA;;AACA,eAASE,oBAAT,GAAgC,CAAG;;AACnC,UAAI,KAAJ,EAAW,CAaV;AACD;AACA;AACA;AACA;AACA;AACA;;;UACMC,e;AACF;AACJ;AACA;AACA;AACA;AACI,iCAAYC,wBAAZ,EAAsCC,YAAtC;AACA;AACA1M,gBAFA,EAEU;AAAA;;AACN;AACR;AACA;AACQ,eAAK2M,oBAAL,GAA4B,KAA5B;AACA,eAAKnc,SAAL,GAAiBwP,QAAjB,CALM,CAMN;AACA;;AACAyM,kCAAwB,CAACG,oCAAzB,GARM,CASN;AACA;;;AACA,eAAKC,aAAL,GAAqBH,YAArB;;AACA,cAAI,CAAC,KAAKC,oBAAV,EAAgC;AAC5B,iBAAKG,sBAAL;;AACA,iBAAKC,oBAAL;;AACA,iBAAKC,qBAAL;;AACA,iBAAKL,oBAAL,GAA4B,IAA5B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;;iBACI,wBAAe;AACX;AACA,gBAAMM,GAAG,GAAG,KAAKzc,SAAL,IAAkBwP,QAA9B;AACA,mBAAO,OAAOiN,GAAP,KAAe,QAAf,IAA2BA,GAA3B,GAAiCA,GAAjC,GAAuC,IAA9C;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sBAAa;AACT;AACA,gBAAMA,GAAG,GAAG,KAAKC,YAAL,EAAZ;AACA;;;AACA,gBAAMC,GAAG,GAAG,CAACF,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,KAAK,CAA7B,GAAiC,KAAK,CAAtC,GAA0CA,GAAG,CAAC9T,WAA/C,KAA+DnH,MAA3E;AACA,mBAAO,OAAOmb,GAAP,KAAe,QAAf,IAA2BA,GAA3B,GAAiCA,GAAjC,GAAuC,IAA9C;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,6BAAoB;AAChB,mBAAO,qEAAe,CAAC,KAAKC,UAAL,EAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sBAAa;AACT;AACA,gBAAMpb,MAAM;AAAI;AAAkB,iBAAKC,UAAL,EAAlC;;AACA,mBAAOD,MAAM,KAAKA,MAAM,CAACqb,SAAP,IAAoBrb,MAAM,CAACsb,OAAhC,CAAb;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kCAAyB;AACrB;AACA,gBAAMC,SAAS,GAAG,KAAKC,iBAAL,OACb,KAAKX,aAAL,KAAuB,IAAvB;AAAiC;AAAkB,iBAAKA,aAAzB,CAA0CY,OAD5D,CAAlB;AAEA;;;AACA,gBAAMzN,QAAQ,GAAG,KAAKkN,YAAL,EAAjB;;AACA,gBAAIK,SAAS,IAAIvN,QAAb,IAAyB,CAACA,QAAQ,CAACyN,OAAvC,EAAgD;AAC5C9Q,qBAAO,CAAC+Q,IAAR,CAAa,8DACT,6DADJ;AAEH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AACnB;AACA;;AACA;AACA,gBAAMvZ,UAAU,GAAG,CAAC,KAAKqZ,iBAAL,EAAD,IACd,KAAKX,aAAL,KAAuB,KAAvB,IAAgC;AAAG;AAAkB,iBAAKA,aAAzB,CAA0Cc,KADhF;AAEA;;AACA,gBAAM3N,QAAQ,GAAG,KAAKkN,YAAL,EAAjB;;AACA,gBAAI/Y,UAAU,IAAI,CAAC6L,QAAf,IAA2B,CAACA,QAAQ,CAAC4N,IAArC,IACA,OAAOC,gBAAP,KAA4B,UADhC,EAC4C;AACxC;AACH;AACD;;;AACA,gBAAMC,WAAW,GAAG9N,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAApB;AACA6N,uBAAW,CAAChjB,SAAZ,CAAsBoV,GAAtB,CAA0B,yBAA1B;AACAF,oBAAQ,CAAC4N,IAAT,CAAczN,WAAd,CAA0B2N,WAA1B;AACA;;AACA,gBAAMC,aAAa,GAAGF,gBAAgB,CAACC,WAAD,CAAtC,CAjBmB,CAkBnB;AACA;AACA;;AACA,gBAAIC,aAAa,IAAIA,aAAa,CAACC,OAAd,KAA0B,MAA/C,EAAuD;AACnDrR,qBAAO,CAAC+Q,IAAR,CAAa,+DACT,2DADS,GAET,iEAFJ;AAGH;;AACD1N,oBAAQ,CAAC4N,IAAT,CAAcK,WAAd,CAA0BH,WAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,iCAAwB;AACpB;AACA,gBAAMP,SAAS,GAAG,KAAKC,iBAAL,OACb,KAAKX,aAAL,KAAuB,IAAvB;AAAiC;AAAkB,iBAAKA,aAAzB,CAA0CqB,OAD5D,CAAlB;;AAEA,gBAAIX,SAAS,IAAInB,SAAS,CAAC+B,IAAV,KAAmB,qDAAUA,IAA9C,EAAoD;AAChDxR,qBAAO,CAAC+Q,IAAR,CAAa,mCAAmCtB,SAAS,CAAC+B,IAA7C,GAAoD,mBAApD,GACT,2BADS,GACqB,qDAAUA,IAD/B,GACsC,MADtC,GAET,iEAFJ;AAGH;AACJ;;;;;;AAEL3B,qBAAe,CAACvgB,IAAhB,GAAuB,SAASmiB,uBAAT,CAAiCjiB,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAIqgB,eAAV,EAA2B,uDAAgB,0EAAhB,CAA3B,EAA6E,uDAAgBF,sBAAhB,EAAwC,CAAxC,CAA7E,EAAyH,uDAAgB,wDAAhB,EAA0B,CAA1B,CAAzH,CAAP;AAAgK,OAA7N;;AACAE,qBAAe,CAACpS,IAAhB,GAAuB,+DAAwB;AAAE/N,YAAI,EAAEmgB;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAACnS,IAAhB,GAAuB,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAAC,4DAAD,CAAD,EAAe,4DAAf;AAAX,OAAxB,CAAvB;AACA;;AACAkS,qBAAe,CAACte,cAAhB,GAAiC;AAAA,eAAM,CACnC;AAAE7B,cAAI,EAAE;AAAR,SADmC,EAEnC;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAACie,sBAAD;AAAtB,WAArB;AAA/B,SAFmC,EAGnC;AAAEjgB,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,wDAAD;AAAtB,WAArB;AAA/B,SAHmC,CAAN;AAAA,OAAjC;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAOkM,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BiS,eAA1B,EAA2C;AAAElS,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,CAAP;AAAsB,WAA/C;AAAiDG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,CAAP;AAAsB;AAA9F,SAA3C,CAAnD;AAAkM,OAAjN;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOjM,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBge,eAAzB,EAA0C,CAAC;AACrGngB,cAAI,EAAE,sDAD+F;AAErGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAAC,4DAAD,CADV;AAECG,mBAAO,EAAE,CAAC,4DAAD;AAFV,WAAD;AAF+F,SAAD,CAA1C,EAM1D,YAAY;AAAE,iBAAO,CAAC;AAAEpO,gBAAI,EAAE;AAAR,WAAD,EAA4C;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AACzF/B,kBAAI,EAAE;AADmF,aAAD,EAEzF;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAACie,sBAAD;AAFP,aAFyF;AAA/B,WAA5C,EAKX;AAAEjgB,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC/B,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,wDAAD;AAFP,aAFkC;AAA/B,WALW,CAAP;AAUF,SAhB8C,EAgB5C,IAhB4C,CAAnD;AAgBe,OAhB9B;;AAiBA,UAAI,KAAJ,EAAW,CAmBV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASggB,UAAT,GAAsB,CAAG;;AACzB,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,aAAT,CAAuBC,IAAvB,EAA6B;AACzB;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,4BAAqB;AAAA;;AAAA;;AAAA,8CAANlgB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT;AACA,oBAAKkR,SAAL,GAAiB,KAAjB;AAFiB;AAGpB;AACD;AACR;AACA;;;AAVI;AAAA;AAAA,iBAWI,eAAe;AAAE,qBAAO,KAAKA,SAAZ;AAAwB;AACzC;AACR;AACA;AACA;AAfI;AAAA,iBAgBI,aAAa7U,KAAb,EAAoB;AAAE,mBAAK6U,SAAL,GAAiB,oFAAsB7U,KAAtB,CAAjB;AAAgD;AAhB1E;;AAAA;AAAA,UAAqB6jB,IAArB;AAkBH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASC,QAAT,GAAoB,CAAG;;AACvB,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;;;AACA,eAASC,aAAT,GAAyB,CAAG;;AAC5B,UAAI,KAAJ,EAAW,CAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,UAAT,CAAoBH,IAApB,EAA0BI,YAA1B,EAAwC;AACpC;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,6BAAqB;AAAA;;AAAA;;AAAA,+CAANtgB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT,GADiB,CAEjB;;AACA,oBAAKkU,KAAL,GAAaoM,YAAb;AAHiB;AAIpB;AACD;AACR;AACA;;;AAXI;AAAA;AAAA,iBAYI,eAAY;AAAE,qBAAO,KAAKC,MAAZ;AAAqB;AACnC;AACR;AACA;AACA;AAhBI;AAAA,iBAiBI,aAAUlkB,KAAV,EAAiB;AACb;AACA,kBAAMmkB,YAAY,GAAGnkB,KAAK,IAAIikB,YAA9B;;AACA,kBAAIE,YAAY,KAAK,KAAKD,MAA1B,EAAkC;AAC9B,oBAAI,KAAKA,MAAT,EAAiB;AACb,uBAAK9kB,WAAL,CAAiBoB,aAAjB,CAA+BJ,SAA/B,CAAyCwW,MAAzC,eAAuD,KAAKsN,MAA5D;AACH;;AACD,oBAAIC,YAAJ,EAAkB;AACd,uBAAK/kB,WAAL,CAAiBoB,aAAjB,CAA+BJ,SAA/B,CAAyCoV,GAAzC,eAAoD2O,YAApD;AACH;;AACD,qBAAKD,MAAL,GAAcC,YAAd;AACH;AACJ;AA7BL;;AAAA;AAAA,UAAqBN,IAArB;AA+BH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASO,gBAAT,GAA4B,CAAG;;AAC/B,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,kBAAT,CAA4BR,IAA5B,EAAkC;AAC9B;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,6BAAqB;AAAA;;AAAA;;AAAA,+CAANlgB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT;AACA,oBAAK2gB,cAAL,GAAsB,KAAtB;AAFiB;AAGpB;AACD;AACR;AACA;AACA;;;AAXI;AAAA;AAAA,iBAYI,eAAoB;AAAE,qBAAO,KAAKA,cAAZ;AAA6B;AACnD;AACR;AACA;AACA;AAhBI;AAAA,iBAiBI,aAAkBtkB,KAAlB,EAAyB;AAAE,mBAAKskB,cAAL,GAAsB,oFAAsBtkB,KAAtB,CAAtB;AAAqD;AAjBpF;;AAAA;AAAA,UAAqB6jB,IAArB;AAmBH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASU,WAAT,GAAuB,CAAG;;AAC1B,UAAI,KAAJ,EAAW,CAMV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,aAAT,CAAuBX,IAAvB,EAAkD;AAAA,YAArBY,eAAqB,uEAAH,CAAG;AAC9C;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,6BAAqB;AAAA;;AAAA;;AAAA,+CAAN9gB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT;AACA,oBAAK0V,SAAL,GAAiBoL,eAAjB;AAFiB;AAGpB;AACD;AACR;AACA;;;AAVI;AAAA;AAAA,iBAWI,eAAe;AAAE,qBAAO,KAAK/a,QAAL,GAAgB,CAAC,CAAjB,GAAqB,KAAK2P,SAAjC;AAA6C;AAC9D;AACR;AACA;AACA;AAfI;AAAA,iBAgBI,aAAarZ,KAAb,EAAoB;AAChB;AACA,mBAAKqZ,SAAL,GAAiBrZ,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBykB,eAAzC;AACH;AAnBL;;AAAA;AAAA,UAAqBZ,IAArB;AAqBH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASa,mBAAT,GAA+B,CAAG;;AAClC,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;;;AACA,eAASC,aAAT,GAAyB,CAAG;;AAC5B,UAAI,KAAJ,EAAW,CASV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,eAAT,CAAyBf,IAAzB,EAA+B;AAC3B;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,6BAAqB;AAAA;;AAAA;;AAAA,+CAANlgB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT;AACA;AACZ;AACA;;AACY,oBAAKib,UAAL,GAAkB,KAAlB;AACA;AACZ;AACA;AACA;;AACY,oBAAKtE,YAAL,GAAoB,IAAI,4CAAJ,EAApB;AAViB;AAWpB;AACD;AACR;AACA;;;AAlBI;AAAA;AAAA,mBAmBI,4BAAmB;AACf;AACA,kBAAMuK,QAAQ,GAAG,KAAKjG,UAAtB;AACA;;AACA,kBAAMkG,MAAM,GAAG,KAAKnM,gBAAL,IAAyB,KAAKD,WAA7C;AACA;;AACA,kBAAMqM,OAAO,GAAG,KAAKjG,iBAAL,IAA0B,KAAKrG,yBAA/C;AACA;;AACA,kBAAMuM,OAAO,GAAG,KAAKpM,SAAL;AAAkB;AAAkB,mBAAKA,SAAL,CAAeoM,OAAnD,GAA+D,IAA/E;AACA;;AACA,kBAAMC,QAAQ,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAArB,EAA8BF,MAA9B,CAAjB;;AACA,kBAAIG,QAAQ,KAAKJ,QAAjB,EAA2B;AACvB,qBAAKjG,UAAL,GAAkBqG,QAAlB;AACA,qBAAK3K,YAAL,CAAkB9N,IAAlB;AACH;AACJ;AAlCL;;AAAA;AAAA,UAAqBqX,IAArB;AAoCH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASsB,cAAT,GAA0B,CAAG;;AAC7B,UAAI,KAAJ,EAAW,CAaV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,gBAAT,CAA0BvB,IAA1B,EAAgC;AAC5B;AAAA;;AAAA;;AACI;AACR;AACA;AACQ,6BAAqB;AAAA;;AAAA;;AAAA,+CAANlgB,IAAM;AAANA,kBAAM;AAAA;;AACjB,gEAASA,IAAT;AACA;AACZ;AACA;;AACY,oBAAK0hB,cAAL,GAAsB,KAAtB;AACA;AACZ;AACA;AACA;AACA;;AACY,oBAAKC,mBAAL,GAA2B,EAA3B;AACA;AACZ;AACA;AACA;;AACY,oBAAKC,WAAL,GAAmB,IAAI,+CAAJ;AAAgB;AAC/C;AACA;AACA;AACY,sBAAAC,UAAU,EAAI;AACV;AACA;AACA,kBAAI,QAAKH,cAAT,EAAyB;AACrB,wBAAKI,iBAAL,CAAuBD,UAAvB;AACH,eAFD,MAGK;AACA;AAAkB,wBAAKF,mBAAxB,CAA8CjS,IAA9C,CAAmDmS,UAAnD;AACH;AACJ,aAbkB,CAAnB;AAhBiB;AA8BpB;AACD;AACR;AACA;AACA;AACA;AACA;;;AAxCI;AAAA;AAAA,mBAyCI,4BAAmB;AACf,kBAAI,KAAKH,cAAT,EAAyB;AACrB,sBAAM/f,KAAK,CAAC,+DACR,6BADO,CAAX;AAEH;;AACD,mBAAK+f,cAAL,GAAsB,IAAtB;;AACC;AAAkB,mBAAKC,mBAAxB,CAA8CvZ,OAA9C,CAAsD,KAAK0Z,iBAA3D;;AACA,mBAAKH,mBAAL,GAA2B,IAA3B;AACH;AACD;AACR;AACA;AACA;AACA;;AAtDI;AAAA;AAAA,mBAuDI,2BAAkBE,UAAlB,EAA8B;AAC1BA,wBAAU,CAAChZ,IAAX;AACAgZ,wBAAU,CAACvd,QAAX;AACH;AA1DL;;AAAA;AAAA,UAAqB4b,IAArB;AA4DH;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,UAAM6B,eAAe,GAAG,IAAI,4DAAJ,CAAmB,iBAAnB,EAAsC;AAC1D5mB,kBAAU,EAAE,MAD8C;AAE1DC,eAAO,EAAE4mB;AAFiD,OAAtC,CAAxB;AAIA;AACA;AACA;AACA;;AACA,eAASA,uBAAT,GAAmC;AAC/B,eAAO,6DAAO,uDAAP,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,wBAAwB,GAAG;AAAE/iB,eAAO,EAAE6iB,eAAX;AAA4B5iB,mBAAW,EAAE;AAAzC,OAAjC;AACA;AACA;AACA;AACA;AACA;;UACM+iB,W;AACF,+BAAc;AAAA;;AACV,eAAKC,cAAL,GAAsB,IAAI,4CAAJ,EAAtB;AACH;AACD;AACJ;AACA;AACA;;;;;eACI,eAAoB;AAAE,mBAAO,KAAKA,cAAZ;AAA6B;AACnD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,qBAAY9lB,KAAZ,EAAmB;AACf,gBAAIA,KAAK,IAAI,IAAT,IAAiB,KAAK+lB,cAAL,CAAoB/lB,KAApB,KAA8B,KAAKgmB,OAAL,CAAahmB,KAAb,CAAnD,EAAwE;AACpE,qBAAOA,KAAP;AACH;;AACD,mBAAO,KAAKugB,OAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,mBAAU0F,MAAV,EAAkB;AACd,iBAAKA,MAAL,GAAcA,MAAd;;AACA,iBAAKH,cAAL,CAAoBtZ,IAApB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,qBAAYnK,KAAZ,EAAmB6jB,MAAnB,EAA2B;AACvB,mBAAO,KAAKC,OAAL,CAAa9jB,KAAb,IAAsB,KAAK8jB,OAAL,CAAaD,MAAb,CAAtB,IACH,KAAKE,QAAL,CAAc/jB,KAAd,IAAuB,KAAK+jB,QAAL,CAAcF,MAAd,CADpB,IAEH,KAAKG,OAAL,CAAahkB,KAAb,IAAsB,KAAKgkB,OAAL,CAAaH,MAAb,CAF1B;AAGH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,kBAAS7jB,KAAT,EAAgB6jB,MAAhB,EAAwB;AACpB,gBAAI7jB,KAAK,IAAI6jB,MAAb,EAAqB;AACjB;AACA,kBAAII,UAAU,GAAG,KAAKN,OAAL,CAAa3jB,KAAb,CAAjB;AACA;;AACA,kBAAIkkB,WAAW,GAAG,KAAKP,OAAL,CAAaE,MAAb,CAAlB;;AACA,kBAAII,UAAU,IAAIC,WAAlB,EAA+B;AAC3B,uBAAO,CAAC,KAAKC,WAAL,CAAiBnkB,KAAjB,EAAwB6jB,MAAxB,CAAR;AACH;;AACD,qBAAOI,UAAU,IAAIC,WAArB;AACH;;AACD,mBAAOlkB,KAAK,IAAI6jB,MAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,mBAAUO,IAAV,EAAgBxK,GAAhB,EAAqByK,GAArB,EAA0B;AACtB,gBAAIzK,GAAG,IAAI,KAAKuK,WAAL,CAAiBC,IAAjB,EAAuBxK,GAAvB,IAA8B,CAAzC,EAA4C;AACxC,qBAAOA,GAAP;AACH;;AACD,gBAAIyK,GAAG,IAAI,KAAKF,WAAL,CAAiBC,IAAjB,EAAuBC,GAAvB,IAA8B,CAAzC,EAA4C;AACxC,qBAAOA,GAAP;AACH;;AACD,mBAAOD,IAAP;AACH;;;;;;AAEL,UAAI,KAAJ,EAAW,CAkLV;AAED;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAME,gBAAgB,GAAG,IAAI,4DAAJ,CAAmB,kBAAnB,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,UAAIC,iBAAJ,C,CACA;AACA;AACA;AACA;AACA;;AACA,UAAI;AACAA,yBAAiB,GAAG,OAAOC,IAAP,IAAe,WAAnC;AACH,OAFD,CAGA,OAAOrY,EAAP,EAAW;AACPoY,yBAAiB,GAAG,KAApB;AACH;AACD;AACA;AACA;AACA;;;AACA,UAAME,mBAAmB,GAAG;AACxB,gBAAQ,CACJ,SADI,EACO,UADP,EACmB,OADnB,EAC4B,OAD5B,EACqC,KADrC,EAC4C,MAD5C,EACoD,MADpD,EAC4D,QAD5D,EACsE,WADtE,EAEJ,SAFI,EAEO,UAFP,EAEmB,UAFnB,CADgB;AAKxB,iBAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CALe;AAMxB,kBAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD;AANc,OAA5B;;AAQA,UAAMpG,EAAE;AAAG;AACX;AACA;AACA;AACA,eAJMA,EAIN,CAAAqG,CAAC;AAAA,eAAIjP,MAAM,CAACiP,CAAC,GAAG,CAAL,CAAV;AAAA,OAJD;AAKA;AACA;AACA;AACA;;;AACA,UAAMC,kBAAkB,GAAGC,KAAK,CAAC,EAAD,EAAMvG,EAAN,CAAhC;AACA;AACA;AACA;AACA;;AACA,UAAMwG,yBAAyB,GAAG;AAC9B,gBAAQ,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CADsB;AAE9B,iBAAS,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CAFqB;AAG9B,kBAAU,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B;AAHoB,OAAlC;AAKA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,cAAc,GAAG,oFAAvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAASF,KAAT,CAAehnB,MAAf,EAAuBmnB,aAAvB,EAAsC;AAClC;AACA,YAAMC,WAAW,GAAG7W,KAAK,CAACvQ,MAAD,CAAzB;;AACA,aAAK,IAAI8mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG9mB,MAApB,EAA4B8mB,CAAC,EAA7B,EAAiC;AAC7BM,qBAAW,CAACN,CAAD,CAAX,GAAiBK,aAAa,CAACL,CAAD,CAA9B;AACH;;AACD,eAAOM,WAAP;AACH;AACD;AACA;AACA;;;UACMC,iB;;;;;AACF;AACJ;AACA;AACA;AACI,mCAAYC,aAAZ,EAA2BpT,QAA3B,EAAqC;AAAA;;AAAA;;AACjC;AACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACQ,kBAAKqT,gBAAL,GAAwB,IAAxB;;AACA,uJAAgBD,aAAhB,EAdiC,CAejC;;;AACA,kBAAKC,gBAAL,GAAwB,CAACrT,QAAQ,CAACsT,OAAlC;AACA,kBAAKC,UAAL,GAAkBvT,QAAQ,CAACsT,OAAT,IAAoBtT,QAAQ,CAACwT,IAA/C;AAjBiC;AAkBpC;AACD;AACJ;AACA;AACA;;;;;iBACI,iBAAQlB,IAAR,EAAc;AACV,mBAAOA,IAAI,CAACmB,WAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kBAASnB,IAAT,EAAe;AACX,mBAAOA,IAAI,CAACL,QAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQK,IAAR,EAAc;AACV,mBAAOA,IAAI,CAACJ,OAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAaI,IAAb,EAAmB;AACf,mBAAOA,IAAI,CAACoB,MAAL,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,uBAAcC,KAAd,EAAqB;AAAA;;AACjB,gBAAIlB,iBAAJ,EAAuB;AACnB;AACA,kBAAMmB,GAAG,GAAG,IAAIlB,IAAI,CAACmB,cAAT,CAAwB,KAAK/B,MAA7B,EAAqC;AAAEgC,qBAAK,EAAEH,KAAT;AAAgBI,wBAAQ,EAAE;AAA1B,eAArC,CAAZ;AACA,qBAAOjB,KAAK,CAAC,EAAD;AAAM;AAC9B;AACA;AACA;AACY,wBAAAF,CAAC;AAAA,uBAAI,OAAI,CAACoB,8BAAL,CAAoC,OAAI,CAACC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAetB,CAAf,EAAkB,CAAlB,CAAlB,CAApC,CAAJ;AAAA,eAJW,CAAZ;AAKH;;AACD,mBAAOD,mBAAmB,CAACgB,KAAD,CAA1B;AACH;AACD;AACJ;AACA;;;;iBACI,wBAAe;AAAA;;AACX,gBAAIlB,iBAAJ,EAAuB;AACnB;AACA,kBAAMmB,GAAG,GAAG,IAAIlB,IAAI,CAACmB,cAAT,CAAwB,KAAK/B,MAA7B,EAAqC;AAAEqC,mBAAG,EAAE,SAAP;AAAkBJ,wBAAQ,EAAE;AAA5B,eAArC,CAAZ;AACA,qBAAOjB,KAAK,CAAC,EAAD;AAAM;AAC9B;AACA;AACA;AACY,wBAAAF,CAAC;AAAA,uBAAI,OAAI,CAACoB,8BAAL,CAAoC,OAAI,CAACC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkBtB,CAAC,GAAG,CAAtB,CAAlB,CAApC,CAAJ;AAAA,eAJW,CAAZ;AAKH;;AACD,mBAAOC,kBAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,2BAAkBc,KAAlB,EAAyB;AAAA;;AACrB,gBAAIlB,iBAAJ,EAAuB;AACnB;AACA,kBAAMmB,GAAG,GAAG,IAAIlB,IAAI,CAACmB,cAAT,CAAwB,KAAK/B,MAA7B,EAAqC;AAAEsC,uBAAO,EAAET,KAAX;AAAkBI,wBAAQ,EAAE;AAA5B,eAArC,CAAZ;AACA,qBAAOjB,KAAK,CAAC,CAAD;AAAK;AAC7B;AACA;AACA;AACY,wBAAAF,CAAC;AAAA,uBAAI,OAAI,CAACoB,8BAAL,CAAoC,OAAI,CAACC,OAAL,CAAaL,GAAb,EAAkB,IAAIM,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkBtB,CAAC,GAAG,CAAtB,CAAlB,CAApC,CAAJ;AAAA,eAJW,CAAZ;AAKH;;AACD,mBAAOG,yBAAyB,CAACY,KAAD,CAAhC;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,qBAAYrB,IAAZ,EAAkB;AACd,gBAAIG,iBAAJ,EAAuB;AACnB;AACA,kBAAMmB,GAAG,GAAG,IAAIlB,IAAI,CAACmB,cAAT,CAAwB,KAAK/B,MAA7B,EAAqC;AAAEuC,oBAAI,EAAE,SAAR;AAAmBN,wBAAQ,EAAE;AAA7B,eAArC,CAAZ;AACA,qBAAO,KAAKC,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkBtB,IAAlB,CAApC,CAAP;AACH;;AACD,mBAAO3O,MAAM,CAAC,KAAKqO,OAAL,CAAaM,IAAb,CAAD,CAAb;AACH;AACD;AACJ;AACA;;;;iBACI,6BAAoB;AAChB;AACA,mBAAO,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,2BAAkBA,IAAlB,EAAwB;AACpB,mBAAO,KAAKJ,OAAL,CAAa,KAAKoC,uBAAL,CAA6B,KAAKtC,OAAL,CAAaM,IAAb,CAA7B,EAAiD,KAAKL,QAAL,CAAcK,IAAd,IAAsB,CAAvE,EAA0E,CAA1E,CAAb,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,eAAMA,IAAN,EAAY;AACR,mBAAO,IAAI4B,IAAJ,CAAS5B,IAAI,CAACiC,OAAL,EAAT,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,oBAAWF,IAAX,EAAiBP,KAAjB,EAAwBxB,IAAxB,EAA8B;AAC1B;AACA;AACA,gBAAIwB,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,EAAzB,EAA6B;AACzB,oBAAM3iB,KAAK,iCAAyB2iB,KAAzB,iDAAX;AACH;;AACD,gBAAIxB,IAAI,GAAG,CAAX,EAAc;AACV,oBAAMnhB,KAAK,0BAAkBmhB,IAAlB,wCAAX;AACH;AACD;;;AACA,gBAAIkC,MAAM,GAAG,KAAKF,uBAAL,CAA6BD,IAA7B,EAAmCP,KAAnC,EAA0CxB,IAA1C,CAAb,CAV0B,CAW1B;;;AACA,gBAAIkC,MAAM,CAACvC,QAAP,MAAqB6B,KAAzB,EAAgC;AAC5B,oBAAM3iB,KAAK,0BAAkBmhB,IAAlB,uCAAiDwB,KAAjD,SAAX;AACH;;AACD,mBAAOU,MAAP;AACH;AACD;AACJ;AACA;;;;iBACI,iBAAQ;AACJ,mBAAO,IAAIN,IAAJ,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,eAAMroB,KAAN,EAAa;AACT;AACA;AACA,gBAAI,OAAOA,KAAP,IAAgB,QAApB,EAA8B;AAC1B,qBAAO,IAAIqoB,IAAJ,CAASroB,KAAT,CAAP;AACH;;AACD,mBAAOA,KAAK,GAAG,IAAIqoB,IAAJ,CAASA,IAAI,CAACO,KAAL,CAAW5oB,KAAX,CAAT,CAAH,GAAiC,IAA7C;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,gBAAOymB,IAAP,EAAaoC,aAAb,EAA4B;AACxB,gBAAI,CAAC,KAAK7C,OAAL,CAAaS,IAAb,CAAL,EAAyB;AACrB,oBAAMnhB,KAAK,CAAC,gDAAD,CAAX;AACH;;AACD,gBAAIshB,iBAAJ,EAAuB;AACnB;AACA;AACA,kBAAI,KAAKc,UAAL,KAAoBjB,IAAI,CAACmB,WAAL,KAAqB,CAArB,IAA0BnB,IAAI,CAACmB,WAAL,KAAqB,IAAnE,CAAJ,EAA8E;AAC1EnB,oBAAI,GAAG,KAAKqC,KAAL,CAAWrC,IAAX,CAAP;AACAA,oBAAI,CAACsC,WAAL,CAAiB/M,IAAI,CAAC0K,GAAL,CAAS,CAAT,EAAY1K,IAAI,CAACC,GAAL,CAAS,IAAT,EAAewK,IAAI,CAACmB,WAAL,EAAf,CAAZ,CAAjB;AACH;;AACDiB,2BAAa,GAAGG,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,aAAlB,CAAd,EAAgD;AAAEX,wBAAQ,EAAE;AAAZ,eAAhD,CAAhB;AACA;;AACA,kBAAMH,GAAG,GAAG,IAAIlB,IAAI,CAACmB,cAAT,CAAwB,KAAK/B,MAA7B,EAAqC4C,aAArC,CAAZ;AACA,qBAAO,KAAKV,8BAAL,CAAoC,KAAKC,OAAL,CAAaL,GAAb,EAAkBtB,IAAlB,CAApC,CAAP;AACH;;AACD,mBAAO,KAAK0B,8BAAL,CAAoC1B,IAAI,CAACyC,YAAL,EAApC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,0BAAiBzC,IAAjB,EAAuB0C,KAAvB,EAA8B;AAC1B,mBAAO,KAAKC,iBAAL,CAAuB3C,IAAvB,EAA6B0C,KAAK,GAAG,EAArC,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,2BAAkB1C,IAAlB,EAAwB4C,MAAxB,EAAgC;AAC5B;AACA,gBAAIC,OAAO,GAAG,KAAKb,uBAAL,CAA6B,KAAKtC,OAAL,CAAaM,IAAb,CAA7B,EAAiD,KAAKL,QAAL,CAAcK,IAAd,IAAsB4C,MAAvE,EAA+E,KAAKhD,OAAL,CAAaI,IAAb,CAA/E,CAAd,CAF4B,CAG5B;AACA;AACA;AACA;;;AACA,gBAAI,KAAKL,QAAL,CAAckD,OAAd,KAA0B,CAAC,CAAC,KAAKlD,QAAL,CAAcK,IAAd,IAAsB4C,MAAvB,IAAiC,EAAjC,GAAsC,EAAvC,IAA6C,EAA3E,EAA+E;AAC3EC,qBAAO,GAAG,KAAKb,uBAAL,CAA6B,KAAKtC,OAAL,CAAamD,OAAb,CAA7B,EAAoD,KAAKlD,QAAL,CAAckD,OAAd,CAApD,EAA4E,CAA5E,CAAV;AACH;;AACD,mBAAOA,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yBAAgB7C,IAAhB,EAAsB8C,IAAtB,EAA4B;AACxB,mBAAO,KAAKd,uBAAL,CAA6B,KAAKtC,OAAL,CAAaM,IAAb,CAA7B,EAAiD,KAAKL,QAAL,CAAcK,IAAd,CAAjD,EAAsE,KAAKJ,OAAL,CAAaI,IAAb,IAAqB8C,IAA3F,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,mBAAU9C,IAAV,EAAgB;AACZ,mBAAO,CACHA,IAAI,CAAC+C,cAAL,EADG,EAEH,KAAKC,OAAL,CAAahD,IAAI,CAACiD,WAAL,KAAqB,CAAlC,CAFG,EAGH,KAAKD,OAAL,CAAahD,IAAI,CAACkD,UAAL,EAAb,CAHG,EAILnO,IAJK,CAIA,GAJA,CAAP;AAKH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,qBAAYxb,KAAZ,EAAmB;AACf,gBAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC3B,kBAAI,CAACA,KAAL,EAAY;AACR,uBAAO,IAAP;AACH,eAH0B,CAI3B;AACA;;;AACA,kBAAImnB,cAAc,CAACyC,IAAf,CAAoB5pB,KAApB,CAAJ,EAAgC;AAC5B;AACA,oBAAIymB,IAAI,GAAG,IAAI4B,IAAJ,CAASroB,KAAT,CAAX;;AACA,oBAAI,KAAKgmB,OAAL,CAAaS,IAAb,CAAJ,EAAwB;AACpB,yBAAOA,IAAP;AACH;AACJ;AACJ;;AACD,sGAAyBzmB,KAAzB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,wBAAe6pB,GAAf,EAAoB;AAChB,mBAAOA,GAAG,YAAYxB,IAAtB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iBAAQ5B,IAAR,EAAc;AACV,mBAAO,CAACqD,KAAK,CAACrD,IAAI,CAACiC,OAAL,EAAD,CAAb;AACH;AACD;AACJ;AACA;;;;iBACI,mBAAU;AACN,mBAAO,IAAIL,IAAJ,CAAS0B,GAAT,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,iCAAwBvB,IAAxB,EAA8BP,KAA9B,EAAqCxB,IAArC,EAA2C;AACvC;AACA,gBAAMkC,MAAM,GAAG,IAAIN,IAAJ,CAASG,IAAT,EAAeP,KAAf,EAAsBxB,IAAtB,CAAf,CAFuC,CAGvC;AACA;;AACA,gBAAI+B,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAG,GAAxB,EAA6B;AACzBG,oBAAM,CAACI,WAAP,CAAmB,KAAK5C,OAAL,CAAawC,MAAb,IAAuB,IAA1C;AACH;;AACD,mBAAOA,MAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,iBAAQqB,CAAR,EAAW;AACP,mBAAO,CAAC,OAAOA,CAAR,EAAWC,KAAX,CAAiB,CAAC,CAAlB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,wCAA+BC,GAA/B,EAAoC;AAChC,mBAAOA,GAAG,CAACC,OAAJ,CAAY,iBAAZ,EAA+B,EAA/B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,iBAAQpC,GAAR,EAAatB,IAAb,EAAmB;AACf;AACA,gBAAM2D,CAAC,GAAG,IAAI/B,IAAJ,CAASA,IAAI,CAACgC,GAAL,CAAS5D,IAAI,CAACmB,WAAL,EAAT,EAA6BnB,IAAI,CAACL,QAAL,EAA7B,EAA8CK,IAAI,CAACJ,OAAL,EAA9C,EAA8DI,IAAI,CAAC6D,QAAL,EAA9D,EAA+E7D,IAAI,CAAC8D,UAAL,EAA/E,EAAkG9D,IAAI,CAAC+D,UAAL,EAAlG,EAAqH/D,IAAI,CAACgE,eAAL,EAArH,CAAT,CAAV;AACA,mBAAO1C,GAAG,CAAC2C,MAAJ,CAAWN,CAAX,CAAP;AACH;;;;QAlV2BvE,W;;AAoVhCyB,uBAAiB,CAAC/lB,IAAlB,GAAyB,SAASopB,yBAAT,CAAmClpB,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI6lB,iBAAV,EAA6B,uDAAgB5B,eAAhB,EAAiC,CAAjC,CAA7B,EAAkE,uDAAgB,8DAAhB,CAAlE,CAAP;AAA6G,OAA9K;;AACA4B,uBAAiB,CAACsD,KAAlB,GAA0B,iEAA0B;AAAEC,aAAK,EAAEvD,iBAAT;AAA4BvoB,eAAO,EAAEuoB,iBAAiB,CAAC/lB;AAAvD,OAA1B,CAA1B;AACA;;AACA+lB,uBAAiB,CAAC9jB,cAAlB,GAAmC;AAAA,eAAM,CACrC;AAAE7B,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC+hB,eAAD;AAAtB,WAArB;AAA5B,SADqC,EAErC;AAAE/jB,cAAI,EAAE;AAAR,SAFqC,CAAN;AAAA,OAAnC;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBwjB,iBAAzB,EAA4C,CAAC;AACvG3lB,cAAI,EAAE;AADiG,SAAD,CAA5C,EAE1D,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AAC3C/B,kBAAI,EAAE;AADqC,aAAD,EAE3C;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC+hB,eAAD;AAFP,aAF2C;AAA5B,WAAD,EAKX;AAAE/jB,gBAAI,EAAE;AAAR,WALW,CAAP;AAKyB,SAPmB,EAOjB,IAPiB,CAAnD;AAO0C,OAPzD;;AAQA,UAAI,KAAJ,EAAW,CAoBV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMmpB,uBAAuB,GAAG;AAC5BlC,aAAK,EAAE;AACHmC,mBAAS,EAAE;AADR,SADqB;AAI5BzH,eAAO,EAAE;AACLyH,mBAAS,EAAE;AAAEvC,gBAAI,EAAE,SAAR;AAAmBP,iBAAK,EAAE,SAA1B;AAAqCK,eAAG,EAAE;AAA1C,WADN;AAEL0C,wBAAc,EAAE;AAAExC,gBAAI,EAAE,SAAR;AAAmBP,iBAAK,EAAE;AAA1B,WAFX;AAGLgD,uBAAa,EAAE;AAAEzC,gBAAI,EAAE,SAAR;AAAmBP,iBAAK,EAAE,MAA1B;AAAkCK,eAAG,EAAE;AAAvC,WAHV;AAIL4C,4BAAkB,EAAE;AAAE1C,gBAAI,EAAE,SAAR;AAAmBP,iBAAK,EAAE;AAA1B;AAJf;AAJmB,OAAhC;AAYA;AACA;AACA;AACA;AACA;;UACMkD,gB;;;;AAENA,sBAAgB,CAAC5pB,IAAjB,GAAwB,SAAS6pB,wBAAT,CAAkC3pB,CAAlC,EAAqC;AAAE,eAAO,KAAKA,CAAC,IAAI0pB,gBAAV,GAAP;AAAuC,OAAtG;;AACAA,sBAAgB,CAACzb,IAAjB,GAAwB,+DAAwB;AAAE/N,YAAI,EAAEwpB;AAAR,OAAxB,CAAxB;AACAA,sBAAgB,CAACxb,IAAjB,GAAwB,+DAAwB;AAAExL,iBAAS,EAAE,CACrD;AAAEtB,iBAAO,EAAEgjB,WAAX;AAAwBwF,kBAAQ,EAAE/D;AAAlC,SADqD,CAAb;AAEzC1X,eAAO,EAAE,CAAC,CAAC,oEAAD,CAAD;AAFgC,OAAxB,CAAxB;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bsb,gBAA1B,EAA4C;AAAEvb,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,oEAAD,CAAP;AAA0B;AAAnD,SAA5C,CAAnD;AAAwJ,OAAvK;;AACA,OAAC,YAAY;AAAE,SAAC,OAAO9L,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBqnB,gBAAzB,EAA2C,CAAC;AACtGxpB,cAAI,EAAE,sDADgG;AAEtGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAAC,oEAAD,CADV;AAECzL,qBAAS,EAAE,CACP;AAAEtB,qBAAO,EAAEgjB,WAAX;AAAwBwF,sBAAQ,EAAE/D;AAAlC,aADO;AAFZ,WAAD;AAFgG,SAAD,CAA3C,EAQ1D,IAR0D,EAQpD,IARoD,CAAnD;AAQO,OARtB;;AASA,UAAMgE,IAAI,GAAGR,uBAAb;;UACMS,mB;;;;AAENA,yBAAmB,CAAChqB,IAApB,GAA2B,SAASiqB,2BAAT,CAAqC/pB,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAI8pB,mBAAV,GAAP;AAA0C,OAA/G;;AACAA,yBAAmB,CAAC7b,IAApB,GAA2B,+DAAwB;AAAE/N,YAAI,EAAE4pB;AAAR,OAAxB,CAA3B;AACAA,yBAAmB,CAAC5b,IAApB,GAA2B,+DAAwB;AAAExL,iBAAS,EAAE,CAAC;AAAEtB,iBAAO,EAAE8jB,gBAAX;AAA6B9F,kBAAQ,EAAEyK;AAAvC,SAAD,CAAb;AAA8D1b,eAAO,EAAE,CAAC,CAACub,gBAAD,CAAD;AAAvE,OAAxB,CAA3B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOtb,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B0b,mBAA1B,EAA+C;AAAE3b,iBAAO,EAAE,CAACub,gBAAD;AAAX,SAA/C,CAAnD;AAAqI,OAApJ;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOrnB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBynB,mBAAzB,EAA8C,CAAC;AACzG5pB,cAAI,EAAE,sDADmG;AAEzGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAACub,gBAAD,CADV;AAEChnB,qBAAS,EAAE,CAAC;AAAEtB,qBAAO,EAAE8jB,gBAAX;AAA6B9F,sBAAQ,EAAEyK;AAAvC,aAAD;AAFZ,WAAD;AAFmG,SAAD,CAA9C,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAQA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMG,4B;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,gCAAazG,OAAb,EAAsBxT,IAAtB,EAA4B;AACxB,mBAAO,CAAC,EAAEwT,OAAO,IAAIA,OAAO,CAACzE,OAAnB,KAA+ByE,OAAO,CAAC0G,KAAR,IAAkBla,IAAI,IAAIA,IAAI,CAACc,SAA9D,CAAF,CAAR;AACH;;;;;;AAELmZ,kCAA4B,CAAClqB,IAA7B,GAAoC,SAASoqB,oCAAT,CAA8ClqB,CAA9C,EAAiD;AAAE,eAAO,KAAKA,CAAC,IAAIgqB,4BAAV,GAAP;AAAmD,OAA1I;;AACAA,kCAA4B,CAACb,KAA7B,GAAqC,iEAA0B;AAAEC,aAAK,EAAEY,4BAAT;AAAuC1sB,eAAO,EAAE0sB,4BAA4B,CAAClqB;AAA7E,OAA1B,CAArC;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOuC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB2nB,4BAAzB,EAAuD,CAAC;AAClH9pB,cAAI,EAAE;AAD4G,SAAD,CAAvD,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,OAFtB;AAGA;AACA;AACA;;;UACMiqB,iB;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,gCAAa5G,OAAb,EAAsBxT,IAAtB,EAA4B;AACxB,mBAAO,CAAC,EAAEwT,OAAO,IAAIA,OAAO,CAACzE,OAAnB,KAA+ByE,OAAO,CAAC6G,OAAR,IAAoBra,IAAI,IAAIA,IAAI,CAACc,SAAhE,CAAF,CAAR;AACH;;;;;;AAELsZ,uBAAiB,CAACrqB,IAAlB,GAAyB,SAASuqB,yBAAT,CAAmCrqB,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAImqB,iBAAV,GAAP;AAAwC,OAAzG;AACA;;;AAAmBA,uBAAiB,CAAChB,KAAlB,GAA0B,yEAAmB;AAAE7rB,eAAO,EAAE,SAAS+sB,yBAAT,GAAqC;AAAE,iBAAO,IAAIF,iBAAJ,EAAP;AAAiC,SAAnF;AAAqFf,aAAK,EAAEe,iBAA5F;AAA+G9sB,kBAAU,EAAE;AAA3H,OAAnB,CAA1B;;AACnB,OAAC,YAAY;AAAE,SAAC,OAAOgF,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB8nB,iBAAzB,EAA4C,CAAC;AACvGjqB,cAAI,EAAE,wDADiG;AAEvGgC,cAAI,EAAE,CAAC;AAAE7E,sBAAU,EAAE;AAAd,WAAD;AAFiG,SAAD,CAA5C,EAG1D,IAH0D,EAGpD,IAHoD,CAAnD;AAGO,OAHtB;AAKA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASitB,WAAT,GAAuB,CAAG;;AAC1B,UAAI,KAAJ,EAAW,CASV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,YAAT,GAAwB,CAAG;;AAC3B,UAAI,KAAJ,EAAW,CAQV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,UAAT,GAAsB,CAAG;;AACzB,UAAI,KAAJ,EAAW,CAOV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,gBAAT,GAA4B,CAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,cAAT,GAA0B,CAAG;;AAC7B,UAAI,KAAJ,EAAW,CAaV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,aAAT,GAAyB,CAAG;;AAC5B,UAAI,KAAJ,EAAW,CA6BV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,aAAT,GAAyB,CAAG;;AAC5B,UAAI,KAAJ,EAAW,CAiBV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,kBAAkB,GAAG,IAAI,4DAAJ,CAAmB,oBAAnB,CAA3B;AACA;;AACA,UAAMC,0CAA0C,GAAG,CAC/C,WAD+C,EAE/C,OAF+C,EAG/C,YAH+C,EAI/C,UAJ+C,EAK/C,YAL+C,EAM/C,WAN+C,CAAnD;;AAQA,UAAMC,IAAI;AAAG;AACb;AACA;AACA,eAHMA,IAGN,GAAM,CAAG,CAHT;AAAA,UAGWC,EAAE;AAAG;AAChB;AACA;AACA,eAHWA,EAGX,GAAM,CAAG,CANT;AAOA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,kBAAkB,GAAG;AACvBC,UAAE,EAAGH,IADkB;AAEvBI,WAAG,EAAGH;AAFiB,OAA3B;AAIA;AACA;AACA;AACA;AACA;;UACMI,a;;;;;AACF;AACJ;AACA;AACA;AACI,+BAAYC,cAAZ,EAA4BC,aAA5B,EAA2C;AAAA;;AAAA;;AACvC;AACA,kBAAKD,cAAL,GAAsBA,cAAtB;AACA;AACR;AACA;;AACQ,kBAAKE,MAAL,GAAcT,0CAAd;AANuC;AAO1C;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACI,qBAAYje,OAAZ,EAAqB;AACjB;AACA,gBAAM2e,MAAM,GAAG,OAAO3lB,MAAP,KAAkB,WAAlB;AAAkC;AAAkBA,kBAApB,CAA8B4lB,MAA9D,GAAuE,IAAtF;;AACA,gBAAI,CAACD,MAAL,EAAa;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAOP,kBAAP;AACH;AACD;;;AACA,gBAAMS,EAAE,GAAG,IAAIF,MAAJ,CAAW3e,OAAX,EAAoB,KAAKwe,cAAL,IAAuBrpB,SAA3C,CAAX,CAfiB,CAgBjB;;AACA;;AACA,gBAAM2pB,GAAG,GAAG,IAAIH,MAAM,CAACI,GAAX,EAAZ;AACA;;AACA,gBAAMC,KAAK,GAAG,IAAIL,MAAM,CAACM,KAAX,EAAd;AACA;;AACA,gBAAMC,KAAK,GAAG,IAAIP,MAAM,CAACQ,KAAX,EAAd,CAtBiB,CAuBjB;AACA;AACA;;AACA;;AACA,gBAAMC,KAAK,GAAG,KAAKC,iBAAL,CAAuBP,GAAvB,EAA4B;AAAE9rB,mBAAK,EAAE,OAAT;AAAkBssB,uBAAS,EAAE;AAA7B,aAA5B,EAA8DN,KAA9D,CAAd;AACA;;;AACA,gBAAMO,SAAS,GAAG,KAAKF,iBAAL,CAAuBH,KAAvB,EAA8B;AAAElsB,mBAAK,EAAE,WAAT;AAAsBwsB,kBAAI,EAAE;AAA5B,aAA9B,CAAlB,CA7BiB,CA8BjB;;;AACAV,eAAG,CAACW,aAAJ,CAAkBT,KAAlB,EA/BiB,CAgCjB;AACA;AACA;AACA;AACA;;AACAO,qBAAS,CAACE,aAAV,CAAwBL,KAAxB,EArCiB,CAsCjB;;AACAP,cAAE,CAAC3X,GAAH,CAAO,CAAC8X,KAAD,EAAQE,KAAR,EAAeJ,GAAf,EAAoBM,KAApB,EAA2BG,SAA3B,CAAP;AACA;AAAQ;AAAkBV;AAA1B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkBtJ,IAAlB,EAAwBnjB,OAAxB,EAAkD;AAC9C;AACA,gBAAIstB,UAAU,GAAG;AAAM;AAAkBnK,gBAAI,CAACoK,WAA7B,CAA4CvtB,OAA5C,CAAjB;;AAF8C,+CAAdwtB,YAAc;AAAdA,0BAAc;AAAA;;AAG9CA,wBAAY,CAAC7a,IAAb,CAAkBwQ,IAAlB;AACAqK,wBAAY,CAACniB,OAAb;AAAsB;AAC9B;AACA;AACA;AACQ,sBAAAoiB,IAAI;AAAA,qBAAIH,UAAU,CAACD,aAAX,CAAyBI,IAAzB,CAAJ;AAAA,aAJJ;AAKA,mBAAOH,UAAP;AACH;;;;QAtFuB,6E;;AAwF5BnB,mBAAa,CAACtrB,IAAd,GAAqB,SAAS6sB,qBAAT,CAA+B3sB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIorB,aAAV,EAAyB,uDAAgBP,kBAAhB,EAAoC,CAApC,CAAzB,EAAiE,uDAAgBxK,eAAhB,EAAiC,CAAjC,CAAjE,CAAP;AAA+G,OAAxK;;AACA+K,mBAAa,CAACjC,KAAd,GAAsB,iEAA0B;AAAEC,aAAK,EAAEgC,aAAT;AAAwB9tB,eAAO,EAAE8tB,aAAa,CAACtrB;AAA/C,OAA1B,CAAtB;AACA;;AACAsrB,mBAAa,CAACrpB,cAAd,GAA+B;AAAA,eAAM,CACjC;AAAE7B,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC2oB,kBAAD;AAAtB,WAArB;AAA/B,SADiC,EAEjC;AAAE3qB,cAAI,EAAEmgB,eAAR;AAAyBpe,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAArC,SAFiC,CAAN;AAAA,OAA/B;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+oB,aAAzB,EAAwC,CAAC;AACnGlrB,cAAI,EAAE;AAD6F,SAAD,CAAxC,EAE1D,YAAY;AAAE,iBAAO,CAAC;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC9C/B,kBAAI,EAAE;AADwC,aAAD,EAE9C;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC2oB,kBAAD;AAFP,aAF8C;AAA/B,WAAD,EAKX;AAAE3qB,gBAAI,EAAEmgB,eAAR;AAAyBpe,sBAAU,EAAE,CAAC;AACxC/B,kBAAI,EAAE;AADkC,aAAD;AAArC,WALW,CAAP;AAOF,SAT8C,EAS5C,IAT4C,CAAnD;AASe,OAT9B;;AAUA,UAAI,KAAJ,EAAW,CAWV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;UACM0sB,O;;;;AAENA,aAAO,CAAC9sB,IAAR,GAAe,SAAS+sB,eAAT,CAAyB7sB,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAI4sB,OAAV,GAAP;AAA8B,OAA3E;;AACAA,aAAO,CAAC9pB,IAAR,GAAe,gEAAyB;AAAE5C,YAAI,EAAE0sB,OAAR;AAAiBzsB,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,UAAL,EAAiB,EAAjB,CAAD,EAAuB,CAAC,EAAD,EAAK,SAAL,EAAgB,EAAhB,CAAvB,CAA5B;AAAyEU,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ;AAApF,OAAzB,CAAf;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOwB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBuqB,OAAzB,EAAkC,CAAC;AAC7F1sB,cAAI,EAAE,uDADuF;AAE7FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,uBADX;AAECG,gBAAI,EAAE;AAAE,uBAAS;AAAX;AAFP,WAAD;AAFuF,SAAD,CAAlC,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASqqB,QAAT,CAAkBC,KAAlB,EAAyBlgB,OAAzB,EAAkD;AAAA,YAAhBmgB,MAAgB,uEAAP,KAAO;AAC9C;AACA;AACAD,aAAK,CAAC9mB,OAAN,CAAcN,IAAd,CAAmB,iEAAUonB,KAAV,CAAnB,EAAqC3tB,SAArC;AAAgD;AACpD;AACA;AACA;AACI,wBAAgB;AAAA,cAAbZ,MAAa,QAAbA,MAAa;AACZyuB,kBAAQ,CAACpgB,OAAD,YAAamgB,MAAb,cAA8B,KAA9B,CAAR;AACAC,kBAAQ,CAACpgB,OAAD,YAAamgB,MAAb,cAA8B,KAA9B,CAAR;AACAC,kBAAQ,CAACpgB,OAAD,YAAamgB,MAAb,kBAAkC,KAAlC,CAAR;;AACA,cAAIxuB,MAAM,KAAK,CAAX,IAAgBA,MAAM,KAAK,CAA/B,EAAkC;AAC9ByuB,oBAAQ,CAACpgB,OAAD,YAAamgB,MAAb,cAAuBxuB,MAAvB,YAAsC,IAAtC,CAAR;AACH,WAFD,MAGK,IAAIA,MAAM,GAAG,CAAb,EAAgB;AACjByuB,oBAAQ,CAACpgB,OAAD,YAAamgB,MAAb,kBAAkC,IAAlC,CAAR;AACH;AACJ,SAdD;AAeH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,QAAT,CAAkBpgB,OAAlB,EAA2BjO,SAA3B,EAAsCsuB,KAAtC,EAA6C;AACzC;AACA,YAAMvuB,SAAS,GAAGkO,OAAO,CAAC9N,aAAR,CAAsBJ,SAAxC;AACAuuB,aAAK,GAAGvuB,SAAS,CAACoV,GAAV,CAAcnV,SAAd,CAAH,GAA8BD,SAAS,CAACwW,MAAV,CAAiBvW,SAAjB,CAAnC;AACH;AACD;AACA;AACA;AACA;AACA;AACA;;;UACMuuB,a;AACF;AACJ;AACA;AACA;AACI,6BAAYJ,KAAZ,EAAmBlgB,OAAnB,EAA4B;AAAA;;AACxBigB,gBAAQ,CAACC,KAAD,EAAQlgB,OAAR,CAAR;AACH,O;;UAECugB,a;;;;AAENA,mBAAa,CAACttB,IAAd,GAAqB,SAASutB,qBAAT,CAA+BrtB,CAA/B,EAAkC;AAAE,eAAO,KAAKA,CAAC,IAAIotB,aAAV,GAAP;AAAoC,OAA7F;;AACAA,mBAAa,CAACnf,IAAd,GAAqB,+DAAwB;AAAE/N,YAAI,EAAEktB;AAAR,OAAxB,CAArB;AACAA,mBAAa,CAAClf,IAAd,GAAqB,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAACkS,eAAD,CAAD,EAAoBA,eAApB;AAAX,OAAxB,CAArB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOjS,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bgf,aAA1B,EAAyC;AAAE/e,sBAAY,EAAE,CAACue,OAAD,CAAhB;AAA2Bze,iBAAO,EAAE,CAACkS,eAAD,CAApC;AAAuD/R,iBAAO,EAAE,CAACse,OAAD,EAAUvM,eAAV;AAAhE,SAAzC,CAAnD;AAA4L,OAA3M;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhe,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+qB,aAAzB,EAAwC,CAAC;AACnGltB,cAAI,EAAE,sDAD6F;AAEnGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAACkS,eAAD,CADV;AAEC/R,mBAAO,EAAE,CAACse,OAAD,EAAUvM,eAAV,CAFV;AAGChS,wBAAY,EAAE,CAACue,OAAD;AAHf,WAAD;AAF6F,SAAD,CAAxC,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMU,WAAW,GAAG;AAChBC,iBAAS,EAAE,CADK;AACFC,eAAO,EAAE,CADP;AACUC,kBAAU,EAAE,CADtB;AACyBC,cAAM,EAAE;AADjC,OAApB;AAGA;AACA;AACA;;UACMC,S;AACF;AACJ;AACA;AACA;AACA;AACI,2BAAYC,SAAZ,EAAuB/gB,OAAvB,EAAgCghB,MAAhC,EAAwC;AAAA;;AACpC,eAAKD,SAAL,GAAiBA,SAAjB;AACA,eAAK/gB,OAAL,GAAeA,OAAf;AACA,eAAKghB,MAAL,GAAcA,MAAd;AACA;AACR;AACA;;AACQ,eAAKC,KAAL,GAAa;AAAE;AAAf;AACH;AACD;AACJ;AACA;AACA;;;;;iBACI,mBAAU;AACN,iBAAKF,SAAL,CAAeG,aAAf,CAA6B,IAA7B;AACH;;;;;;AAEL,UAAI,KAAJ,EAAW,CAqBV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,qBAAT,GAAiC,CAAG;;AACpC,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,YAAT,GAAwB,CAAG;;AAC3B,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;AACA;;;AACA,UAAMC,4BAA4B,GAAG;AACjCC,qBAAa,EAAE,GADkB;AAEjCC,oBAAY,EAAE;AAFmB,OAArC;AAIA;AACA;AACA;AACA;AACA;;AACA,UAAMC,wBAAwB,GAAG,GAAjC;AACA;AACA;AACA;AACA;;AACA,UAAMC,mBAAmB,GAAG,8FAAgC;AAAEC,eAAO,EAAE;AAAX,OAAhC,CAA5B;AACA;AACA;AACA;AACA;;AACA,UAAMC,iBAAiB,GAAG,CAAC,WAAD,EAAc,YAAd,CAA1B;AACA;AACA;AACA;AACA;;AACA,UAAMC,eAAe,GAAG,CAAC,SAAD,EAAY,YAAZ,EAA0B,UAA1B,EAAsC,aAAtC,CAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACMC,c;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,gCAAYC,OAAZ,EAAqBlc,OAArB,EAA8Bmc,mBAA9B,EAAmDlc,QAAnD,EAA6D;AAAA;;AACzD,eAAKic,OAAL,GAAeA,OAAf;AACA,eAAKlc,OAAL,GAAeA,OAAf;AACA;AACR;AACA;;AACQ,eAAKoc,cAAL,GAAsB,KAAtB;AACA;AACR;AACA;;AACQ,eAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;AACA;AACR;AACA;;AACQ,eAAKC,0BAAL,GAAkC,KAAlC,CAdyD,CAezD;;AACA,cAAItc,QAAQ,CAACuc,SAAb,EAAwB;AACpB,iBAAKC,iBAAL,GAAyB,4EAAcN,mBAAd,CAAzB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;iBACI,sBAAaO,CAAb,EAAgBC,CAAhB,EAAgC;AAAA;;AAAA,gBAAbvB,MAAa,uEAAJ,EAAI;;AAC5B;AACA,gBAAMwB,aAAa,GAAG,KAAKC,cAAL,GAClB,KAAKA,cAAL,IAAuB,KAAKJ,iBAAL,CAAuBviB,qBAAvB,EAD3B;AAEA;;;AACA,gBAAM4iB,eAAe,GAAGhI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB0G,4BAAlB,CAAd,EAA+DL,MAAM,CAAC2B,SAAtE,CAAxB;;AACA,gBAAI3B,MAAM,CAAC4B,QAAX,EAAqB;AACjBN,eAAC,GAAGE,aAAa,CAACK,IAAd,GAAqBL,aAAa,CAACnkB,KAAd,GAAsB,CAA/C;AACAkkB,eAAC,GAAGC,aAAa,CAACM,GAAd,GAAoBN,aAAa,CAACO,MAAd,GAAuB,CAA/C;AACH;AACD;;;AACA,gBAAMC,MAAM,GAAGhC,MAAM,CAACgC,MAAP,IAAiBC,wBAAwB,CAACX,CAAD,EAAIC,CAAJ,EAAOC,aAAP,CAAxD;AACA;;AACA,gBAAMU,OAAO,GAAGZ,CAAC,GAAGE,aAAa,CAACK,IAAlC;AACA;;AACA,gBAAMM,OAAO,GAAGZ,CAAC,GAAGC,aAAa,CAACM,GAAlC;AACA;;AACA,gBAAMM,QAAQ,GAAGV,eAAe,CAACpB,aAAjC;AACA;;AACA,gBAAM+B,MAAM,GAAGrc,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAf;AACAoc,kBAAM,CAACvxB,SAAP,CAAiBoV,GAAjB,CAAqB,oBAArB;AACAmc,kBAAM,CAAC7J,KAAP,CAAaqJ,IAAb,aAAuBK,OAAO,GAAGF,MAAjC;AACAK,kBAAM,CAAC7J,KAAP,CAAasJ,GAAb,aAAsBK,OAAO,GAAGH,MAAhC;AACAK,kBAAM,CAAC7J,KAAP,CAAauJ,MAAb,aAAyBC,MAAM,GAAG,CAAlC;AACAK,kBAAM,CAAC7J,KAAP,CAAanb,KAAb,aAAwB2kB,MAAM,GAAG,CAAjC,QAxB4B,CAyB5B;AACA;;AACA,gBAAIhC,MAAM,CAACzX,KAAP,IAAgB,IAApB,EAA0B;AACtB8Z,oBAAM,CAAC7J,KAAP,CAAa8J,eAAb,GAA+BtC,MAAM,CAACzX,KAAtC;AACH;;AACD8Z,kBAAM,CAAC7J,KAAP,CAAa+J,kBAAb,aAAqCH,QAArC;;AACA,iBAAKf,iBAAL,CAAuBlb,WAAvB,CAAmCkc,MAAnC,EA/B4B,CAgC5B;AACA;;;AACAG,qCAAyB,CAACH,MAAD,CAAzB;AACAA,kBAAM,CAAC7J,KAAP,CAAaiK,SAAb,GAAyB,UAAzB,CAnC4B,CAoC5B;;AACA;;AACA,gBAAMC,SAAS,GAAG,IAAI5C,SAAJ,CAAc,IAAd,EAAoBuC,MAApB,EAA4BrC,MAA5B,CAAlB;AACA0C,qBAAS,CAACzC,KAAV,GAAkB;AAAE;AAApB,aAvC4B,CAwC5B;;AACA,iBAAKgB,cAAL,CAAoB/a,GAApB,CAAwBwc,SAAxB;;AACA,gBAAI,CAAC1C,MAAM,CAAC2C,UAAZ,EAAwB;AACpB,mBAAKC,0BAAL,GAAkCF,SAAlC;AACH,aA5C2B,CA6C5B;AACA;;;AACA,iBAAKG,sBAAL;AAA6B;AACrC;AACA;AACQ,wBAAM;AACF;AACA,kBAAMC,2BAA2B,GAAGJ,SAAS,KAAK,OAAI,CAACE,0BAAvD;AACAF,uBAAS,CAACzC,KAAV,GAAkB;AAAE;AAApB,eAHE,CAIF;AACA;AACA;AACA;;AACA,kBAAI,CAACD,MAAM,CAAC2C,UAAR,KAAuB,CAACG,2BAAD,IAAgC,CAAC,OAAI,CAAC9B,cAA7D,CAAJ,EAAkF;AAC9E0B,yBAAS,CAACK,OAAV;AACH;AACJ,aAdD,EAcIX,QAdJ;;AAeA,mBAAOM,SAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,uBAAcA,SAAd,EAAyB;AACrB;AACA,gBAAMM,SAAS,GAAG,KAAK/B,cAAL,WAA2ByB,SAA3B,CAAlB;;AACA,gBAAIA,SAAS,KAAK,KAAKE,0BAAvB,EAAmD;AAC/C,mBAAKA,0BAAL,GAAkC,IAAlC;AACH,aALoB,CAMrB;;;AACA,gBAAI,CAAC,KAAK3B,cAAL,CAAoBgC,IAAzB,EAA+B;AAC3B,mBAAKxB,cAAL,GAAsB,IAAtB;AACH,aAToB,CAUrB;;;AACA,gBAAI,CAACuB,SAAL,EAAgB;AACZ;AACH;AACD;;;AACA,gBAAME,QAAQ,GAAGR,SAAS,CAAC1jB,OAA3B;AACA;;AACA,gBAAM0iB,eAAe,GAAGhI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB0G,4BAAlB,CAAd,EAA+DqC,SAAS,CAAC1C,MAAV,CAAiB2B,SAAhF,CAAxB;AACAuB,oBAAQ,CAAC1K,KAAT,CAAe+J,kBAAf,aAAuCb,eAAe,CAACnB,YAAvD;AACA2C,oBAAQ,CAAC1K,KAAT,CAAe2K,OAAf,GAAyB,GAAzB;AACAT,qBAAS,CAACzC,KAAV,GAAkB;AAAE;AAApB,aApBqB,CAqBrB;;AACA,iBAAK4C,sBAAL;AAA6B;AACrC;AACA;AACQ,wBAAM;AACFH,uBAAS,CAACzC,KAAV,GAAkB;AAAE;AAApB;;AACC;AAAkBiD,sBAAQ,CAACE,UAA5B,CAAyCnP,WAAzC,CAAqDiP,QAArD;AACH,aAND,EAMIxB,eAAe,CAACnB,YANpB;AAOH;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAa;AACT,iBAAKU,cAAL,CAAoBxkB,OAApB;AAA6B;AACrC;AACA;AACA;AACQ,sBAAA4lB,MAAM;AAAA,qBAAIA,MAAM,CAACU,OAAP,EAAJ;AAAA,aAJN;AAKH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,4BAAmBhC,mBAAnB,EAAwC;AACpC;AACA,gBAAM/hB,OAAO,GAAG,4EAAc+hB,mBAAd,CAAhB;;AACA,gBAAI,CAAC/hB,OAAD,IAAYA,OAAO,KAAK,KAAKqkB,eAAjC,EAAkD;AAC9C;AACH,aALmC,CAMpC;;;AACA,iBAAKlc,oBAAL;;AACA,iBAAKkc,eAAL,GAAuBrkB,OAAvB;;AACA,iBAAKskB,eAAL,CAAqB3C,iBAArB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,qBAAY3uB,KAAZ,EAAmB;AACf,gBAAIA,KAAK,CAACK,IAAN,KAAe,WAAnB,EAAgC;AAC5B,mBAAKkxB,YAAL;AAAmB;AAAkBvxB,mBAArC;AACH,aAFD,MAGK,IAAIA,KAAK,CAACK,IAAN,KAAe,YAAnB,EAAiC;AAClC,mBAAKmxB,aAAL;AAAoB;AAAkBxxB,mBAAtC;AACH,aAFI,MAGA;AACD,mBAAKyxB,YAAL;AACH,aATc,CAUf;AACA;AACA;;;AACA,gBAAI,CAAC,KAAKtC,0BAAV,EAAsC;AAClC,mBAAKmC,eAAL,CAAqB1C,eAArB;;AACA,mBAAKO,0BAAL,GAAkC,IAAlC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,sBAAanvB,KAAb,EAAoB;AAChB;AACA;;AACA;AACA,gBAAM0xB,eAAe,GAAG,0FAAgC1xB,KAAhC,CAAxB;AACA;;AACA,gBAAM2xB,gBAAgB,GAAG,KAAKC,oBAAL,IACrB7K,IAAI,CAAC8K,GAAL,KAAa,KAAKD,oBAAL,GAA4BpD,wBAD7C;;AAEA,gBAAI,CAAC,KAAKM,OAAL,CAAagD,cAAd,IAAgC,CAACJ,eAAjC,IAAoD,CAACC,gBAAzD,EAA2E;AACvE,mBAAK3C,cAAL,GAAsB,IAAtB;AACA,mBAAK+C,YAAL,CAAkB/xB,KAAK,CAACgyB,OAAxB,EAAiChyB,KAAK,CAACiyB,OAAvC,EAAgD,KAAKnD,OAAL,CAAaxa,YAA7D;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,uBAActU,KAAd,EAAqB;AACjB,gBAAI,CAAC,KAAK8uB,OAAL,CAAagD,cAAlB,EAAkC;AAC9B;AACA;AACA;AACA,mBAAKF,oBAAL,GAA4B7K,IAAI,CAAC8K,GAAL,EAA5B;AACA,mBAAK7C,cAAL,GAAsB,IAAtB,CAL8B,CAM9B;AACA;;AACA;;AACA,kBAAMkD,OAAO,GAAGlyB,KAAK,CAACmyB,cAAtB;;AACA,mBAAK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyM,OAAO,CAACvzB,MAA5B,EAAoC8mB,CAAC,EAArC,EAAyC;AACrC,qBAAKsM,YAAL,CAAkBG,OAAO,CAACzM,CAAD,CAAP,CAAWuM,OAA7B,EAAsCE,OAAO,CAACzM,CAAD,CAAP,CAAWwM,OAAjD,EAA0D,KAAKnD,OAAL,CAAaxa,YAAvE;AACH;AACJ;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wBAAe;AACX,gBAAI,CAAC,KAAK0a,cAAV,EAA0B;AACtB;AACH;;AACD,iBAAKA,cAAL,GAAsB,KAAtB,CAJW,CAKX;;AACA,iBAAKC,cAAL,CAAoBxkB,OAApB;AAA6B;AACrC;AACA;AACA;AACQ,sBAAA4lB,MAAM,EAAI;AACN;AACA;;AACA;AACA,kBAAM+B,SAAS,GAAG/B,MAAM,CAACpC,KAAP,KAAiB;AAAE;AAAnB,iBACdoC,MAAM,CAACrC,MAAP,CAAcqE,oBAAd,IAAsChC,MAAM,CAACpC,KAAP,KAAiB;AAAE;AAD7D;;AAEA,kBAAI,CAACoC,MAAM,CAACrC,MAAP,CAAc2C,UAAf,IAA6ByB,SAAjC,EAA4C;AACxC/B,sBAAM,CAACU,OAAP;AACH;AACJ,aAbD;AAcH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,gCAAuB7oB,EAAvB,EAAsC;AAAA,gBAAXoqB,KAAW,uEAAH,CAAG;;AAClC,iBAAK1f,OAAL,CAAa1M,iBAAb;AAAgC;AACxC;AACA;AACQ;AAAA,qBAAMoJ,UAAU,CAACpH,EAAD,EAAKoqB,KAAL,CAAhB;AAAA,aAHA;AAIH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,yBAAgBC,UAAhB,EAA4B;AAAA;;AACxB,iBAAK3f,OAAL,CAAa1M,iBAAb;AAAgC;AACxC;AACA;AACQ,wBAAM;AACFqsB,wBAAU,CAAC9nB,OAAX;AAAoB;AAChC;AACA;AACA;AACY,wBAACpK,IAAD,EAAU;AACL;AAAkB,uBAAI,CAACgxB,eAAxB,CAA0ClrB,gBAA1C,CAA2D9F,IAA3D,EAAiE,OAAjE,EAAuEouB,mBAAvE;AACH,eAND;AAOH,aAXD;AAYH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AAAA;;AACnB,gBAAI,KAAK4C,eAAT,EAA0B;AACtB1C,+BAAiB,CAAClkB,OAAlB;AAA2B;AACvC;AACA;AACA;AACY,wBAACpK,IAAD,EAAU;AACL;AAAkB,uBAAI,CAACgxB,eAAxB,CAA0C5qB,mBAA1C,CAA8DpG,IAA9D,EAAoE,OAApE,EAA0EouB,mBAA1E;AACH,eAND;;AAOA,kBAAI,KAAKU,0BAAT,EAAqC;AACjCP,+BAAe,CAACnkB,OAAhB;AAAyB;AACzC;AACA;AACA;AACgB,0BAACpK,IAAD,EAAU;AACL;AAAkB,yBAAI,CAACgxB,eAAxB,CAA0C5qB,mBAA1C,CAA8DpG,IAA9D,EAAoE,OAApE,EAA0EouB,mBAA1E;AACH,iBAND;AAOH;AACJ;AACJ;;;;;;AAEL,UAAI,KAAJ,EAAW,CA4DV;AACD;AACA;AACA;AACA;AACA;;;AACA,eAAS+B,yBAAT,CAAmCxjB,OAAnC,EAA4C;AACxC;AACA;AACA;AACAhH,cAAM,CAAC6b,gBAAP,CAAwB7U,OAAxB,EAAiCwlB,gBAAjC,CAAkD,SAAlD;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASvC,wBAAT,CAAkCX,CAAlC,EAAqCC,CAArC,EAAwCkD,IAAxC,EAA8C;AAC1C;AACA,YAAMC,KAAK,GAAGhY,IAAI,CAAC0K,GAAL,CAAS1K,IAAI,CAACiY,GAAL,CAASrD,CAAC,GAAGmD,IAAI,CAAC5C,IAAlB,CAAT,EAAkCnV,IAAI,CAACiY,GAAL,CAASrD,CAAC,GAAGmD,IAAI,CAACG,KAAlB,CAAlC,CAAd;AACA;;AACA,YAAMC,KAAK,GAAGnY,IAAI,CAAC0K,GAAL,CAAS1K,IAAI,CAACiY,GAAL,CAASpD,CAAC,GAAGkD,IAAI,CAAC3C,GAAlB,CAAT,EAAiCpV,IAAI,CAACiY,GAAL,CAASpD,CAAC,GAAGkD,IAAI,CAACK,MAAlB,CAAjC,CAAd;AACA,eAAOpY,IAAI,CAACqY,IAAL,CAAUL,KAAK,GAAGA,KAAR,GAAgBG,KAAK,GAAGA,KAAlC,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAASG,mBAAT,GAA+B,CAAG;;AAClC,UAAI,KAAJ,EAAW,CAoBV;AACD;AACA;AACA;AACA;;;AACA,UAAMC,yBAAyB,GAAG,IAAI,4DAAJ,CAAmB,2BAAnB,CAAlC;;UACMC,S;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,2BAAYp1B,WAAZ,EAAyBq1B,MAAzB,EAAiCtgB,QAAjC,EAA2CugB,aAA3C,EAA0DC,cAA1D,EAA0E;AAAA;;AACtE,eAAKv1B,WAAL,GAAmBA,WAAnB;AACA,eAAKu1B,cAAL,GAAsBA,cAAtB;AACA;AACR;AACA;AACA;AACA;;AACQ,eAAKrD,MAAL,GAAc,CAAd;AACA,eAAKzc,SAAL,GAAiB,KAAjB;AACA;AACR;AACA;;AACQ,eAAKwQ,cAAL,GAAsB,KAAtB;AACA,eAAKuP,cAAL,GAAsBF,aAAa,IAAI,EAAvC;AACA,eAAKG,eAAL,GAAuB,IAAI1E,cAAJ,CAAmB,IAAnB,EAAyBsE,MAAzB,EAAiCr1B,WAAjC,EAA8C+U,QAA9C,CAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;;eACI,eAAe;AAAE,mBAAO,KAAKU,SAAZ;AAAwB;AACzC;AACJ;AACA;AACA;;eACI,aAAa7U,KAAb,EAAoB;AAChB,iBAAK6U,SAAL,GAAiB7U,KAAjB;;AACA,iBAAK80B,4BAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAc;AAAE,mBAAO,KAAKC,QAAL,IAAiB,KAAK31B,WAAL,CAAiBoB,aAAzC;AAAyD;AACzE;AACJ;AACA;AACA;;eACI,aAAYw0B,OAAZ,EAAqB;AACjB,iBAAKD,QAAL,GAAgBC,OAAhB;;AACA,iBAAKF,4BAAL;AACH;AACD;AACJ;AACA;;;;iBACI,oBAAW;AACP,iBAAKzP,cAAL,GAAsB,IAAtB;;AACA,iBAAKyP,4BAAL;AACH;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAKD,eAAL,CAAqBpe,oBAArB;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,sBAAa;AACT,iBAAKoe,eAAL,CAAqBI,UAArB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAmB;AACf,mBAAO;AACH/D,sBAAQ,EAAE,KAAKA,QADZ;AAEHI,oBAAM,EAAE,KAAKA,MAFV;AAGHzZ,mBAAK,EAAE,KAAKA,KAHT;AAIHoZ,uBAAS,EAAEjI,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAK2L,cAAL,CAAoB3D,SAAtC,CAAd,EAAiE,KAAK0D,cAAL,KAAwB,gBAAxB,GAA2C;AAAE/E,6BAAa,EAAE,CAAjB;AAAoBC,4BAAY,EAAE;AAAlC,eAA3C,GAAmF,EAApJ,CAAd,EAAwK,KAAKoB,SAA7K,CAJR;AAKH0C,kCAAoB,EAAE,KAAKiB,cAAL,CAAoBjB;AALvC,aAAP;AAOH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAqB;AACjB,mBAAO,KAAKjqB,QAAL,IAAiB,CAAC,CAAC,KAAKkrB,cAAL,CAAoBlrB,QAA9C;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wCAA+B;AAC3B,gBAAI,CAAC,KAAKA,QAAN,IAAkB,KAAK2b,cAA3B,EAA2C;AACvC,mBAAKwP,eAAL,CAAqBlf,kBAArB,CAAwC,KAAKqf,OAA7C;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,gBAAOE,SAAP,EAAiC;AAAA,gBAAfrE,CAAe,uEAAX,CAAW;AAAA,gBAARvB,MAAQ;;AAC7B,gBAAI,OAAO4F,SAAP,KAAqB,QAAzB,EAAmC;AAC/B,qBAAO,KAAKL,eAAL,CAAqBxB,YAArB,CAAkC6B,SAAlC,EAA6CrE,CAA7C,EAAgD7H,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKrT,YAAvB,CAAd,EAAoD0Z,MAApD,CAAhD,CAAP;AACH,aAFD,MAGK;AACD,qBAAO,KAAKuF,eAAL,CAAqBxB,YAArB,CAAkC,CAAlC,EAAqC,CAArC,EAAwCrK,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKrT,YAAvB,CAAd,EAAoDsf,SAApD,CAAxC,CAAP;AACH;AACJ;;;;;;AAELV,eAAS,CAACjzB,IAAV,GAAiB,SAAS4zB,iBAAT,CAA2B1zB,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAI+yB,SAAV,EAAqB,gEAAyB,wDAAzB,CAArB,EAAkE,gEAAyB,oDAAzB,CAAlE,EAA2G,gEAAyB,8DAAzB,CAA3G,EAAsJ,gEAAyBD,yBAAzB,EAAoD,CAApD,CAAtJ,EAA8M,gEAAyB,2FAAzB,EAAgD,CAAhD,CAA9M,CAAP;AAA2Q,OAA5T;;AACAC,eAAS,CAACjwB,IAAV,GAAiB,gEAAyB;AAAE5C,YAAI,EAAE6yB,SAAR;AAAmB5yB,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,YAAL,EAAmB,EAAnB,CAAD,EAAyB,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAzB,CAA9B;AAA+EU,iBAAS,EAAE,CAAC,CAAD,EAAI,YAAJ,CAA1F;AAA6GqM,gBAAQ,EAAE,CAAvH;AAA0HC,oBAAY,EAAE,SAASwmB,sBAAT,CAAgCr3B,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACjO,sEAAmB,sBAAnB,EAA2CC,GAAG,CAACq3B,SAA/C;AACH;AAAE,SAFmC;AAEjC9yB,cAAM,EAAE;AAAE+uB,gBAAM,EAAE,CAAC,iBAAD,EAAoB,QAApB,CAAV;AAAyC5nB,kBAAQ,EAAE,CAAC,mBAAD,EAAsB,UAAtB,CAAnD;AAAsFsrB,iBAAO,EAAE,CAAC,kBAAD,EAAqB,SAArB,CAA/F;AAAgInd,eAAK,EAAE,CAAC,gBAAD,EAAmB,OAAnB,CAAvI;AAAoKwd,mBAAS,EAAE,CAAC,oBAAD,EAAuB,WAAvB,CAA/K;AAAoNnE,kBAAQ,EAAE,CAAC,mBAAD,EAAsB,UAAtB,CAA9N;AAAiQD,mBAAS,EAAE,CAAC,oBAAD,EAAuB,WAAvB;AAA5Q,SAFyB;AAE0RtuB,gBAAQ,EAAE,CAAC,WAAD;AAFpS,OAAzB,CAAjB;AAGA;;AACA6xB,eAAS,CAAChxB,cAAV,GAA2B;AAAA,eAAM,CAC7B;AAAE7B,cAAI,EAAE;AAAR,SAD6B,EAE7B;AAAEA,cAAI,EAAE;AAAR,SAF6B,EAG7B;AAAEA,cAAI,EAAE;AAAR,SAH6B,EAI7B;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC4wB,yBAAD;AAAtB,WAArB;AAA/B,SAJ6B,EAK7B;AAAE5yB,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,2FAAD;AAAtB,WAArB;AAA5B,SAL6B,CAAN;AAAA,OAA3B;;AAOA6wB,eAAS,CAAC5wB,cAAV,GAA2B;AACvBiU,aAAK,EAAE,CAAC;AAAElW,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,gBAAD;AAArB,SAAD,CADgB;AAEvB0xB,iBAAS,EAAE,CAAC;AAAE1zB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CAFY;AAGvButB,gBAAQ,EAAE,CAAC;AAAEvvB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,mBAAD;AAArB,SAAD,CAHa;AAIvB2tB,cAAM,EAAE,CAAC;AAAE3vB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,iBAAD;AAArB,SAAD,CAJe;AAKvBstB,iBAAS,EAAE,CAAC;AAAEtvB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,oBAAD;AAArB,SAAD,CALY;AAMvB+F,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,mBAAD;AAArB,SAAD,CANa;AAOvBqxB,eAAO,EAAE,CAAC;AAAErzB,cAAI,EAAE,mDAAR;AAAegC,cAAI,EAAE,CAAC,kBAAD;AAArB,SAAD;AAPc,OAA3B;;AASA,OAAC,YAAY;AAAE,SAAC,OAAOG,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB0wB,SAAzB,EAAoC,CAAC;AAC/F7yB,cAAI,EAAE,uDADyF;AAE/FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,2BADX;AAECpB,oBAAQ,EAAE,WAFX;AAGCuB,gBAAI,EAAE;AACF,uBAAS,YADP;AAEF,8CAAgC;AAF9B;AAHP,WAAD;AAFyF,SAAD,CAApC,EAU1D,YAAY;AAAE,iBAAO,CAAC;AAAEvC,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAuD;AAAEA,gBAAI,EAAE;AAAR,WAAvD,EAAkF;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC/H/B,kBAAI,EAAE;AADyH,aAAD,EAE/H;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC4wB,yBAAD;AAFP,aAF+H;AAA/B,WAAlF,EAKX;AAAE5yB,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AAC/B/B,kBAAI,EAAE;AADyB,aAAD,EAE/B;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,2FAAD;AAFP,aAF+B;AAA5B,WALW,CAAP;AAUF,SApB8C,EAoB5C;AAAE2tB,gBAAM,EAAE,CAAC;AACrB3vB,gBAAI,EAAE,mDADe;AAErBgC,gBAAI,EAAE,CAAC,iBAAD;AAFe,WAAD,CAAV;AAGV+F,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE,mDADK;AAEXgC,gBAAI,EAAE,CAAC,mBAAD;AAFK,WAAD,CAHA;AAMVqxB,iBAAO,EAAE,CAAC;AACVrzB,gBAAI,EAAE,mDADI;AAEVgC,gBAAI,EAAE,CAAC,kBAAD;AAFI,WAAD,CANC;AASVkU,eAAK,EAAE,CAAC;AACRlW,gBAAI,EAAE,mDADE;AAERgC,gBAAI,EAAE,CAAC,gBAAD;AAFE,WAAD,CATG;AAYV0xB,mBAAS,EAAE,CAAC;AACZ1zB,gBAAI,EAAE,mDADM;AAEZgC,gBAAI,EAAE,CAAC,oBAAD;AAFM,WAAD,CAZD;AAeVutB,kBAAQ,EAAE,CAAC;AACXvvB,gBAAI,EAAE,mDADK;AAEXgC,gBAAI,EAAE,CAAC,mBAAD;AAFK,WAAD,CAfA;AAkBVstB,mBAAS,EAAE,CAAC;AACZtvB,gBAAI,EAAE,mDADM;AAEZgC,gBAAI,EAAE,CAAC,oBAAD;AAFM,WAAD;AAlBD,SApB4C,CAAnD;AAyCC,OAzChB;;AA0CA,UAAI,KAAJ,EAAW,CAqEV;AAED;AACA;AACA;AACA;AACA;;;UACM2xB,e;;;;AAENA,qBAAe,CAAC/zB,IAAhB,GAAuB,SAASg0B,uBAAT,CAAiC9zB,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI6zB,eAAV,GAAP;AAAsC,OAAnG;;AACAA,qBAAe,CAAC5lB,IAAhB,GAAuB,+DAAwB;AAAE/N,YAAI,EAAE2zB;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAAC3lB,IAAhB,GAAuB,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAACkS,eAAD,EAAkB,oEAAlB,CAAD,EAAoCA,eAApC;AAAX,OAAxB,CAAvB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOjS,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0BylB,eAA1B,EAA2C;AAAExlB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC0kB,SAAD,CAAP;AAAqB,WAAnD;AAAqD5kB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACkS,eAAD,EAAkB,oEAAlB,CAAP;AAA2C,WAAvH;AAAyH/R,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAACykB,SAAD,EAAY1S,eAAZ,CAAP;AAAsC;AAAtL,SAA3C,CAAnD;AAA0R,OAAzS;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOhe,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBwxB,eAAzB,EAA0C,CAAC;AACrG3zB,cAAI,EAAE,sDAD+F;AAErGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAACkS,eAAD,EAAkB,oEAAlB,CADV;AAEC/R,mBAAO,EAAE,CAACykB,SAAD,EAAY1S,eAAZ,CAFV;AAGChS,wBAAY,EAAE,CAAC0kB,SAAD;AAHf,WAAD;AAF+F,SAAD,CAA1C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMgB,iB;AACF;AACJ;AACA;AACI,iCAAYb,cAAZ,EAA4B;AAAA;;AACxB,aAAKA,cAAL,GAAsBA,cAAtB;AACA;AACR;AACA;;AACQ,aAAKpF,KAAL,GAAa,WAAb;AACA;AACR;AACA;;AACQ,aAAK7lB,QAAL,GAAgB,KAAhB;AACH,O;;AAEL8rB,uBAAiB,CAACj0B,IAAlB,GAAyB,SAASk0B,yBAAT,CAAmCh0B,CAAnC,EAAsC;AAAE,eAAO,KAAKA,CAAC,IAAI+zB,iBAAV,EAA6B,gEAAyB,2FAAzB,EAAgD,CAAhD,CAA7B,CAAP;AAA0F,OAA3J;;AACAA,uBAAiB,CAAC9zB,IAAlB,GAAyB,gEAAyB;AAAEC,YAAI,EAAE6zB,iBAAR;AAA2B5zB,iBAAS,EAAE,CAAC,CAAC,qBAAD,CAAD,CAAtC;AAAiEU,iBAAS,EAAE,CAAC,CAAD,EAAI,qBAAJ,CAA5E;AAAwGqM,gBAAQ,EAAE,CAAlH;AAAqHC,oBAAY,EAAE,SAAS8mB,8BAAT,CAAwC33B,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC5O,sEAAmB,mCAAnB,EAAwDC,GAAG,CAACuxB,KAAJ,KAAc,eAAtE,EAAuF,6BAAvF,EAAsHvxB,GAAG,CAACuxB,KAAJ,KAAc,SAApI,EAA+I,8BAA/I,EAA+KvxB,GAAG,CAAC0L,QAAnL,EAA6L,yBAA7L,EAAwN1L,GAAG,CAAC22B,cAAJ,KAAuB,gBAA/O;AACH;AAAE,SAF2C;AAEzCpyB,cAAM,EAAE;AAAEgtB,eAAK,EAAE,OAAT;AAAkB7lB,kBAAQ,EAAE;AAA5B,SAFiC;AAES1G,aAAK,EAAE,CAFhB;AAEmBC,YAAI,EAAE,CAFzB;AAE4Bb,gBAAQ,EAAE,SAASuzB,0BAAT,CAAoC53B,EAApC,EAAwCC,GAAxC,EAA6C,CAAG,CAFtF;AAEwFqF,cAAM,EAAE,CAAC,whCAAD,CAFhG;AAE4nCC,qBAAa,EAAE,CAF3oC;AAE8oCC,uBAAe,EAAE;AAF/pC,OAAzB,CAAzB;AAGA;;AACAiyB,uBAAiB,CAAChyB,cAAlB,GAAmC;AAAA,eAAM,CACrC;AAAE7B,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,2FAAD;AAAtB,WAArB;AAA5B,SADqC,CAAN;AAAA,OAAnC;;AAGA6xB,uBAAiB,CAAC5xB,cAAlB,GAAmC;AAC/B2rB,aAAK,EAAE,CAAC;AAAE5tB,cAAI,EAAE;AAAR,SAAD,CADwB;AAE/B+H,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE;AAAR,SAAD;AAFqB,OAAnC;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB0xB,iBAAzB,EAA4C,CAAC;AACvG7zB,cAAI,EAAE,uDADiG;AAEvGgC,cAAI,EAAE,CAAC;AACCL,yBAAa,EAAE,gEAAkBU,IADlC;AAECT,2BAAe,EAAE,sEAAwBU,MAF1C;AAGCF,oBAAQ,EAAE,qBAHX;AAIC3B,oBAAQ,EAAE,EAJX;AAKC8B,gBAAI,EAAE;AACF,uBAAS,qBADP;AAEF,2DAA6C,2BAF3C;AAGF,qDAAuC,qBAHrC;AAIF,sDAAwC,UAJtC;AAKF,iDAAmC;AALjC,aALP;AAYCb,kBAAM,EAAE,CAAC,whCAAD;AAZT,WAAD;AAFiG,SAAD,CAA5C,EAgB1D,YAAY;AAAE,iBAAO,CAAC;AAAE1B,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AAC3C/B,kBAAI,EAAE;AADqC,aAAD,EAE3C;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,2FAAD;AAFP,aAF2C;AAA5B,WAAD,CAAP;AAKF,SArB8C,EAqB5C;AAAE4rB,eAAK,EAAE,CAAC;AACpB5tB,gBAAI,EAAE;AADc,WAAD,CAAT;AAEV+H,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE;AADK,WAAD;AAFA,SArB4C,CAAnD;AAyBC,OAzBhB;;AA0BA,UAAI,KAAJ,EAAW,CAaV;AAED;AACA;AACA;AACA;AACA;;;UACMi0B,uB;;;;AAENA,6BAAuB,CAACr0B,IAAxB,GAA+B,SAASs0B,+BAAT,CAAyCp0B,CAAzC,EAA4C;AAAE,eAAO,KAAKA,CAAC,IAAIm0B,uBAAV,GAAP;AAA8C,OAA3H;;AACAA,6BAAuB,CAAClmB,IAAxB,GAA+B,+DAAwB;AAAE/N,YAAI,EAAEi0B;AAAR,OAAxB,CAA/B;AACAA,6BAAuB,CAACjmB,IAAxB,GAA+B,+DAAwB,EAAxB,CAA/B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B+lB,uBAA1B,EAAmD;AAAE9lB,sBAAY,EAAE,CAAC0lB,iBAAD,CAAhB;AAAqCzlB,iBAAO,EAAE,CAACylB,iBAAD;AAA9C,SAAnD,CAAnD;AAA6K,OAA5L;;AACA,OAAC,YAAY;AAAE,SAAC,OAAO1xB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB8xB,uBAAzB,EAAkD,CAAC;AAC7Gj0B,cAAI,EAAE,sDADuG;AAE7GgC,cAAI,EAAE,CAAC;AACCoM,mBAAO,EAAE,CAACylB,iBAAD,CADV;AAEC1lB,wBAAY,EAAE,CAAC0lB,iBAAD;AAFf,WAAD;AAFuG,SAAD,CAAlD,EAM1D,IAN0D,EAMpD,IANoD,CAAnD;AAMO,OANtB;AAQA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMM,e;;;AAEN;;;AACA,UAAMC,qBAAqB,GAAGnS,aAAa,CAACkS,eAAD,CAA3C,C,CACA;;AACA;;;AACA,UAAIE,wBAAwB,GAAG,CAA/B;AACA;AACA;AACA;;UACMC,W;;;;;AACF,+BAAc;AAAA;;AAAA;;AACV,yCAASC,SAAT;AACA;AACR;AACA;;AACQ,kBAAKC,QAAL,gCAAsCH,wBAAwB,EAA9D;AALU;AAMb;;;QAPqBD,qB;;AAS1BE,iBAAW,CAAC10B,IAAZ,GAAmB,SAAS60B,mBAAT,CAA6B30B,CAA7B,EAAgC;AAAE,eAAO40B,wBAAwB,CAAC50B,CAAC,IAAIw0B,WAAN,CAA/B;AAAoD,OAAzG;;AACAA,iBAAW,CAACv0B,IAAZ,GAAmB,gEAAyB;AAAEC,YAAI,EAAEs0B,WAAR;AAAqBr0B,iBAAS,EAAE,CAAC,CAAC,cAAD,CAAD,CAAhC;AAAoDU,iBAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,cAArB,CAA/D;AAAqGqM,gBAAQ,EAAE,CAA/G;AAAkHC,oBAAY,EAAE,SAAS0nB,wBAAT,CAAkCv4B,EAAlC,EAAsCC,GAAtC,EAA2C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC7N,sEAAmB,eAAnB,EAAoCC,GAAG,CAAC0L,QAAJ,CAAa6F,QAAb,EAApC,EAA6D,iBAA7D,EAAgFvR,GAAG,CAACm4B,QAApF;;AACA,sEAAmB,uBAAnB,EAA4Cn4B,GAAG,CAAC0L,QAAhD;AACH;AAAE,SAHqC;AAGnCnH,cAAM,EAAE;AAAEmH,kBAAQ,EAAE,UAAZ;AAAwB6sB,eAAK,EAAE;AAA/B,SAH2B;AAGe5zB,gBAAQ,EAAE,CAAC,aAAD,CAHzB;AAG0CC,gBAAQ,EAAE,CAAC,wEAAD,CAHpD;AAGyFG,0BAAkB,EAAE3E,GAH7G;AAGkH4E,aAAK,EAAE,CAHzH;AAG4HC,YAAI,EAAE,CAHlI;AAGqIC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,oBAAJ,EAA0B,CAA1B,EAA6B,IAA7B,CAAD,CAH7I;AAGmLd,gBAAQ,EAAE,SAASo0B,oBAAT,CAA8Bz4B,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACtR,0EAAuBF,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,CAAlC;;AACA,iEAAc,CAAd;;AACA,uEAAoB,CAApB;;AACA;;AACA,uEAAoB,CAApB,EAAuB,CAAvB;AACH;;AAAC,cAAIE,EAAE,GAAG,CAAT,EAAY;AACV,qEAAkB,IAAlB,EAAwBC,GAAG,CAACm4B,QAA5B;;AACA,oEAAiB,CAAjB;;AACA,6EAA0B,EAA1B,EAA8Bn4B,GAAG,CAACu4B,KAAlC,EAAyC,GAAzC;AACH;AAAE,SAdqC;AAcnClzB,cAAM,EAAE,CAAC,mkBAAD,CAd2B;AAc4iBC,qBAAa,EAAE,CAd3jB;AAc8jBC,uBAAe,EAAE;AAd/kB,OAAzB,CAAnB;AAeA0yB,iBAAW,CAACryB,cAAZ,GAA6B;AACzB2yB,aAAK,EAAE,CAAC;AAAE50B,cAAI,EAAE;AAAR,SAAD;AADkB,OAA7B;;AAGA,UAAM00B,wBAAwB,GAAG,aAAc,oEAA6BJ,WAA7B,CAA/C;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOnyB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBmyB,WAAzB,EAAsC,CAAC;AACjGt0B,cAAI,EAAE,uDAD2F;AAEjGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,cADX;AAECpB,oBAAQ,EAAE,aAFX;AAGCP,oBAAQ,EAAE,sKAHX;AAICkB,yBAAa,EAAE,gEAAkBU,IAJlC;AAKCT,2BAAe,EAAE,sEAAwBU,MAL1C;AAMC1B,kBAAM,EAAE,CAAC,UAAD,CANT;AAOC2B,gBAAI,EAAE;AACF,uBAAS,cADP;AAEF,sBAAQ,OAFN;AAGF,+CAAiC,UAH/B;AAIF,sCAAwB,qBAJtB;AAKF,wCAA0B;AALxB,aAPP;AAcCb,kBAAM,EAAE,CAAC,mkBAAD;AAdT,WAAD;AAF2F,SAAD,CAAtC,EAkB1D,IAlB0D,EAkBpD;AAAEkzB,eAAK,EAAE,CAAC;AACZ50B,gBAAI,EAAE;AADM,WAAD;AAAT,SAlBoD,CAAnD;AAoBC,OApBhB;;AAqBA,UAAI,KAAJ,EAAW,CAaV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAI80B,gBAAgB,GAAG,CAAvB;AACA;AACA;AACA;;UACMC,wB;AACF;AACJ;AACA;AACA;AACI,wCAAYn4B,MAAZ,EAAyC;AAAA,YAArBmV,WAAqB,uEAAP,KAAO;;AAAA;;AACrC,aAAKnV,MAAL,GAAcA,MAAd;AACA,aAAKmV,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASijB,wBAAT,GAAoC,CAAG;;AACvC,UAAI,KAAJ,EAAW,CAKV;AACD;AACA;AACA;AACA;;;AACA,UAAMC,2BAA2B,GAAG,IAAI,4DAAJ,CAAmB,6BAAnB,CAApC;AACA;AACA;AACA;;UACMC,S;AACF;AACJ;AACA;AACA;AACA;AACA;AACI,2BAAYtxB,QAAZ,EAAsBpG,kBAAtB,EAA0C23B,OAA1C,EAAmD3lB,KAAnD,EAA0D;AAAA;;AACtD,eAAK5L,QAAL,GAAgBA,QAAhB;AACA,eAAKpG,kBAAL,GAA0BA,kBAA1B;AACA,eAAK23B,OAAL,GAAeA,OAAf;AACA,eAAK3lB,KAAL,GAAaA,KAAb;AACA,eAAKwD,SAAL,GAAiB,KAAjB;AACA,eAAKoiB,OAAL,GAAe,KAAf;AACA,eAAKliB,SAAL,GAAiB,KAAjB;AACA,eAAKmiB,oBAAL,GAA4B,EAA5B;AACA;AACR;AACA;;AACQ,eAAK94B,EAAL,wBAAwBu4B,gBAAgB,EAAxC;AACA;AACR;AACA;AACQ;;AACA,eAAKxvB,iBAAL,GAAyB,IAAI,0DAAJ,EAAzB;AACA;AACR;AACA;;AACQ,eAAKgwB,aAAL,GAAqB,IAAI,4CAAJ,EAArB;AACH;AACD;AACJ;AACA;AACA;;;;;eACI,eAAe;AAAE,mBAAO,KAAKH,OAAL,IAAgB,KAAKA,OAAL,CAAa/c,QAApC;AAA+C;AAChE;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAO,KAAKpF,SAAZ;AAAwB;AACzC;AACJ;AACA;AACA;;;;eACI,eAAe;AAAE,mBAAQ,KAAKxD,KAAL,IAAc,KAAKA,KAAL,CAAWzH,QAA1B,IAAuC,KAAKmL,SAAnD;AAA+D;AAChF;AACJ;AACA;AACA;;eACI,aAAa7U,KAAb,EAAoB;AAAE,iBAAK6U,SAAL,GAAiB,oFAAsB7U,KAAtB,CAAjB;AAAgD;AACtE;AACJ;AACA;AACA;;;;eACI,eAAoB;AAAE,mBAAO,KAAK82B,OAAL,IAAgB,KAAKA,OAAL,CAAat0B,aAApC;AAAoD;AAC1E;AACJ;AACA;AACA;AACA;AACA;AACA;;;;eACI,eAAa;AACT,mBAAO,KAAKu0B,OAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;;eACI,eAAgB;AACZ;AACA,mBAAO,CAAC,KAAKG,eAAL,GAAuBhhB,WAAvB,IAAsC,EAAvC,EAA2C5V,IAA3C,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,kBAAS;AACL,gBAAI,CAAC,KAAKqU,SAAV,EAAqB;AACjB,mBAAKA,SAAL,GAAiB,IAAjB;;AACA,mBAAKxV,kBAAL,CAAwBkC,YAAxB;;AACA,mBAAK81B,yBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,oBAAW;AACP,gBAAI,KAAKxiB,SAAT,EAAoB;AAChB,mBAAKA,SAAL,GAAiB,KAAjB;;AACA,mBAAKxV,kBAAL,CAAwBkC,YAAxB;;AACA,mBAAK81B,yBAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,eAAMC,OAAN,EAAe12B,OAAf,EAAwB;AACpB;AACA;;AACA;AACA,gBAAM4N,OAAO,GAAG,KAAK4oB,eAAL,EAAhB;;AACA,gBAAI,OAAO5oB,OAAO,CAAC1C,KAAf,KAAyB,UAA7B,EAAyC;AACrC0C,qBAAO,CAAC1C,KAAR,CAAclL,OAAd;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,2BAAkB;AACd,gBAAI,CAAC,KAAKq2B,OAAV,EAAmB;AACf,mBAAKA,OAAL,GAAe,IAAf;;AACA,mBAAK53B,kBAAL,CAAwBkC,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,6BAAoB;AAChB,gBAAI,KAAK01B,OAAT,EAAkB;AACd,mBAAKA,OAAL,GAAe,KAAf;;AACA,mBAAK53B,kBAAL,CAAwBkC,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;iBACI,oBAAW;AACP,mBAAO,KAAKg2B,SAAZ;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wBAAe/1B,KAAf,EAAsB;AAClB,gBAAI,CAACA,KAAK,CAACqI,OAAN,KAAkB,4DAAlB,IAA2BrI,KAAK,CAACqI,OAAN,KAAkB,4DAA9C,KAAwD,CAAC,8EAAerI,KAAf,CAA7D,EAAoF;AAChF,mBAAKwI,qBAAL,GADgF,CAEhF;;;AACAxI,mBAAK,CAACsI,cAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,iCAAwB;AACpB,gBAAI,CAAC,KAAKF,QAAV,EAAoB;AAChB,mBAAKiL,SAAL,GAAiB,KAAKoF,QAAL,GAAgB,CAAC,KAAKpF,SAAtB,GAAkC,IAAnD;;AACA,mBAAKxV,kBAAL,CAAwBkC,YAAxB;;AACA,mBAAK81B,yBAAL,CAA+B,IAA/B;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;iBACI,4BAAmB;AACf,mBAAO,KAAKnrB,QAAL,KAAkB,KAAK+N,QAAL,GAAgB,KAAhB,GAAwB,IAA1C,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,wBAAe;AACX,mBAAO,KAAKrQ,QAAL,GAAgB,IAAhB,GAAuB,GAA9B;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,2BAAkB;AACd,mBAAO,KAAKnE,QAAL,CAAc/E,aAArB;AACH;AACD;AACJ;AACA;;;;iBACI,8BAAqB;AACjB;AACA;AACA;AACA;AACA;AACA,gBAAI,KAAKmU,SAAT,EAAoB;AAChB;AACA,kBAAM0iB,SAAS,GAAG,KAAKA,SAAvB;;AACA,kBAAIA,SAAS,KAAK,KAAKL,oBAAvB,EAA6C;AACzC,qBAAKA,oBAAL,GAA4BK,SAA5B;;AACA,qBAAKJ,aAAL,CAAmBzqB,IAAnB;AACH;AACJ;AACJ;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAKyqB,aAAL,CAAmBhvB,QAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,qCAA+C;AAAA,gBAArByL,WAAqB,uEAAP,KAAO;AAC3C,iBAAKzM,iBAAL,CAAuBlG,IAAvB,CAA4B,IAAI21B,wBAAJ,CAA6B,IAA7B,EAAmChjB,WAAnC,CAA5B;AACH;;;;;;AAELmjB,eAAS,CAACt1B,IAAV,GAAiB,SAAS+1B,iBAAT,CAA2B71B,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAIo1B,SAAV,EAAqB,gEAAyB,wDAAzB,CAArB,EAAkE,gEAAyB,+DAAzB,CAAlE,EAAsH,gEAAyBD,2BAAzB,EAAsD,CAAtD,CAAtH,EAAgL,gEAAyBX,WAAzB,EAAsC,CAAtC,CAAhL,CAAP;AAAmO,OAApR;;AACAY,eAAS,CAACn1B,IAAV,GAAiB,gEAAyB;AAAEC,YAAI,EAAEk1B,SAAR;AAAmBj1B,iBAAS,EAAE,CAAC,CAAC,YAAD,CAAD,CAA9B;AAAgDU,iBAAS,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,CAAnB,EAAsB,YAAtB,EAAoC,qBAApC,CAA3D;AAAuHqM,gBAAQ,EAAE,EAAjI;AAAqIC,oBAAY,EAAE,SAAS2oB,sBAAT,CAAgCx5B,EAAhC,EAAoCC,GAApC,EAAyC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC5O,qEAAkB,OAAlB,EAA2B,SAASy5B,kCAAT,GAA8C;AAAE,qBAAOx5B,GAAG,CAAC8L,qBAAJ,EAAP;AAAqC,aAAhH,EAAkH,SAAlH,EAA6H,SAAS2tB,oCAAT,CAA8CvoB,MAA9C,EAAsD;AAAE,qBAAOlR,GAAG,CAACqR,cAAJ,CAAmBH,MAAnB,CAAP;AAAoC,aAAzN;AACH;;AAAC,cAAInR,EAAE,GAAG,CAAT,EAAY;AACV,yEAAsB,IAAtB,EAA4BC,GAAG,CAACE,EAAhC;;AACA,sEAAmB,UAAnB,EAA+BF,GAAG,CAAC05B,YAAJ,EAA/B,EAAmD,eAAnD,EAAoE15B,GAAG,CAAC25B,gBAAJ,EAApE,EAA4F,eAA5F,EAA6G35B,GAAG,CAAC0L,QAAJ,CAAa6F,QAAb,EAA7G;;AACA,sEAAmB,cAAnB,EAAmCvR,GAAG,CAACgO,QAAvC,EAAiD,qBAAjD,EAAwEhO,GAAG,CAAC+b,QAA5E,EAAsF,YAAtF,EAAoG/b,GAAG,CAAC45B,MAAxG,EAAgH,qBAAhH,EAAuI55B,GAAG,CAAC0L,QAA3I;AACH;AAAE,SANmC;AAMjCnH,cAAM,EAAE;AAAErE,YAAE,EAAE,IAAN;AAAYwL,kBAAQ,EAAE,UAAtB;AAAkC1J,eAAK,EAAE;AAAzC,SANyB;AAM2B0C,eAAO,EAAE;AAAEuE,2BAAiB,EAAE;AAArB,SANpC;AAMgFtE,gBAAQ,EAAE,CAAC,WAAD,CAN1F;AAMyGI,0BAAkB,EAAEge,GAN7H;AAMkI/d,aAAK,EAAE,CANzI;AAM4IC,YAAI,EAAE,CANlJ;AAMqJC,cAAM,EAAE,CAAC,CAAC,OAAD,EAAU,4BAAV,EAAwC,CAAxC,EAA2C,OAA3C,EAAoD,UAApD,EAAgE,CAAhE,EAAmE,MAAnE,CAAD,EAA6E,CAAC,CAAD,EAAI,iBAAJ,CAA7E,EAAqG,CAAC,YAAD,EAAe,EAAf,EAAmB,CAAnB,EAAsB,mBAAtB,EAA2C,CAA3C,EAA8C,kBAA9C,EAAkE,mBAAlE,CAArG,EAA6L,CAAC,CAAD,EAAI,4BAAJ,EAAkC,CAAlC,EAAqC,OAArC,EAA8C,UAA9C,CAA7L,CAN7J;AAMsZd,gBAAQ,EAAE,SAASy1B,kBAAT,CAA4B95B,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACrf;;AACA,qEAAkB,CAAlB,EAAqB+iB,wCAArB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,qBAArE,EAA4F,CAA5F;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,uEAAoB,CAApB;;AACA;;AACA,oEAAiB,CAAjB,EAAoB,KAApB,EAA2B,CAA3B;AACH;;AAAC,cAAI/iB,EAAE,GAAG,CAAT,EAAY;AACV,qEAAkB,MAAlB,EAA0BC,GAAG,CAAC+b,QAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,kBAAlB,EAAsC/b,GAAG,CAACk5B,eAAJ,EAAtC,EAA6D,mBAA7D,EAAkFl5B,GAAG,CAAC0L,QAAJ,IAAgB1L,GAAG,CAACwE,aAAtG;AACH;AAAE,SAjBmC;AAiBjCY,kBAAU,EAAE,CAAC,oDAAD,EAAcoxB,SAAd,EAAyBgB,iBAAzB,CAjBqB;AAiBwBnyB,cAAM,EAAE,CAAC,u4CAAD,CAjBhC;AAiB26CC,qBAAa,EAAE,CAjB17C;AAiB67CC,uBAAe,EAAE;AAjB98C,OAAzB,CAAjB;AAkBA;;AACAszB,eAAS,CAACrzB,cAAV,GAA2B;AAAA,eAAM,CAC7B;AAAE7B,cAAI,EAAE;AAAR,SAD6B,EAE7B;AAAEA,cAAI,EAAE;AAAR,SAF6B,EAG7B;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAACizB,2BAAD;AAAtB,WAArB;AAA/B,SAH6B,EAI7B;AAAEj1B,cAAI,EAAEs0B,WAAR;AAAqBvyB,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAAjC,SAJ6B,CAAN;AAAA,OAA3B;;AAMAk1B,eAAS,CAACjzB,cAAV,GAA2B;AACvB5D,aAAK,EAAE,CAAC;AAAE2B,cAAI,EAAE;AAAR,SAAD,CADgB;AAEvBzD,UAAE,EAAE,CAAC;AAAEyD,cAAI,EAAE;AAAR,SAAD,CAFmB;AAGvB+H,gBAAQ,EAAE,CAAC;AAAE/H,cAAI,EAAE;AAAR,SAAD,CAHa;AAIvBsF,yBAAiB,EAAE,CAAC;AAAEtF,cAAI,EAAE;AAAR,SAAD;AAJI,OAA3B;;AAMA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+yB,SAAzB,EAAoC,CAAC;AAC/Fl1B,cAAI,EAAE,uDADyF;AAE/FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,YADX;AAECpB,oBAAQ,EAAE,WAFX;AAGCuB,gBAAI,EAAE;AACF,sBAAQ,QADN;AAEF,iCAAmB,gBAFjB;AAGF,sCAAwB,UAHtB;AAIF,6CAA+B,UAJ7B;AAKF,oCAAsB,QALpB;AAMF,sBAAQ,IANN;AAOF,sCAAwB,oBAPtB;AAQF,sCAAwB,qBARtB;AASF,6CAA+B,UAT7B;AAUF,yBAAW,yBAVT;AAWF,2BAAa,wBAXX;AAYF,uBAAS;AAZP,aAHP;AAiBC9B,oBAAQ,EAAE,sZAjBX;AAkBCkB,yBAAa,EAAE,gEAAkBU,IAlBlC;AAmBCT,2BAAe,EAAE,sEAAwBU,MAnB1C;AAoBCZ,kBAAM,EAAE,CAAC,u4CAAD;AApBT,WAAD;AAFyF,SAAD,CAApC,EAwB1D,YAAY;AAAE,iBAAO,CAAC;AAAE1B,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC/G/B,kBAAI,EAAE;AADyG,aAAD,EAE/G;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAACizB,2BAAD;AAFP,aAF+G;AAA/B,WAAlE,EAKX;AAAEj1B,gBAAI,EAAEs0B,WAAR;AAAqBvyB,sBAAU,EAAE,CAAC;AACpC/B,kBAAI,EAAE;AAD8B,aAAD;AAAjC,WALW,CAAP;AAOF,SA/B8C,EA+B5C;AAAEzD,YAAE,EAAE,CAAC;AACjByD,gBAAI,EAAE;AADW,WAAD,CAAN;AAEVsF,2BAAiB,EAAE,CAAC;AACpBtF,gBAAI,EAAE;AADc,WAAD,CAFT;AAIV+H,kBAAQ,EAAE,CAAC;AACX/H,gBAAI,EAAE;AADK,WAAD,CAJA;AAMV3B,eAAK,EAAE,CAAC;AACR2B,gBAAI,EAAE;AADE,WAAD;AANG,SA/B4C,CAAnD;AAuCC,OAvChB;;AAwCA,UAAI,KAAJ,EAAW,CA4DV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASm2B,6BAAT,CAAuCC,WAAvC,EAAoDr3B,OAApD,EAA6DuB,YAA7D,EAA2E;AACvE,YAAIA,YAAY,CAAChC,MAAjB,EAAyB;AACrB;AACA,cAAI+3B,YAAY,GAAGt3B,OAAO,CAACM,OAAR,EAAnB;AACA;;AACA,cAAIi3B,MAAM,GAAGh2B,YAAY,CAACjB,OAAb,EAAb;AACA;;AACA,cAAIk3B,YAAY,GAAG,CAAnB;;AACA,eAAK,IAAInR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgR,WAAW,GAAG,CAAlC,EAAqChR,CAAC,EAAtC,EAA0C;AACtC,gBAAIiR,YAAY,CAACjR,CAAD,CAAZ,CAAgB5V,KAAhB,IAAyB6mB,YAAY,CAACjR,CAAD,CAAZ,CAAgB5V,KAAhB,KAA0B8mB,MAAM,CAACC,YAAD,CAA7D,EAA6E;AACzEA,0BAAY;AACf;AACJ;;AACD,iBAAOA,YAAP;AACH;;AACD,eAAO,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASC,wBAAT,CAAkCJ,WAAlC,EAA+CK,YAA/C,EAA6DC,qBAA7D,EAAoFC,WAApF,EAAiG;AAC7F;AACA,YAAMC,YAAY,GAAGR,WAAW,GAAGK,YAAnC;;AACA,YAAIG,YAAY,GAAGF,qBAAnB,EAA0C;AACtC,iBAAOE,YAAP;AACH;;AACD,YAAIA,YAAY,GAAGH,YAAf,GAA8BC,qBAAqB,GAAGC,WAA1D,EAAuE;AACnE,iBAAOtc,IAAI,CAAC0K,GAAL,CAAS,CAAT,EAAY6R,YAAY,GAAGD,WAAf,GAA6BF,YAAzC,CAAP;AACH;;AACD,eAAOC,qBAAP;AACH;AAED;AACA;AACA;AACA;AACA;;;UACMG,e;;;;AAENA,qBAAe,CAACj3B,IAAhB,GAAuB,SAASk3B,uBAAT,CAAiCh3B,CAAjC,EAAoC;AAAE,eAAO,KAAKA,CAAC,IAAI+2B,eAAV,GAAP;AAAsC,OAAnG;;AACAA,qBAAe,CAAC9oB,IAAhB,GAAuB,+DAAwB;AAAE/N,YAAI,EAAE62B;AAAR,OAAxB,CAAvB;AACAA,qBAAe,CAAC7oB,IAAhB,GAAuB,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAAC0lB,eAAD,EAAkB,4DAAlB,EAAgCM,uBAAhC,CAAD;AAAX,OAAxB,CAAvB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAO/lB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0B2oB,eAA1B,EAA2C;AAAE1oB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAAC+mB,SAAD,EAAYZ,WAAZ,CAAP;AAAkC,WAAhE;AAAkErmB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC0lB,eAAD,EAAkB,4DAAlB,EAAgCM,uBAAhC,CAAP;AAAkE,WAA3J;AAA6J7lB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC8mB,SAAD,EAAYZ,WAAZ,CAAP;AAAkC;AAAtN,SAA3C,CAAnD;AAA0T,OAAzU;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOnyB,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB00B,eAAzB,EAA0C,CAAC;AACrG72B,cAAI,EAAE,sDAD+F;AAErGgC,cAAI,EAAE,CAAC;AACCiM,mBAAO,EAAE,CAAC0lB,eAAD,EAAkB,4DAAlB,EAAgCM,uBAAhC,CADV;AAEC7lB,mBAAO,EAAE,CAAC8mB,SAAD,EAAYZ,WAAZ,CAFV;AAGCnmB,wBAAY,EAAE,CAAC+mB,SAAD,EAAYZ,WAAZ;AAHf,WAAD;AAF+F,SAAD,CAA1C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,OAPtB;AASA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMyC,wBAAwB,GAAG,IAAI,4DAAJ,CAAmB,0BAAnB,CAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAASC,YAAT,GAAwB,CAAG;;AAC3B,UAAI,KAAJ,EAAW,CAOV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,CAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,EAAZ;AACA;;AACA,UAAMC,GAAG,GAAG,EAAZ;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCngHaC,gCAAgC;AAE3C,kDACUvpB,GADV,EAESC,mBAFT,EAGUC,eAHV,EAGyC;AAAA;;AAF/B,eAAAF,GAAA,GAAAA,GAAA;AACD,eAAAC,mBAAA,GAAAA,mBAAA;AACC,eAAAC,eAAA,GAAAA,eAAA;AAGV,eAAAG,uBAAA,GAA0B,IAA1B;AAGA,eAAAC,gBAAA,GAAmB,IAAIC,KAAJ,EAAnB;AAGA,eAAAJ,OAAA,GAAmB,KAAnB;AAGO,eAAAC,MAAA,GAAc,EAAd;AAXH;;AANuC;AAAA;AAAA,iBAkB3C,oBAAQ;AACN,iBAAKK,qBAAL;AACA,iBAAKC,cAAL;AACD;AArB0C;AAAA;AAAA,iBAsB3C,iCAAwB;AACtB,iBAAKO,eAAL,GAAuB,KAAKjB,GAAL,CAASkB,KAAT,CAAe;AACpCM,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL,CADsB;AAEpCooB,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWpoB,QAAZ,CAAL,CAF8B;AAGpCqoB,sBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWroB,QAAZ,CAAL;AAH0B,aAAf,CAAvB;AAKD;AA5B0C;AAAA;AAAA,iBA6B3C,qBAAY;AACV,gBAAMU,UAAU,GAAG,KAAKlB,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA7C;AACA,iBAAKgS,MAAL,GAAcD,UAAd;AACA,mBAAOA,UAAP;AACD;AAjC0C;AAAA;AAAA,iBAkC3C,0BAAiB;AAAA;;AACf,iBAAK5B,eAAL,CAAqB8C,aAArB,GAAqCpS,SAArC,CAA+C,UAAC+Q,GAAD,EAAS;AACtD,qBAAI,CAACsB,QAAL,GAAgBtB,GAAhB;;AADsD,0DAEtC,OAAI,CAACsB,QAFiC;AAAA;;AAAA;AAEtD,uEAA+B;AAAA,sBAAtBC,GAAsB;AAC7B,sBAAIC,YAAY,GAAGD,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAAnB;AACA0C,yBAAO,CAACC,GAAR,CAAYkB,YAAZ;;AAEA,yBAAI,CAAC7C,gBAAL,CAAsB8C,IAAtB,CAA2BF,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAA3B;AACD;AAPqD;AAAA;AAAA;AAAA;AAAA;AAQvD,aARD;AASD;AA5C0C;AAAA;AAAA,iBA6C3C,uBAAcmC,GAAd,EAAmB;AACjB,mFAAKC,IAAL,CAAU,QAAV,EAAoBD,GAApB,EAAyB,OAAzB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AAnD0C;AAAA;AAAA,iBAoD3C,0BAAiBJ,GAAjB,EAAsB;AACpB,mFAAKC,IAAL,CAAU,MAAV,EAAkBD,GAAlB,EAAuB,SAAvB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AA1D0C;AAAA;AAAA,iBA2D3C,mCAA0B;AAAA;;AACxB,iBAAKgB,UAAL,GAAkB,IAAlB;;AACA,gBAAI,KAAK5B,eAAL,CAAqBqB,KAAzB,EAAgC;AAC9B,mBAAKrC,mBAAL,CAAyBypB,kCAAzB,CAA4D,KAAKxnB,SAAL,EAA5D,EAA8EM,YAAY,CAACC,OAAb,CAAqB,IAArB,CAA9E,EAAyG,KAAKxB,eAAL,CAAqBlR,KAA9H,EAAqIa,SAArI,CAA+I,UAAC+Q,GAAD,EAAc;AAC3JK,uBAAO,CAACC,GAAR,CAAYN,GAAZ;AACAK,uBAAO,CAACC,GAAR,CAAY,KAAZ;;AACA,oBAAIN,GAAG,CAACe,OAAJ,IAAe,oCAAnB,EAAyD;AACvD,yBAAI,CAACK,gBAAL,CAAsBpB,GAAG,CAACe,OAA1B;AAED,iBAHD,MAGK;AACH,yBAAI,CAACC,aAAL,CAAmBhB,GAAG,CAACe,OAAvB;AAED;AACF,eAVD,EAUG,UAACE,GAAD,EAAS;AACVZ,uBAAO,CAACC,GAAR,CAAYW,GAAZ;AAED,eAbD;;AAeAZ,qBAAO,CAACC,GAAR,CAAY,KAAKhB,eAAL,CAAqBlR,KAAjC;AACD;AACF;AA/E0C;AAAA;AAAA,iBAgF3C,wBAAemT,GAAf,EAAoB;AAClB,iBAAKtC,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA1B,GAAkCmT,GAAlC;AACA,iBAAK7C,uBAAL,GAA+B,IAA/B,CAFkB,CAGlB;AACD;AApF0C;AAAA;AAAA,iBAqF3C,cAAK6C,GAAL,EAAU;AACR,mBAAOA,GAAP;AACD;AAvF0C;AAAA;AAAA,iBAwF3C,sBAAaA,GAAb,EAAkB;AAChB,iBAAK7C,uBAAL,GAA+B,KAA/B;AAEA,gBAAIgD,OAAO,GAAG,KAAK/C,gBAAL,CAAsBF,MAAtB,CAA6B,KAAKkD,IAAlC,CAAd;AACD;AA5F0C;;AAAA;AAAA,S;;;;gBAVpC;;gBACA;;gBACA;;;;;;gBAuBN,uD;AAAS,iBAAC,QAAD;;;AAfCimB,sCAAgC,6DAL5C,gEAAU;AACTz1B,gBAAQ,EAAE,+BADD;AAET3B,gBAAQ,EAAR,4FAFS;;AAAA,OAAV,CAK4C,GAAhCo3B,gCAAgC,CAAhC;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCWFI,0BAA0B;AAgBrC,4CAAoB3pB,GAApB,EACSC,mBADT,EAEUC,eAFV,EAE2C;AAAA;;AAFvB,eAAAF,GAAA,GAAAA,GAAA;AACX,eAAAC,mBAAA,GAAAA,mBAAA;AACC,eAAAC,eAAA,GAAAA,eAAA;AAjBV,eAAAC,OAAA,GAAmB,KAAnB;AACA,eAAAypB,UAAA,GAAkB,CAAC,CAAD,CAAlB;AACA,eAAAC,OAAA,GAAe,CAAC,CAAD,CAAf;AAGF,eAAA/S,CAAA,GAAS,CAAT;AAGE,eAAAzW,uBAAA,GAA0B,IAA1B;AACA,eAAAC,gBAAA,GAAmB,IAAIC,KAAJ,EAAnB;AAQ8C;;AAlBT;AAAA;AAAA,iBAoBrC,oBAAQ;AAAA;;AACN,iBAAKC,SAAL;AACA,iBAAKspB,0BAAL;AACA,iBAAKppB,cAAL;AACAC,sBAAU,CAAC,YAAI;AACb,qBAAI,CAACC,MAAL,CAAYrQ,aAAZ,CAA0BoL,KAA1B;AACD,aAFS,EAER,CAFQ,CAAV;AAGD;AA3BoC;AAAA;AAAA,iBA4BrC,sBAAakF,CAAb,EAAc;AACZ,gBAAIC,IAAI,GAAID,CAAC,CAACnH,OAAF,GAAYmH,CAAC,CAACnH,OAAd,GAAwBmH,CAAC,CAACE,KAAtC;;AACJ,gBAAGD,IAAI,IAAI,EAAX,EAAe;AAAE;AACb,mBAAKipB,OAAL;AACH;AAEE;AAlCoC;AAAA;AAAA,iBAmCrC,yBAAgB;AACd,iBAAKC,eAAL,CAAqB5mB,IAArB,CAA0B,KAAK6mB,kBAAL,EAA1B;AAEA,iBAAKL,UAAL,CAAgBxmB,IAAhB,CAAqB,CAArB;AAED;AAxCoC;AAAA;AAAA,iBAyCrC,sBAAa;AACX,iBAAK8mB,cAAL,CAAoB9mB,IAApB,CAAyB,KAAK+mB,iBAAL,EAAzB;AAGA,iBAAKN,OAAL,CAAazmB,IAAb,CAAkB,CAAlB;AACApB,mBAAO,CAACC,GAAR,CAAY,KAAK4nB,OAAjB;AAED;AAhDoC;AAAA;AAAA,iBAiDrC,sBAAa95B,KAAb,EAAkB;AAChB,iBAAI,IAAI+mB,CAAC,GAAC,KAAKkT,eAAL,CAAqBj6B,KAArB,CAA2BC,MAArC,EAA4C8mB,CAAC,GAAC,CAA9C,EAAgDA,CAAC,EAAjD,EAAoD;AAClD,mBAAKkT,eAAL,CAAqBI,QAArB,CAA8BtT,CAAC,GAAC,CAAhC;AAED;;AACD,iBAAI,IAAIA,CAAC,GAAC,KAAKoT,cAAL,CAAoBn6B,KAApB,CAA0BC,MAApC,EAA2C8mB,CAAC,GAAC,CAA7C,EAA+CA,CAAC,EAAhD,EAAmD;AACjD,mBAAKoT,cAAL,CAAoBE,QAApB,CAA6BtT,CAAC,GAAC,CAA/B;AAED;;AACD,iBAAKkT,eAAL,CAAqB5mB,IAArB,CAA0B,KAAK6mB,kBAAL,EAA1B;AAEAjoB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK+nB,eAAL,CAAqBj6B,KAAjD;AACF;AA7DqC;AAAA;AAAA,iBA8DtC,uBAAcA,KAAd,EAAmB;AAClB,iBAAI,IAAI+mB,CAAC,GAAC,KAAKoT,cAAL,CAAoBn6B,KAApB,CAA0BC,MAApC,EAA2C8mB,CAAC,GAAC,CAA7C,EAA+CA,CAAC,EAAhD,EAAmD;AACjD,mBAAKoT,cAAL,CAAoBE,QAApB,CAA6BtT,CAAC,GAAC,CAA/B;AAED;;AACD,iBAAI,IAAIA,CAAC,GAAC,KAAKkT,eAAL,CAAqBj6B,KAArB,CAA2BC,MAArC,EAA4C8mB,CAAC,GAAC,CAA9C,EAAgDA,CAAC,EAAjD,EAAoD;AAClD,mBAAKkT,eAAL,CAAqBI,QAArB,CAA8BtT,CAAC,GAAC,CAAhC;AAED;;AACD,iBAAKoT,cAAL,CAAoB9mB,IAApB,CAAyB,KAAK+mB,iBAAL,EAAzB;AAEAnoB,mBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKioB,cAAL,CAAoBn6B,KAAhD;AACD;AA1EsC;AAAA;AAAA,iBA2ErC,qBAAY;AACV,iBAAKwR,IAAL,GAAY,KAAKvB,GAAL,CAASkB,KAAT,CAAe;AACzBM,0BAAY,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWJ,QAAZ,CAAL;AADW,aAAf,CAAZ;AAGD;AA/EoC;AAAA;AAAA,iBAgFrC,sCAA6B;AAC3B,iBAAKipB,qBAAL,GAA8B,KAAKrqB,GAAL,CAASkB,KAAT,CAAe;AAC3CopB,qBAAO,EAAE,CAAC,EAAD,EAAI,CAAC,0DAAWlpB,QAAZ,CAAJ,CADkC;AAE1CmpB,uBAAS,EAAE,CAAC,EAAD,CAF+B;AAG3CL,4BAAc,EAAE,KAAKlqB,GAAL,CAASwqB,KAAT,CAAe,EAAf,CAH2B;AAI3CR,6BAAe,EAAC,KAAKhqB,GAAL,CAASwqB,KAAT,CAAe,EAAf,CAJ2B;AAK3C;AACA;AACAf,sBAAQ,EAAC,CAAC,EAAD,EAAI,CAAC,0DAAWroB,QAAZ,CAAJ;AAPkC,aAAf,CAA9B,CAD2B,CAU3B;AACA;AAED;AA7FoC;AAAA;AAAA,eA+FvC,eAAqB;AACnB,mBAAO,KAAKipB,qBAAL,CAA2BI,GAA3B,CAA+B,gBAA/B,CAAP;AACD;AAjGsC;AAAA;AAAA,eAkGvC,eAAsB;AACpB,mBAAO,KAAKJ,qBAAL,CAA2BI,GAA3B,CAA+B,iBAA/B,CAAP;AACD;AApGsC;AAAA;AAAA,iBAqGvC,6BAAiB;AACf,mBAAO,KAAKzqB,GAAL,CAASkB,KAAT,CAAe;AACpBM,0BAAY,EAAE,CAAC,EAAD,CADM;AAGlBkpB,sBAAQ,EAAC,CAAC,EAAD,CAHS;AAIlBC,qBAAO,EAAC,CAAC,EAAD;AAJU,aAAf,CAAP;AAOD;AA7GsC;AAAA;AAAA,iBA8GvC,8BAAkB;AAChB,mBAAO,KAAK3qB,GAAL,CAASkB,KAAT,CAAe;AAEpB0pB,6BAAe,EAAC,CAAC,EAAD;AAFI,aAAf,CAAP;AAID;AAnHsC;AAAA;AAAA,iBAoHrC,uBAAcnpB,GAAd,EAAmB;AACjB,mFAAKC,IAAL,CAAU,QAAV,EAAoBD,GAApB,EAAyB,OAAzB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AA1HoC;AAAA;AAAA,iBA2HrC,mBAAU;AAAA;;AACR,iBAAKQ,SAAL,GAAiB,IAAjB,CADQ,CAER;;AAEA,gBAAI,KAAKd,IAAL,CAAUe,KAAd,EAAqB;AACnB,mBAAKrC,mBAAL,CAAyB4qB,0BAAzB,CAAoD,KAAK3oB,SAAL,EAApD,EAAsEM,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAtE,EAAkG7R,SAAlG,CAA4G,UAAC+Q,GAAD,EAAc;AACxHK,uBAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,oBAAIA,GAAG,CAACe,OAAJ,IAAe,mCAAnB,EAAwD;AACtD,yBAAI,CAACvC,OAAL,GAAe,IAAf;AAED,iBAHD,MAGK;AACH,yBAAI,CAACwC,aAAL,CAAmBhB,GAAG,CAACe,OAAvB;AAED;AACF,eATD,EASG,UAACE,GAAD,EAAS;AACV,uBAAI,CAACD,aAAL,CAAmBC,GAAnB;AAED,eAZD;;AAaAZ,qBAAO,CAACC,GAAR,CAAY,KAAKV,IAAL,CAAUxR,KAAV,CAAgByR,YAA5B,EAA0CgB,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA1C;AACD;AACF;AA/IoC;AAAA;AAAA,iBAgJrC,oBAAQ;AAAA;;AACP,iBAAKI,UAAL,GAAgB,IAAhB,CADO,CAEF;;AAEL,gBAAG,KAAKwnB,qBAAL,CAA2B/nB,KAA9B,EAAoC;AAClCN,qBAAO,CAACC,GAAR,CAAY,KAAKooB,qBAAL,CAA2Bt6B,KAAvC;AACA,kBAAI+6B,SAAS,GAAC,EAAd;;AACA,mBAAI,IAAIhU,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKuT,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDl6B,MAA9D,EAAqE8mB,CAAC,EAAtE,EAAyE;AACxEgU,yBAAS,CAAC1nB,IAAV,CAAe;AACb5B,8BAAY,EAAC,KAAK6oB,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDpT,CAAhD,EAAmDtV,YADnD;AAEbupB,+BAAa,EAAC;AACZL,4BAAQ,EAAE,KAAKL,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDpT,CAAhD,EAAmD4T,QADjD;AAEXC,2BAAO,EAAE,KAAKN,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDpT,CAAhD,EAAmD6T;AAFjD;AAFD,iBAAf;AAOA;;AACD3oB,qBAAO,CAACC,GAAR,CAAY6oB,SAAZ;AACA,kBAAIE,eAAe,GAAC;AACnBV,uBAAO,EAAC,KAAKD,qBAAL,CAA2Bt6B,KAA3B,CAAiCu6B,OADtB;AAEnBM,+BAAe,EAAC;AAFG,eAApB;;AAIA,mBAAI,IAAI9T,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKuT,qBAAL,CAA2Bt6B,KAA3B,CAAiCi6B,eAAjC,CAAiDh6B,MAA/D,EAAsE8mB,CAAC,EAAvE,EAA0E;AACzEkU,+BAAe,CAACJ,eAAhB,CAAgCxnB,IAAhC,CAAqC,KAAKinB,qBAAL,CAA2Bt6B,KAA3B,CAAiCi6B,eAAjC,CAAiDlT,CAAjD,EAAoD8T,eAAzF;AACA;;AACD,mBAAI,IAAI9T,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKuT,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDl6B,MAA9D,EAAqE8mB,CAAC,EAAtE,EAAyE;AACxEkU,+BAAe,CAACJ,eAAhB,CAAgCxnB,IAAhC,CAAqC,KAAKinB,qBAAL,CAA2Bt6B,KAA3B,CAAiCm6B,cAAjC,CAAgDpT,CAAhD,EAAmDtV,YAAxF;AACA;;AACDQ,qBAAO,CAACC,GAAR,CAAY+oB,eAAZ;;AACA,mBAAK/qB,mBAAL,CAAyBgrB,4BAAzB,CAAsD,KAAK/oB,SAAL,EAAtD,EAAuEM,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAvE,EAAkGqoB,SAAlG,EAA4GE,eAA5G,EAA4H,KAAKX,qBAAL,CAA2Bt6B,KAA3B,CAAiC05B,QAA7J,EAAuK74B,SAAvK,CAAiL,UAAC+Q,GAAD,EAAW;AAC3LK,uBAAO,CAACC,GAAR,CAAYN,GAAZ;;AACA,oBAAIA,GAAG,CAACe,OAAJ,IAAe,oCAAnB,EAAyD;AAC/D,yBAAI,CAACK,gBAAL,CAAsBpB,GAAG,CAACe,OAA1B;AACO,iBAFD,MAEK;AACH,yBAAI,CAACC,aAAL,CAAmBhB,GAAG,CAACe,OAAvB;AAED;AACD,eARD,EAQE,UAACE,GAAD,EAAO;AACPZ,uBAAO,CAACC,GAAR,CAAYW,GAAZ;;AACA,uBAAI,CAACD,aAAL,CAAmBC,GAAnB;AAED,eAZD;AAaD;AACD;AA1LoC;AAAA;AAAA,iBA2LrC,0BAAiBnB,GAAjB,EAAsB;AACpB,mFAAKC,IAAL,CAAU,MAAV,EAAkBD,GAAlB,EAAuB,SAAvB,EAAkCpI,IAAlC,CACE,UAACsI,GAAD,EAAS;AACPC,sBAAQ,CAACC,MAAT;AACD,aAHH;AAKD;AAjMoC;AAAA;AAAA,iBAkMrC,0BAAiB;AAAA;;AACf,iBAAK3B,eAAL,CAAqB8C,aAArB,GAAqCpS,SAArC,CAA+C,UAAC+Q,GAAD,EAAS;AACtD,qBAAI,CAACsB,QAAL,GAAgBtB,GAAhB;;AADsD,0DAEtC,OAAI,CAACsB,QAFiC;AAAA;;AAAA;AAEtD,uEAA+B;AAAA,sBAAtBC,GAAsB;AAC7B,sBAAIC,YAAY,GAAGD,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAAnB;AACA0C,yBAAO,CAACC,GAAR,CAAYkB,YAAZ;;AAEA,yBAAI,CAAC7C,gBAAL,CAAsB8C,IAAtB,CAA2BF,GAAG,CAAC1B,YAAJ,CAAiBlC,QAAjB,EAA3B;AACD;AAPqD;AAAA;AAAA;AAAA;AAAA;AAQvD,aARD;AASD;AA5MoC;AAAA;AAAA,iBA6MrC,wBAAe4D,GAAf,EAAoB;AAClB,iBAAKtC,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA1B,GAAkCmT,GAAlC;AACA,iBAAK7C,uBAAL,GAA+B,IAA/B,CAFkB,CAGlB;AAED;AAlNoC;AAAA;AAAA,iBAmNrC,cAAK6C,GAAL,EAAU;AACR,mBAAOA,GAAP;AACD;AArNoC;AAAA;AAAA,iBAsNrC,sBAAaA,GAAb,EAAkB;AAChB,iBAAK7C,uBAAL,GAA+B,KAA/B;AAGA,gBAAIgD,OAAO,GAAG,KAAK/C,gBAAL,CAAsBF,MAAtB,CAA6B,KAAKkD,IAAlC,CAAd;AAED;AA5NoC;AAAA;AAAA,iBA6NrC,qBAAY;AACV,gBAAMxB,UAAU,GAAG,KAAKlB,MAAL,CAAYrQ,aAAZ,CAA0BR,KAA7C;AACA,iBAAKgS,MAAL,GAAcD,UAAd;AACA,mBAAOA,UAAP;AACD;AAjOoC;;AAAA;AAAA,S;;;;gBAV9B;;gBACA;;gBAEA;;;;;;gBAqBN,uD;AAAS,iBAAC,QAAD;;;AAdC6nB,gCAA0B,6DALtC,gEAAU;AACT71B,gBAAQ,EAAE,wBADD;AAET3B,gBAAQ,EAAR,qFAFS;;AAAA,OAAV,CAKsC,GAA1Bw3B,0BAA0B,CAA1B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAfqBAAD,CAAZ;AACA,UAAM2iB,GAAG,GAAG,CAAC,gBAAD,CAAZ;AACA,UAAMoa,GAAG,GAAG,CAAC,OAAD,CAAZ;;AACA,eAASC,oCAAT,CAA8Cr9B,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,gFAA+B,CAA/B;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA;;AACA;AACH;AAAE;;AACH,eAASs9B,2BAAT,CAAqCt9B,EAArC,EAAyCC,GAAzC,EAA8C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACxD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAASu9B,4CAAT,CAAsDv9B,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzE,gFAA+B,CAA/B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,uEAAsB,CAAtB,EAAyB,MAAzB;;AACA,+DAAc,CAAd;;AACA;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMw9B,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBA,OAAO,CAAC7vB,QAAR,CAAiB6O,WAA1C;AACH;AAAE;;AACH,eAASihB,0CAAT,CAAoDz9B,EAApD,EAAwDC,GAAxD,EAA6D;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACvE,qEAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAAC,eAAD,EAAkB,MAAlB,CAA1B;AACH;AAAE;;AACH,eAAS09B,oCAAT,CAA8C19B,EAA9C,EAAkDC,GAAlD,EAAuD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACjE,uEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,EAAjC;;AACA,+DAAc,CAAd,EAAiB,IAAjB;;AACA;AACH;AAAE;;AACH,eAAS29B,6BAAT,CAAuC39B,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC1D,cAAM49B,IAAI,GAAG,gEAAb;;AACA,uEAAsB,CAAtB,EAAyB,OAAzB,EAAkC,EAAlC,EAAsC,EAAtC;;AACA,mEAAkB,mBAAlB,EAAuC,SAASC,gEAAT,GAA4E;AAAE,wEAAqBD,IAArB;;AAA4B,gBAAME,OAAO,GAAG,6DAAhB;;AAAwC,mBAAOA,OAAO,CAACC,gBAAR,EAAP;AAAoC,WAA7N;;AACA,mEAAkB,CAAlB,EAAqBR,4CAArB,EAAmE,CAAnE,EAAsE,CAAtE,EAAyE,cAAzE,EAAyF,EAAzF;;AACA,mEAAkB,CAAlB,EAAqBE,0CAArB,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,YAAvE,EAAqF,EAArF;;AACA,mEAAkB,CAAlB,EAAqBC,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,MAAjE,EAAyE,EAAzE;;AACA;AACH;;AAAC,YAAI19B,EAAE,GAAG,CAAT,EAAY;AACV,cAAMg+B,MAAM,GAAG,6DAAf;;AACA,oEAAmB,WAAnB,EAAgCA,MAAM,CAACrwB,QAAP,CAAgBuO,KAAhB,IAAyB,CAAC8hB,MAAM,CAACC,kBAAjE,EAAqF,sBAArF,EAA6GD,MAAM,CAACrwB,QAAP,CAAgBuO,KAAhB,IAAyB,CAAC8hB,MAAM,CAACC,kBAA9I,EAAkK,YAAlK,EAAgLD,MAAM,CAAClkB,KAAP,IAAgB,QAAhM,EAA0M,UAA1M,EAAsNkkB,MAAM,CAAClkB,KAAP,IAAgB,MAAtO;;AACA,mEAAkB,2BAAlB,EAA+CkkB,MAAM,CAACE,UAAP,IAAqB,SAApE,EAA+E,IAA/E,EAAqFF,MAAM,CAAC5F,QAA5F,EAAsG,UAAtG,EAAkH4F,MAAM,CAACG,SAAP,EAAlH;;AACA,oEAAmB,KAAnB,EAA0BH,MAAM,CAACrwB,QAAP,CAAgBxN,EAA1C,EAA8C,WAA9C,EAA2D69B,MAAM,CAACrwB,QAAP,CAAgBxN,EAA3E;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,KAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,cAAlB,EAAkC,IAAlC;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0B,CAAC69B,MAAM,CAACI,kBAAR,IAA8BJ,MAAM,CAACrwB,QAAP,CAAgB2F,QAA9C,IAA0D,CAAC0qB,MAAM,CAACrwB,QAAP,CAAgBhC,QAArG;AACH;AAAE;;AACH,eAAS0yB,4BAAT,CAAsCr+B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;AAAE;;AACH,eAASs+B,4BAAT,CAAsCt+B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC,EAAoC,EAApC;;AACA,kEAAiB,CAAjB,EAAoB,MAApB,EAA4B,EAA5B;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMu+B,MAAM,GAAG,6DAAf;;AACA,kEAAiB,CAAjB;;AACA,oEAAmB,YAAnB,EAAiCA,MAAM,CAACzkB,KAAP,IAAgB,QAAjD,EAA2D,UAA3D,EAAuEykB,MAAM,CAACzkB,KAAP,IAAgB,MAAvF;AACH;AAAE;;AACH,eAAS0kB,4BAAT,CAAsCx+B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAMy+B,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACC,wBAAhD;AACH;AAAE;;AACH,eAASC,kCAAT,CAA4C3+B,EAA5C,EAAgDC,GAAhD,EAAqD;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,+DAAc,CAAd;;AACA;AACH;;AAAC,YAAIA,EAAE,GAAG,CAAT,EAAY;AACV,cAAM4+B,OAAO,GAAG,4DAAqB,CAArB,CAAhB;;AACA,mEAAkB,IAAlB,EAAwBA,OAAO,CAACC,YAAhC;;AACA,kEAAiB,CAAjB;;AACA,0EAAyBD,OAAO,CAACE,SAAjC;AACH;AAAE;;AACH,eAASC,4BAAT,CAAsC/+B,EAAtC,EAA0CC,GAA1C,EAA+C;AAAE,YAAID,EAAE,GAAG,CAAT,EAAY;AACzD,uEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,EAAhC;;AACA,mEAAkB,CAAlB,EAAqB2+B,kCAArB,EAAyD,CAAzD,EAA4D,CAA5D,EAA+D,KAA/D,EAAsE,EAAtE;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA,kEAAiB,CAAjB,EAAoB,KAApB,EAA2B,EAA3B;;AACA,qEAAoB,CAApB,EAAuB,CAAvB;;AACA;AACH;;AAAC,YAAI3+B,EAAE,GAAG,CAAT,EAAY;AACV,cAAMg/B,MAAM,GAAG,6DAAf;;AACA,mEAAkB,qBAAlB,EAAyCA,MAAM,CAACN,wBAAhD;;AACA,kEAAiB,CAAjB;;AACA,mEAAkB,MAAlB,EAA0BM,MAAM,CAACF,SAAjC;AACH;AAAE;;AACH,UAAMG,GAAG,GAAG,CAAC,GAAD,EAAM,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAN,EAA+B,CAAC,CAAC,iBAAD,CAAD,CAA/B,EAAsD,CAAC,CAAC,WAAD,CAAD,CAAtD,EAAuE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD,CAAvE,EAAgG,CAAC,CAAC,WAAD,CAAD,CAAhG,EAAiH,CAAC,CAAC,UAAD,EAAa,CAAb,EAAgB,OAAhB,EAAyB,KAAzB,CAAD,CAAjH,EAAoJ,CAAC,CAAC,UAAD,EAAa,OAAb,EAAsB,KAAtB,CAAD,CAApJ,CAAZ;AACA,UAAMC,GAAG,GAAG,CAAC,GAAD,EAAM,aAAN,EAAqB,iBAArB,EAAwC,WAAxC,EAAqD,aAArD,EAAoE,WAApE,EAAiF,6BAAjF,EAAgH,uBAAhH,CAAZ;AACA,UAAInkB,YAAY,GAAG,CAAnB;AACA;AACA;AACA;;UACMokB,Q,GACF,oBAAc;AAAA;;AACV,aAAKh/B,EAAL,uBAAuB4a,YAAY,EAAnC;AACH,O;;AAELokB,cAAQ,CAAC37B,IAAT,GAAgB,SAAS47B,gBAAT,CAA0B17B,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIy7B,QAAV,GAAP;AAA+B,OAA9E;;AACAA,cAAQ,CAAC34B,IAAT,GAAgB,gEAAyB;AAAE5C,YAAI,EAAEu7B,QAAR;AAAkBt7B,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD,CAA7B;AAA8CU,iBAAS,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,CAAlB,EAAqB,WAArB,CAAzD;AAA4FqM,gBAAQ,EAAE,CAAtG;AAAyGC,oBAAY,EAAE,SAASwuB,qBAAT,CAA+Br/B,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC9M,sEAAmB,IAAnB,EAAyBC,GAAG,CAACE,EAA7B;AACH;AAAE,SAFkC;AAEhCqE,cAAM,EAAE;AAAErE,YAAE,EAAE;AAAN;AAFwB,OAAzB,CAAhB;AAGAg/B,cAAQ,CAACt5B,cAAT,GAA0B;AACtB1F,UAAE,EAAE,CAAC;AAAEyD,cAAI,EAAE;AAAR,SAAD;AADkB,OAA1B;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBo5B,QAAzB,EAAmC,CAAC;AAC9Fv7B,cAAI,EAAE,uDADwF;AAE9FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,WADX;AAECG,gBAAI,EAAE;AACF,uBAAS,WADP;AAEF,sBAAQ,OAFN;AAGF,2BAAa;AAHX;AAFP,WAAD;AAFwF,SAAD,CAAnC,EAU1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAVgC,EAU9B;AAAEhG,YAAE,EAAE,CAAC;AAC/ByD,gBAAI,EAAE;AADyB,WAAD;AAAN,SAV8B,CAAnD;AAYC,OAZhB;;AAaA,UAAI,KAAJ,EAAW,CAGV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AACA,UAAM07B,sBAAsB,GAAG;AAC3B;AACJ;AACA;AACIC,0BAAkB,EAAE,oEAAQ,oBAAR,EAA8B,CAC9C;AACA,0EAAM,OAAN,EAAe,kEAAM;AAAE7K,iBAAO,EAAE,CAAX;AAAcV,mBAAS,EAAE;AAAzB,SAAN,CAAf,CAF8C,EAG9C,uEAAW,eAAX,EAA4B,CACxB,kEAAM;AAAEU,iBAAO,EAAE,CAAX;AAAcV,mBAAS,EAAE;AAAzB,SAAN,CADwB,EAExB,oEAAQ,wCAAR,CAFwB,CAA5B,CAH8C,CAA9B;AAJO,OAA/B;AAcA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;UACMwL,mB;;;;AAENA,yBAAmB,CAACh8B,IAApB,GAA2B,SAASi8B,2BAAT,CAAqC/7B,CAArC,EAAwC;AAAE,eAAO,KAAKA,CAAC,IAAI87B,mBAAV,GAAP;AAA0C,OAA/G;;AACAA,yBAAmB,CAACh5B,IAApB,GAA2B,gEAAyB;AAAE5C,YAAI,EAAE47B;AAAR,OAAzB,CAA3B;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOz5B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBy5B,mBAAzB,EAA8C,CAAC;AACzG57B,cAAI,EAAE;AADmG,SAAD,CAA9C,EAE1D,IAF0D,EAEpD,IAFoD,CAAnD;AAEO,OAFtB;;AAGA,UAAI,KAAJ,EAAW,CAoFV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,eAAS87B,uCAAT,GAAmD;AAC/C,eAAOn4B,KAAK,CAAC,8DAAD,CAAZ;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,eAASo4B,kCAAT,CAA4CC,KAA5C,EAAmD;AAC/C,eAAOr4B,KAAK,oDAA4Cq4B,KAA5C,UAAZ;AACH;AACD;AACA;AACA;AACA;;;AACA,eAASC,kCAAT,GAA8C;AAC1C,eAAOt4B,KAAK,CAAC,oDAAD,CAAZ;AACH;AAED;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAI2Z,cAAc,GAAG,CAArB;AACA;AACA;AACA;;UACM4e,O,GACF,mBAAc;AAAA;;AACV;AACR;AACA;AACQ,aAAKF,KAAL,GAAa,OAAb;AACA;AACR;AACA;;AACQ,aAAKz/B,EAAL,sBAAsB+gB,cAAc,EAApC;AACH,O;;AAEL4e,aAAO,CAACt8B,IAAR,GAAe,SAASu8B,eAAT,CAAyBr8B,CAAzB,EAA4B;AAAE,eAAO,KAAKA,CAAC,IAAIo8B,OAAV,GAAP;AAA8B,OAA3E;;AACAA,aAAO,CAACt5B,IAAR,GAAe,gEAAyB;AAAE5C,YAAI,EAAEk8B,OAAR;AAAiBj8B,iBAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAA5B;AAA4CU,iBAAS,EAAE,CAAC,CAAD,EAAI,UAAJ,CAAvD;AAAwEqM,gBAAQ,EAAE,CAAlF;AAAqFC,oBAAY,EAAE,SAASmvB,oBAAT,CAA8BhgC,EAA9B,EAAkCC,GAAlC,EAAuC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACxL,sEAAmB,IAAnB,EAAyBC,GAAG,CAACE,EAA7B,EAAiC,OAAjC,EAA0C,IAA1C;;AACA,sEAAmB,WAAnB,EAAgCF,GAAG,CAAC2/B,KAAJ,IAAa,KAA7C;AACH;AAAE,SAHiC;AAG/Bp7B,cAAM,EAAE;AAAEo7B,eAAK,EAAE,OAAT;AAAkBz/B,YAAE,EAAE;AAAtB;AAHuB,OAAzB,CAAf;AAIA2/B,aAAO,CAACj6B,cAAR,GAAyB;AACrB+5B,aAAK,EAAE,CAAC;AAAEh8B,cAAI,EAAE;AAAR,SAAD,CADc;AAErBzD,UAAE,EAAE,CAAC;AAAEyD,cAAI,EAAE;AAAR,SAAD;AAFiB,OAAzB;;AAIA,OAAC,YAAY;AAAE,SAAC,OAAOmC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+5B,OAAzB,EAAkC,CAAC;AAC7Fl8B,cAAI,EAAE,uDADuF;AAE7FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,UADX;AAECG,gBAAI,EAAE;AACF,uBAAS,UADP;AAEF,mCAAqB,gBAFnB;AAGF,2BAAa,IAHX;AAIF;AACA,8BAAgB;AALd;AAFP,WAAD;AAFuF,SAAD,CAAlC,EAY1D,YAAY;AAAE,iBAAO,EAAP;AAAY,SAZgC,EAY9B;AAAEy5B,eAAK,EAAE,CAAC;AAClCh8B,gBAAI,EAAE;AAD4B,WAAD,CAAT;AAExBzD,YAAE,EAAE,CAAC;AACLyD,gBAAI,EAAE;AADD,WAAD;AAFoB,SAZ8B,CAAnD;AAgBC,OAhBhB;;AAiBA,UAAI,KAAJ,EAAW,CAWV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMq8B,Q;;;;AAENA,cAAQ,CAACz8B,IAAT,GAAgB,SAAS08B,gBAAT,CAA0Bx8B,CAA1B,EAA6B;AAAE,eAAO,KAAKA,CAAC,IAAIu8B,QAAV,GAAP;AAA+B,OAA9E;;AACAA,cAAQ,CAACz5B,IAAT,GAAgB,gEAAyB;AAAE5C,YAAI,EAAEq8B,QAAR;AAAkBp8B,iBAAS,EAAE,CAAC,CAAC,WAAD,CAAD;AAA7B,OAAzB,CAAhB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOkC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBk6B,QAAzB,EAAmC,CAAC;AAC9Fr8B,cAAI,EAAE,uDADwF;AAE9FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE;AADX,WAAD;AAFwF,SAAD,CAAnC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;UACMm6B,c;;;;AAENA,oBAAc,CAAC38B,IAAf,GAAsB,SAAS48B,sBAAT,CAAgC18B,CAAhC,EAAmC;AAAE,eAAO,KAAKA,CAAC,IAAIy8B,cAAV,GAAP;AAAqC,OAAhG;;AACAA,oBAAc,CAAC35B,IAAf,GAAsB,gEAAyB;AAAE5C,YAAI,EAAEu8B,cAAR;AAAwBt8B,iBAAS,EAAE,CAAC,CAAC,iBAAD,CAAD;AAAnC,OAAzB,CAAtB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOkC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBo6B,cAAzB,EAAyC,CAAC;AACpGv8B,cAAI,EAAE,uDAD8F;AAEpGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE;AADX,WAAD;AAF8F,SAAD,CAAzC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMq6B,S;;;;AAENA,eAAS,CAAC78B,IAAV,GAAiB,SAAS88B,iBAAT,CAA2B58B,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAI28B,SAAV,GAAP;AAAgC,OAAjF;;AACAA,eAAS,CAAC75B,IAAV,GAAiB,gEAAyB;AAAE5C,YAAI,EAAEy8B,SAAR;AAAmBx8B,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,OAAzB,CAAjB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOkC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBs6B,SAAzB,EAAoC,CAAC;AAC/Fz8B,cAAI,EAAE,uDADyF;AAE/FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE;AADX,WAAD;AAFyF,SAAD,CAApC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACMu6B,S;;;;AAENA,eAAS,CAAC/8B,IAAV,GAAiB,SAASg9B,iBAAT,CAA2B98B,CAA3B,EAA8B;AAAE,eAAO,KAAKA,CAAC,IAAI68B,SAAV,GAAP;AAAgC,OAAjF;;AACAA,eAAS,CAAC/5B,IAAV,GAAiB,gEAAyB;AAAE5C,YAAI,EAAE28B,SAAR;AAAmB18B,iBAAS,EAAE,CAAC,CAAC,EAAD,EAAK,WAAL,EAAkB,EAAlB,CAAD;AAA9B,OAAzB,CAAjB;;AACA,OAAC,YAAY;AAAE,SAAC,OAAOkC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBw6B,SAAzB,EAAoC,CAAC;AAC/F38B,cAAI,EAAE,uDADyF;AAE/FgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE;AADX,WAAD;AAFyF,SAAD,CAApC,EAK1D,IAL0D,EAKpD,IALoD,CAAnD;AAKO,OALtB;AAOA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAIy6B,cAAc,GAAG,CAArB;AACA;;AACA,UAAMC,kBAAkB,GAAG,IAA3B;AACA;;AACA,UAAMC,iBAAiB,GAAG,CAA1B;AACA;AACA;AACA;AACA;;UACMC,gB;AACF;AACJ;AACA;AACI,gCAAYv/B,WAAZ,EAAyB;AAAA;;AACrB,aAAKA,WAAL,GAAmBA,WAAnB;AACH,O;;AAEL,UAAI,KAAJ,EAAW,CAGV;AACD;AACA;AACA;AACA;AACA;;;AACA,UAAMw/B,sBAAsB,GAAG,0EAAWD,gBAAX,EAA6B,SAA7B,CAA/B;AACA;AACA;AACA;AACA;AACA;;;AACA,eAASE,0BAAT,GAAsC,CAAG;;AACzC,UAAI,KAAJ,EAAW,CAWV;AACD;AACA;AACA;AACA;AACA;;;AACA,UAAMC,8BAA8B,GAAG,IAAI,4DAAJ,CAAmB,gCAAnB,CAAvC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,cAAc,GAAG,IAAI,4DAAJ,CAAmB,cAAnB,CAAvB;AACA;AACA;AACA;;UACMC,Y;;;;;AACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACI,8BAAY5/B,WAAZ,EAAyBD,kBAAzB,EAA6C8/B,YAA7C,EAA2Dr5B,IAA3D,EAAiEs5B,SAAjE,EAA4EC,SAA5E,EAAuFjrB,OAAvF,EAAgGygB,cAAhG,EAAgH;AAAA;;AAAA;;AAC5G,wCAAMv1B,WAAN;AACA,kBAAKA,WAAL,GAAmBA,WAAnB;AACA,kBAAKD,kBAAL,GAA0BA,kBAA1B;AACA,kBAAKyG,IAAL,GAAYA,IAAZ;AACA,kBAAKs5B,SAAL,GAAiBA,SAAjB;AACA,kBAAKC,SAAL,GAAiBA,SAAjB;AACA,kBAAKjrB,OAAL,GAAeA,OAAf;AACA;AACR;AACA;AACA;;AACQ,kBAAKkrB,uCAAL,GAA+C,KAA/C;AACA;AACR;AACA;;AACQ,kBAAKC,oCAAL,GAA4C,KAA5C;AACA,kBAAKlmB,UAAL,GAAkB,IAAI,4CAAJ,EAAlB;AACA;AACR;AACA;;AACQ,kBAAKmmB,kBAAL,GAA0B,KAA1B;AACA;AACR;AACA;;AACQ,kBAAK7C,wBAAL,GAAgC,EAAhC;AACA,kBAAK8C,UAAL,GAAkB,EAAlB,CA1B4G,CA2B5G;;AACA,kBAAK3C,YAAL,sBAAgC4B,cAAc,EAA9C,EA5B4G,CA6B5G;;AACA,kBAAKrI,QAAL,kCAAwCqI,cAAc,EAAtD;AACA,kBAAKgB,aAAL,GAAqBP,YAAY,GAAGA,YAAH,GAAkB,EAAnD;AACA,kBAAKx0B,UAAL,GAAkB,QAAKg1B,0BAAL,EAAlB;AACA,kBAAKC,kBAAL,GAA0B/K,cAAc,KAAK,gBAA7C,CAjC4G,CAkC5G;;AACA,kBAAKsH,UAAL,GAAmBiD,SAAS,IAAIA,SAAS,CAACjD,UAAxB,GAAsCiD,SAAS,CAACjD,UAAhD,GAA6D,QAA/E;AACA,kBAAK0D,mBAAL,GAA4BT,SAAS,IAAIA,SAAS,CAAC/C,kBAAV,IAAgC,IAA9C,GACvB+C,SAAS,CAAC/C,kBADa,GACQ,KADnC;AApC4G;AAsC/G;AACD;AACJ;AACA;AACA;;;;;eACI,eAAiB;AAAE,mBAAO,KAAKyD,WAAZ;AAA0B;AAC7C;AACJ;AACA;AACA;;eACI,aAAe5/B,KAAf,EAAsB;AAClB;AACA,gBAAM6/B,QAAQ,GAAG,KAAKD,WAAtB;AACA,iBAAKA,WAAL,GAAmB5/B,KAAK,IAAK,KAAKk/B,SAAL,IAAkB,KAAKA,SAAL,CAAejD,UAA3C,IAA0D,QAA7E;;AACA,gBAAI,KAAK2D,WAAL,KAAqB,SAArB,IAAkCC,QAAQ,KAAK7/B,KAAnD,EAA0D;AACtD,mBAAKq/B,oCAAL,GAA4C,IAA5C;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;eACI,eAAyB;AAAE,mBAAO,KAAKM,mBAAZ;AAAkC;AAC7D;AACJ;AACA;AACA;;eACI,aAAuB3/B,KAAvB,EAA8B;AAC1B,iBAAK2/B,mBAAL,GAA2B,oFAAsB3/B,KAAtB,CAA3B;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAyB;AACrB,mBAAO,KAAKyK,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAK60B,kBAA7C;AACH;AACD;AACJ;AACA;AACA;;;;eACI,eAAqB;AAAE,mBAAO,KAAK70B,UAAL,KAAoB,OAA3B;AAAqC;AAC5D;AACJ;AACA;AACA;;;;eACI,eAAgB;AAAE,mBAAO,KAAK80B,UAAZ;AAAyB;AAC3C;AACJ;AACA;AACA;;eACI,aAAcv/B,KAAd,EAAqB;AACjB,iBAAKu/B,UAAL,GAAkBv/B,KAAlB;;AACA,iBAAK8/B,aAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACI,eAAiB;AACb,mBAAO,KAAK7D,UAAL,KAAoB,QAApB,IAAgC,KAAK9zB,WAAL,KAAqB,OAArD,GAA+D,MAA/D,GAAwE,KAAKA,WAApF;AACH;AACD;AACJ;AACA;AACA;;eACI,aAAenI,KAAf,EAAsB;AAClB,gBAAIA,KAAK,KAAK,KAAKmI,WAAnB,EAAgC;AAC5B,mBAAKA,WAAL,GAAmBnI,KAAK,IAAI,KAAKy/B,0BAAL,EAA5B;;AACA,mBAAKtgC,kBAAL,CAAwBkC,YAAxB;AACH;AACJ;AACD;AACJ;AACA;;;;eACI,eAAe;AACX;AACA;AACA,mBAAO,KAAK0+B,yBAAL,IAAkC,KAAKC,iBAAvC,IAA4D,KAAKC,cAAxE;AACH;AACD;AACJ;AACA;AACA;;eACI,aAAajgC,KAAb,EAAoB;AAChB,iBAAK+/B,yBAAL,GAAiC//B,KAAjC;AACH;AACD;AACJ;AACA;;;;eACI,eAAkB;AACd,mBAAO,KAAKkgC,oBAAL,IAA6B,KAAKC,iBAAzC;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,qCAA4B;AACxB,mBAAO,KAAKC,uBAAL,IAAgC,KAAKhhC,WAA5C;AACH;AACD;AACJ;AACA;;;;iBACI,8BAAqB;AAAA;;AACjB,iBAAKihC,qBAAL;AACA;;;AACA,gBAAMrb,OAAO,GAAG,KAAKtZ,QAArB;;AACA,gBAAIsZ,OAAO,CAAC/L,WAAZ,EAAyB;AACrB,mBAAK7Z,WAAL,CAAiBoB,aAAjB,CAA+BJ,SAA/B,CAAyCoV,GAAzC,+BAAoEwP,OAAO,CAAC/L,WAA5E;AACH,aANgB,CAOjB;;;AACA+L,mBAAO,CAAC1K,YAAR,CAAqBlT,IAArB,CAA0B;AAAW;AAAkB,gBAA7B,CAA1B,EAAgEvG,SAAhE;AAA2E;AACnF;AACA;AACQ,wBAAM;AACF,qBAAI,CAACy/B,qBAAL;;AACA,qBAAI,CAACC,mBAAL;;AACA,qBAAI,CAACphC,kBAAL,CAAwBkC,YAAxB;AACH,aAPD,EARiB,CAgBjB;;AACA,gBAAI2jB,OAAO,CAACpM,SAAR,IAAqBoM,OAAO,CAACpM,SAAR,CAAkB4nB,YAA3C,EAAyD;AACrDxb,qBAAO,CAACpM,SAAR,CAAkB4nB,YAAlB,CACKp5B,IADL,CACU,iEAAU,KAAK+R,UAAf,CADV,EAEKtY,SAFL;AAEgB;AAC5B;AACA;AACY;AAAA,uBAAM,OAAI,CAAC1B,kBAAL,CAAwBkC,YAAxB,EAAN;AAAA,eALA;AAMH,aAxBgB,CAyBjB;AACA;AACA;;;AACA,iBAAK6S,OAAL,CAAa1M,iBAAb;AAAgC;AACxC;AACA;AACQ,wBAAM;AACF,qBAAI,CAAC0M,OAAL,CAAahN,QAAb,CAAsBC,YAAtB,GAAqCC,IAArC,CAA0C,iEAAU,OAAI,CAAC+R,UAAf,CAA1C,EAAsEtY,SAAtE;AAAiF;AAC7F;AACA;AACY,0BAAM;AACF,oBAAI,OAAI,CAACw+B,oCAAT,EAA+C;AAC3C,yBAAI,CAACvD,gBAAL;AACH;AACJ,eAPD;AAQH,aAZD,EA5BiB,CAyCjB;;;AACA,+DAAM,KAAK2E,eAAL,CAAqB/4B,OAA3B,EAAoC,KAAKg5B,eAAL,CAAqBh5B,OAAzD,EAAkE7G,SAAlE;AAA6E;AACrF;AACA;AACQ,wBAAM;AACF,qBAAI,CAACw+B,oCAAL,GAA4C,IAA5C;;AACA,qBAAI,CAAClgC,kBAAL,CAAwBkC,YAAxB;AACH,aAND,EA1CiB,CAiDjB;;AACA,iBAAKs/B,aAAL,CAAmBj5B,OAAnB,CAA2BN,IAA3B,CAAgC,iEAAU,IAAV,CAAhC,EAAiDvG,SAAjD;AAA4D;AACpE;AACA;AACQ,wBAAM;AACF,qBAAI,CAACi/B,aAAL;;AACA,qBAAI,CAAC3gC,kBAAL,CAAwBkC,YAAxB;AACH,aAND,EAlDiB,CAyDjB;;;AACA,iBAAKu/B,cAAL,CAAoBl5B,OAApB,CAA4BN,IAA5B,CAAiC,iEAAU,IAAV,CAAjC,EAAkDvG,SAAlD;AAA6D;AACrE;AACA;AACQ,wBAAM;AACF,qBAAI,CAAC0/B,mBAAL;;AACA,qBAAI,CAACphC,kBAAL,CAAwBkC,YAAxB;AACH,aAND;;AAOA,gBAAI,KAAKuE,IAAT,EAAe;AACX,mBAAKA,IAAL,CAAUhF,MAAV,CAAiBwG,IAAjB,CAAsB,iEAAU,KAAK+R,UAAf,CAAtB,EAAkDtY,SAAlD;AAA6D;AACzE;AACA;AACY,0BAAM;AACF,oBAAI,OAAOggC,qBAAP,KAAiC,UAArC,EAAiD;AAC7C,yBAAI,CAAC3sB,OAAL,CAAa1M,iBAAb;AAAgC;AACpD;AACA;AACoB,8BAAM;AACFq5B,yCAAqB;AAAE;AAC/C;AACA;AACwB;AAAA,6BAAM,OAAI,CAAC/E,gBAAL,EAAN;AAAA,qBAHqB,CAArB;AAIH,mBARD;AASH,iBAVD,MAWK;AACD,yBAAI,CAACA,gBAAL;AACH;AACJ,eAlBD;AAmBH;AACJ;AACD;AACJ;AACA;;;;iBACI,iCAAwB;AACpB,iBAAKuE,qBAAL;;AACA,gBAAI,KAAKjB,uCAAT,EAAkD;AAC9C,mBAAKtD,gBAAL;AACH;AACJ;AACD;AACJ;AACA;;;;iBACI,2BAAkB;AACd;AACA,iBAAKW,wBAAL,GAAgC,OAAhC;;AACA,iBAAKt9B,kBAAL,CAAwBqJ,aAAxB;AACH;AACD;AACJ;AACA;;;;iBACI,uBAAc;AACV,iBAAK2Q,UAAL,CAAgB3M,IAAhB;;AACA,iBAAK2M,UAAL,CAAgBlR,QAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,wBAAe64B,IAAf,EAAqB;AACjB;AACA,gBAAMloB,SAAS,GAAG,KAAKlN,QAAL,GAAgB,KAAKA,QAAL,CAAckN,SAA9B,GAA0C,IAA5D;AACA,mBAAOA,SAAS,IAAIA,SAAS,CAACkoB,IAAD,CAA7B;AACH;AACD;AACJ;AACA;;;;iBACI,2BAAkB;AACd,mBAAO,CAAC,EAAE,KAAKp1B,QAAL,IAAiB,KAAKA,QAAL,CAAc6O,WAA/B,IAA8C,KAAKwmB,iBAArD,CAAR;AACH;AACD;AACJ;AACA;;;;iBACI,qBAAY;AACR,mBAAO,CAAC,CAAC,KAAKC,WAAd;AACH;AACD;AACJ;AACA;;;;iBACI,6BAAoB;AAChB,mBAAO,KAAKC,cAAL,KAAwB,KAAKv1B,QAAL,CAAcw1B,gBAAd,IAAkC,KAAKlF,kBAA/D,CAAP;AACH;AACD;AACJ;AACA;;;;iBACI,mCAA0B;AACtB;AACA,mBAAO,KAAKC,UAAL,KAAoB,QAApB,IAAgC,CAAC,KAAKC,SAAL,EAAjC,IACH,KAAKA,SAAL,MAAoB,CAAC,KAAKiF,iBAAL,EADzB;AAEH;AACD;AACJ;AACA;;;;iBACI,6BAAoB;AAChB;AACA,mBAAO,KAAKjF,SAAL,MAAoB,KAAKD,UAAL,KAAoB,QAApB,IAAgC,KAAKmF,eAAL,EAA3D;AACH;AACD;AACJ;AACA;AACA;;;;iBACI,iCAAwB;AACpB,mBAAQ,KAAKR,cAAL,IAAuB,KAAKA,cAAL,CAAoB3gC,MAApB,GAA6B,CAApD,IACJ,KAAKyL,QAAL,CAAckT,UADX,GACyB,OADzB,GACmC,MAD1C;AAEH;AACD;AACJ;AACA;AACA;;;;iBACI,gCAAuB;AAAA;;AACnB,gBAAI,KAAKyiB,iBAAL,MAA4B,KAAKJ,cAArC,EAAqD;AACjD;AACA;AACA,kBAAI,KAAKvB,kBAAL,IAA2B,KAAK4B,MAApC,EAA4C;AACxC,qBAAKhC,kBAAL,GAA0B,IAA1B;AACA,uEAAU,KAAKgC,MAAL,CAAY9gC,aAAtB,EAAqC,eAArC,EAAsD4G,IAAtD,CAA2D,4DAAK,CAAL,CAA3D,EAAoEvG,SAApE;AAA+E;AAC/F;AACA;AACgB,4BAAM;AACF,yBAAI,CAACy+B,kBAAL,GAA0B,KAA1B;AACH,iBALD;AAMH;;AACD,mBAAK70B,UAAL,GAAkB,QAAlB;;AACA,mBAAKtL,kBAAL,CAAwBkC,YAAxB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,iCAAwB;AACpB,gBAAI,KAAKqK,QAAL,CAAc6O,WAAd,IAA6B,KAAKwmB,iBAAtC,EAAyD;AACrD,oBAAMtD,uCAAuC,EAA7C;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,yBAAgB;AACZ,iBAAK8D,cAAL;;AACA,iBAAKhB,mBAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,0BAAiB;AAAA;;AACb,gBAAI,KAAKI,aAAT,EAAwB;AACpB;AACA,kBAAIa,SAAJ;AACA;;AACA,kBAAIC,OAAJ;;AACA,mBAAKd,aAAL,CAAmB50B,OAAnB;AAA4B;AACxC;AACA;AACA;AACY,wBAAC21B,IAAD,EAAU;AACN,oBAAIA,IAAI,CAAC/D,KAAL,KAAe,OAAnB,EAA4B;AACxB,sBAAI6D,SAAS,IAAI,OAAI,CAAC3E,SAAtB,EAAiC;AAC7B,0BAAMa,kCAAkC,CAAC,OAAD,CAAxC;AACH;;AACD8D,2BAAS,GAAGE,IAAZ;AACH,iBALD,MAMK,IAAIA,IAAI,CAAC/D,KAAL,KAAe,KAAnB,EAA0B;AAC3B,sBAAI8D,OAAJ,EAAa;AACT,0BAAM/D,kCAAkC,CAAC,KAAD,CAAxC;AACH;;AACD+D,yBAAO,GAAGC,IAAV;AACH;AACJ,eAjBD;AAkBH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,sCAA6B;AACzB,mBAAQ,KAAKxC,SAAL,IAAkB,KAAKA,SAAL,CAAez0B,UAAlC,IAAiD,KAAK+0B,aAAL,SAAjD,IAA6E,MAApF;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,+BAAsB;AAClB,gBAAI,KAAK9zB,QAAT,EAAmB;AACf;AACA,kBAAI4P,GAAG,GAAG,EAAV;;AACA,kBAAI,KAAKqmB,qBAAL,OAAiC,MAArC,EAA6C;AACzC;AACA,oBAAMH,SAAS,GAAG,KAAKb,aAAL,GACd,KAAKA,aAAL,CAAmBlkB,IAAnB;AAAyB;AAC7C;AACA;AACA;AACoB,0BAAAilB,IAAI;AAAA,yBAAIA,IAAI,CAAC/D,KAAL,KAAe,OAAnB;AAAA,iBAJJ,CADc,GAKqB,IALvC;AAMA;;AACA,oBAAM8D,OAAO,GAAG,KAAKd,aAAL,GACZ,KAAKA,aAAL,CAAmBlkB,IAAnB;AAAyB;AAC7C;AACA;AACA;AACoB,0BAAAilB,IAAI;AAAA,yBAAIA,IAAI,CAAC/D,KAAL,KAAe,KAAnB;AAAA,iBAJJ,CADY,GAKqB,IALrC;;AAMA,oBAAI6D,SAAJ,EAAe;AACXlmB,qBAAG,CAACjI,IAAJ,CAASmuB,SAAS,CAACtjC,EAAnB;AACH,iBAFD,MAGK,IAAI,KAAKqhC,UAAT,EAAqB;AACtBjkB,qBAAG,CAACjI,IAAJ,CAAS,KAAKupB,YAAd;AACH;;AACD,oBAAI6E,OAAJ,EAAa;AACTnmB,qBAAG,CAACjI,IAAJ,CAASouB,OAAO,CAACvjC,EAAjB;AACH;AACJ,eAxBD,MAyBK,IAAI,KAAK0iC,cAAT,EAAyB;AAC1BtlB,mBAAG,GAAG,KAAKslB,cAAL,CAAoB55B,GAApB;AAAyB;AAC/C;AACA;AACA;AACgB,0BAAA46B,KAAK;AAAA,yBAAIA,KAAK,CAAC1jC,EAAV;AAAA,iBAJC,CAAN;AAKH;;AACD,mBAAKwN,QAAL,CAAcm2B,iBAAd,CAAgCvmB,GAAhC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,iCAAwB;AACpB,gBAAI,CAAC,KAAK5P,QAAV,EAAoB;AAChB,oBAAMkyB,kCAAkC,EAAxC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,4BAAmB;AACf;AACA,gBAAMkE,OAAO,GAAG,KAAKR,MAAL,GAAc,KAAKA,MAAL,CAAY9gC,aAA1B,GAA0C,IAA1D;;AACA,gBAAI,KAAKy7B,UAAL,KAAoB,SAApB,IAAiC,CAAC6F,OAAlC,IAA6C,CAACA,OAAO,CAACC,QAAR,CAAiB9hC,MAA/D,IACA,CAAC6hC,OAAO,CAAC5rB,WAAR,CAAoB5V,IAApB,EADL,EACiC;AAC7B;AACH;;AACD,gBAAI,CAAC,KAAK6+B,SAAL,CAAezO,SAApB,EAA+B;AAC3B;AACA;AACH,aAVc,CAWf;AACA;;;AACA,gBAAI,CAAC,KAAKsR,gBAAL,EAAL,EAA8B;AAC1B,mBAAK5C,uCAAL,GAA+C,IAA/C;AACA;AACH;AACD;;;AACA,gBAAI6C,UAAU,GAAG,CAAjB;AACA;;AACA,gBAAIC,QAAQ,GAAG,CAAf;AACA;;AACA,gBAAMC,SAAS,GAAG,KAAK/B,uBAAL,CAA6B5/B,aAA/C;AACA;;AACA,gBAAM4hC,QAAQ,GAAGD,SAAS,CAACE,gBAAV,CAA2B,+BAA3B,CAAjB;AACA;;AACA,gBAAMC,MAAM,GAAGH,SAAS,CAACE,gBAAV,CAA2B,6BAA3B,CAAf;;AACA,gBAAI,KAAKf,MAAL,IAAe,KAAKA,MAAL,CAAY9gC,aAAZ,CAA0BuhC,QAA1B,CAAmC9hC,MAAtD,EAA8D;AAC1D;AACA,kBAAM6wB,aAAa,GAAGqR,SAAS,CAAC/zB,qBAAV,EAAtB,CAF0D,CAG1D;AACA;AACA;AACA;AACA;AACA;;AACA,kBAAI0iB,aAAa,CAACnkB,KAAd,KAAwB,CAAxB,IAA6BmkB,aAAa,CAACO,MAAd,KAAyB,CAA1D,EAA6D;AACzD,qBAAKgO,oCAAL,GAA4C,IAA5C;AACA,qBAAKD,uCAAL,GAA+C,KAA/C;AACA;AACH;AACD;;;AACA,kBAAMmD,cAAc,GAAG,KAAKC,YAAL,CAAkB1R,aAAlB,CAAvB;AACA;;;AACA,kBAAM2R,UAAU,GAAG,KAAKD,YAAL,CAAkBV,OAAO,CAACC,QAAR,CAAiB,CAAjB,EAAoB3zB,qBAApB,EAAlB,CAAnB;AACA;;;AACA,kBAAIs0B,UAAU,GAAG,CAAjB;;AAnB0D,0DAoBtCZ,OAAO,CAACC,QApB8B;AAAA;;AAAA;AAoB1D,uEAAsC;AAAA,sBAA3BY,KAA2B;AAClCD,4BAAU,IAAIC,KAAK,CAACC,WAApB;AACH;AAtByD;AAAA;AAAA;AAAA;AAAA;;AAuB1DX,wBAAU,GAAGjmB,IAAI,CAACiY,GAAL,CAASwO,UAAU,GAAGF,cAAtB,IAAwC7D,iBAArD;AACAwD,sBAAQ,GAAGQ,UAAU,GAAG,CAAb,GAAiBA,UAAU,GAAGjE,kBAAb,GAAkCC,iBAAiB,GAAG,CAAvE,GAA2E,CAAtF;AACH;;AACD,iBAAK,IAAI3X,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqb,QAAQ,CAACniC,MAA7B,EAAqC8mB,CAAC,EAAtC,EAA0C;AACtCqb,sBAAQ,CAACrb,CAAD,CAAR,CAAYe,KAAZ,CAAkBnb,KAAlB,aAA6Bs1B,UAA7B;AACH;;AACD,iBAAK,IAAIlb,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGub,MAAM,CAACriC,MAA3B,EAAmC8mB,EAAC,EAApC,EAAwC;AACpCub,oBAAM,CAACvb,EAAD,CAAN,CAAUe,KAAV,CAAgBnb,KAAhB,aAA2Bu1B,QAA3B;AACH;;AACD,iBAAK7C,oCAAL,GACI,KAAKD,uCAAL,GAA+C,KADnD;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;iBACI,sBAAarL,IAAb,EAAmB;AACf,mBAAQ,KAAKnuB,IAAL,IAAa,KAAKA,IAAL,CAAU5F,KAAV,KAAoB,KAAlC,GAA2C+zB,IAAI,CAACG,KAAhD,GAAwDH,IAAI,CAAC5C,IAApE;AACH;AACD;AACJ;AACA;AACA;AACA;;;;iBACI,4BAAmB;AACf;AACA,gBAAM7iB,OAAO,GAAG,KAAKlP,WAAL,CAAiBoB,aAAjC;;AACA,gBAAI8N,OAAO,CAACu0B,WAAZ,EAAyB;AACrB;AACA,kBAAMC,QAAQ,GAAGx0B,OAAO,CAACu0B,WAAR,EAAjB,CAFqB,CAGrB;AACA;;AACA,qBAAOC,QAAQ,IAAIA,QAAQ,KAAKx0B,OAAhC;AACH,aATc,CAUf;AACA;;;AACA,mBAAO;AAAC;AAAkBgH,sBAAQ,CAACytB,eAA5B,CAA8C75B,QAA9C,CAAuDoF,OAAvD;AAAP;AACH;;;;QAtiBsBswB,sB;;AAwiB3BI,kBAAY,CAACz9B,IAAb,GAAoB,SAASyhC,oBAAT,CAA8BvhC,CAA9B,EAAiC;AAAE,eAAO,KAAKA,CAAC,IAAIu9B,YAAV,EAAwB,gEAAyB,wDAAzB,CAAxB,EAAqE,gEAAyB,+DAAzB,CAArE,EAAyH,gEAAyB,+EAAzB,EAAmD,CAAnD,CAAzH,EAAgL,gEAAyB,gEAAzB,EAAgD,CAAhD,CAAhL,EAAoO,gEAAyBF,8BAAzB,EAAyD,CAAzD,CAApO,EAAiS,gEAAyB,8DAAzB,CAAjS,EAA4U,gEAAyB,oDAAzB,CAA5U,EAAqX,gEAAyB,2FAAzB,EAAgD,CAAhD,CAArX,CAAP;AAAkb,OAAze;;AACAE,kBAAY,CAACt9B,IAAb,GAAoB,gEAAyB;AAAEC,YAAI,EAAEq9B,YAAR;AAAsBp9B,iBAAS,EAAE,CAAC,CAAC,gBAAD,CAAD,CAAjC;AAAuDC,sBAAc,EAAE,SAASohC,2BAAT,CAAqCllC,EAArC,EAAyCC,GAAzC,EAA8C+D,QAA9C,EAAwD;AAAE,cAAIhE,EAAE,GAAG,CAAT,EAAY;AAClL,yEAAsBgE,QAAtB,EAAgCw7B,mBAAhC,EAAqD,CAArD;;AACA,yEAAsBx7B,QAAtB,EAAgCw7B,mBAAhC,EAAqD,CAArD;;AACA,yEAAsBx7B,QAAtB,EAAgCi8B,QAAhC,EAA0C,CAA1C;;AACA,yEAAsBj8B,QAAtB,EAAgCi8B,QAAhC,EAA0C,CAA1C;;AACA,yEAAsBj8B,QAAtB,EAAgCm8B,cAAhC,EAAgD,CAAhD;;AACA,yEAAsBn8B,QAAtB,EAAgCm7B,QAAhC,EAA0C,CAA1C;;AACA,yEAAsBn7B,QAAtB,EAAgC87B,OAAhC,EAAyC,CAAzC;;AACA,yEAAsB97B,QAAtB,EAAgCq8B,SAAhC,EAA2C,CAA3C;;AACA,yEAAsBr8B,QAAtB,EAAgCu8B,SAAhC,EAA2C,CAA3C;AACH;;AAAC,cAAIvgC,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACgiC,iBAAJ,GAAwBh+B,EAAE,CAACK,KAAhF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACiiC,cAAJ,GAAqBj+B,EAAE,CAACK,KAA7E;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACkiC,oBAAJ,GAA2Bl+B,EAAE,CAACK,KAAnF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACmiC,iBAAJ,GAAwBn+B,EAAE,CAACK,KAAhF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC+iC,iBAAJ,GAAwB/+B,EAAE,CAACK,KAAhF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC4iC,cAAJ,GAAqB5+B,EAA1E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC2iC,aAAJ,GAAoB3+B,EAAzE;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACyiC,eAAJ,GAAsBz+B,EAA3E;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAC0iC,eAAJ,GAAsB1+B,EAA3E;AACH;AAAE,SArBsC;AAqBpCE,iBAAS,EAAE,SAASghC,kBAAT,CAA4BnlC,EAA5B,EAAgCC,GAAhC,EAAqC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAC/D,sEAAmBF,GAAnB,EAAwB,CAAxB;;AACA,sEAAmBO,GAAnB,EAAwB,CAAxB;;AACA,sEAAmB2iB,GAAnB,EAAwB,CAAxB;;AACA,sEAAmBoa,GAAnB,EAAwB,CAAxB;AACH;;AAAC,cAAIp9B,EAAE,GAAG,CAAT,EAAY;AACV,gBAAIiE,EAAJ;;AACA,yEAAsBA,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACmlC,YAAJ,GAAmBnhC,EAAE,CAACK,KAA3E;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACoiC,uBAAJ,GAA8Bp+B,EAAE,CAACK,KAAtF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAAColC,kBAAJ,GAAyBphC,EAAE,CAACK,KAAjF;AACA,yEAAsBL,EAAE,GAAG,2DAA3B,MAAqDhE,GAAG,CAACsjC,MAAJ,GAAat/B,EAAE,CAACK,KAArE;AACH;AAAE,SAhCsC;AAgCpCC,iBAAS,EAAE,CAAC,CAAD,EAAI,gBAAJ,CAhCyB;AAgCFqM,gBAAQ,EAAE,EAhCR;AAgCYC,oBAAY,EAAE,SAASy0B,yBAAT,CAAmCtlC,EAAnC,EAAuCC,GAAvC,EAA4C;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AACzH,sEAAmB,oCAAnB,EAAyDC,GAAG,CAACi+B,UAAJ,IAAkB,UAA3E,EAAuF,gCAAvF,EAAyHj+B,GAAG,CAACi+B,UAAJ,IAAkB,MAA3I,EAAmJ,mCAAnJ,EAAwLj+B,GAAG,CAACi+B,UAAJ,IAAkB,SAA1M,EAAqN,kCAArN,EAAyPj+B,GAAG,CAACi+B,UAAJ,IAAkB,QAA3Q,EAAqR,wBAArR,EAA+Sj+B,GAAG,CAAC0N,QAAJ,CAAakT,UAA5T,EAAwU,0BAAxU,EAAoW5gB,GAAG,CAACijC,cAAxW,EAAwX,6BAAxX,EAAuZjjC,GAAG,CAACmjC,iBAAJ,EAAvZ,EAAgb,0BAAhb,EAA4cnjC,GAAG,CAACqjC,iBAAJ,EAA5c,EAAqe,iCAAre,EAAwgBrjC,GAAG,CAACslC,uBAAJ,EAAxgB,EAAuiB,yBAAviB,EAAkkBtlC,GAAG,CAAC0N,QAAJ,CAAahC,QAA/kB,EAAylB,2BAAzlB,EAAsnB1L,GAAG,CAAC0N,QAAJ,CAAa63B,UAAnoB,EAA+oB,aAA/oB,EAA8pBvlC,GAAG,CAAC0N,QAAJ,CAAa+O,OAA3qB,EAAorB,YAAprB,EAAksBzc,GAAG,CAAC6Z,KAAJ,IAAa,QAA/sB,EAAytB,UAAztB,EAAquB7Z,GAAG,CAAC6Z,KAAJ,IAAa,MAAlvB,EAA0vB,cAA1vB,EAA0wB7Z,GAAG,CAACwlC,cAAJ,CAAmB,WAAnB,CAA1wB,EAA2yB,YAA3yB,EAAyzBxlC,GAAG,CAACwlC,cAAJ,CAAmB,SAAnB,CAAzzB,EAAw1B,aAAx1B,EAAu2BxlC,GAAG,CAACwlC,cAAJ,CAAmB,UAAnB,CAAv2B,EAAu4B,UAAv4B,EAAm5BxlC,GAAG,CAACwlC,cAAJ,CAAmB,OAAnB,CAAn5B,EAAg7B,UAAh7B,EAA47BxlC,GAAG,CAACwlC,cAAJ,CAAmB,OAAnB,CAA57B,EAAy9B,YAAz9B,EAAu+BxlC,GAAG,CAACwlC,cAAJ,CAAmB,SAAnB,CAAv+B,EAAsgC,YAAtgC,EAAohCxlC,GAAG,CAACwlC,cAAJ,CAAmB,SAAnB,CAAphC,EAAmjC,yBAAnjC,EAA8kC,CAACxlC,GAAG,CAAC0hC,kBAAnlC;AACH;AAAE,SAlCsC;AAkCpCn9B,cAAM,EAAE;AAAEsV,eAAK,EAAE,OAAT;AAAkBpN,oBAAU,EAAE,YAA9B;AAA4CwxB,oBAAU,EAAE,YAAxD;AAAsEE,4BAAkB,EAAE,oBAA1F;AAAgHU,mBAAS,EAAE;AAA3H,SAlC4B;AAkC8Gl6B,gBAAQ,EAAE,CAAC,cAAD,CAlCxH;AAkC0IC,gBAAQ,EAAE,CAAC,iEAA0B,CAChN;AAAEC,iBAAO,EAAEk8B,cAAX;AAA2Bj8B,qBAAW,EAAEk8B;AAAxC,SADgN,CAA1B,CAAD,EAErL,wEAFqL,CAlCpJ;AAoCGj8B,0BAAkB,EAAEk6B,GApCvB;AAoC4Bj6B,aAAK,EAAE,EApCnC;AAoCuCC,YAAI,EAAE,CApC7C;AAoCgDC,cAAM,EAAE,CAAC,CAAC,CAAD,EAAI,wBAAJ,CAAD,EAAgC,CAAC,CAAD,EAAI,qBAAJ,EAA2B,CAA3B,EAA8B,OAA9B,CAAhC,EAAwE,CAAC,qBAAD,EAAwB,EAAxB,CAAxE,EAAqG,CAAC,CAAD,EAAI,MAAJ,CAArG,EAAkH,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAAlH,EAAiK,CAAC,CAAD,EAAI,sBAAJ,CAAjK,EAA8L,CAAC,gBAAD,EAAmB,EAAnB,CAA9L,EAAsN,CAAC,CAAD,EAAI,8BAAJ,CAAtN,EAA2P,CAAC,OAAD,EAAU,sBAAV,EAAkC,CAAlC,EAAqC,2BAArC,EAAkE,IAAlE,EAAwE,WAAxE,EAAqF,sBAArF,EAA6G,YAA7G,EAA2H,UAA3H,EAAuI,UAAvI,EAAmJ,mBAAnJ,EAAwK,CAAxK,EAA2K,MAA3K,CAA3P,EAA+a,CAAC,OAAD,EAAU,uBAAV,EAAmC,CAAnC,EAAsC,MAAtC,CAA/a,EAA8d,CAAC,OAAD,EAAU,0BAAV,EAAsC,CAAtC,EAAyC,MAAzC,CAA9d,EAAghB,CAAC,CAAD,EAAI,kCAAJ,EAAwC,CAAxC,EAA2C,UAA3C,CAAhhB,EAAwkB,CAAC,CAAD,EAAI,cAAJ,CAAxkB,EAA6lB,CAAC,OAAD,EAAU,6BAAV,EAAyC,CAAzC,EAA4C,cAA5C,CAA7lB,EAA0pB,CAAC,CAAD,EAAI,wBAAJ,CAA1pB,EAAyrB,CAAC,CAAD,EAAI,8BAAJ,CAAzrB,EAA8tB,CAAC,CAAD,EAAI,4BAAJ,CAA9tB,EAAiwB,CAAC,CAAD,EAAI,4BAAJ,CAAjwB,EAAoyB,CAAC,CAAD,EAAI,wBAAJ,EAA8B,8BAA9B,CAApyB,EAAm2B,CAAC,CAAD,EAAI,uBAAJ,CAAn2B,EAAi4B,CAAC,CAAD,EAAI,sBAAJ,EAA4B,CAA5B,EAA+B,2BAA/B,EAA4D,IAA5D,EAAkE,UAAlE,EAA8E,mBAA9E,CAAj4B,EAAq+B,CAAC,OAAD,EAAU,EAAV,CAAr+B,EAAo/B,CAAC,OAAD,EAAU,yDAAV,EAAqE,aAArE,EAAoF,MAApF,EAA4F,CAA5F,EAA+F,MAA/F,CAAp/B,EAA4lC,CAAC,aAAD,EAAgB,MAAhB,EAAwB,CAAxB,EAA2B,0BAA3B,EAAuD,gCAAvD,CAA5lC,EAAsrC,CAAC,CAAD,EAAI,uBAAJ,CAAtrC,EAAotC,CAAC,CAAD,EAAI,0BAAJ,CAAptC,EAAqvC,CAAC,WAAD,EAAc,EAAd,CAArvC,EAAwwC,CAAC,CAAD,EAAI,uBAAJ,CAAxwC,EAAsyC,CAAC,CAAD,EAAI,6BAAJ,CAAtyC,EAA00C,CAAC,OAAD,EAAU,UAAV,EAAsB,CAAtB,EAAyB,IAAzB,EAA+B,CAA/B,EAAkC,MAAlC,CAA10C,EAAq3C,CAAC,CAAD,EAAI,4BAAJ,CAAr3C,EAAw5C,CAAC,CAAD,EAAI,UAAJ,EAAgB,CAAhB,EAAmB,IAAnB,CAAx5C,CApCxD;AAoC2+Cd,gBAAQ,EAAE,SAASqhC,qBAAT,CAA+B1lC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,cAAID,EAAE,GAAG,CAAT,EAAY;AAChlD,0EAAuBi/B,GAAvB;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,qEAAkB,OAAlB,EAA2B,SAAS0G,0CAAT,CAAoDx0B,MAApD,EAA4D;AAAE,qBAAOlR,GAAG,CAAC0N,QAAJ,CAAai4B,gBAAb,IAAiC3lC,GAAG,CAAC0N,QAAJ,CAAai4B,gBAAb,CAA8Bz0B,MAA9B,CAAxC;AAAgF,aAAzK;;AACA,qEAAkB,CAAlB,EAAqBksB,oCAArB,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,cAAjE,EAAiF,CAAjF;;AACA,qEAAkB,CAAlB,EAAqBC,2BAArB,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,KAAxD,EAA+D,CAA/D;;AACA,yEAAsB,CAAtB,EAAyB,KAAzB,EAAgC,CAAhC,EAAmC,CAAnC;;AACA,uEAAoB,CAApB;;AACA,yEAAsB,CAAtB,EAAyB,MAAzB,EAAiC,CAAjC;;AACA,qEAAkB,CAAlB,EAAqBK,6BAArB,EAAoD,CAApD,EAAuD,EAAvD,EAA2D,OAA3D,EAAoE,CAApE;;AACA;;AACA;;AACA,qEAAkB,EAAlB,EAAsBU,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,CAAjE;;AACA;;AACA,qEAAkB,EAAlB,EAAsBC,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,yEAAsB,EAAtB,EAA0B,KAA1B,EAAiC,EAAjC;;AACA,qEAAkB,EAAlB,EAAsBE,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA,qEAAkB,EAAlB,EAAsBO,4BAAtB,EAAoD,CAApD,EAAuD,CAAvD,EAA0D,KAA1D,EAAiE,EAAjE;;AACA;;AACA;AACH;;AAAC,cAAI/+B,EAAE,GAAG,CAAT,EAAY;AACV,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BC,GAAG,CAACi+B,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0Bj+B,GAAG,CAACyiC,eAAJ,CAAoBxgC,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BjC,GAAG,CAACqjC,iBAAJ,EAA1B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BrjC,GAAG,CAAC0iC,eAAJ,CAAoBzgC,MAA9C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,MAAlB,EAA0BjC,GAAG,CAACi+B,UAAJ,IAAkB,SAA5C;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,UAAlB,EAA8Bj+B,GAAG,CAAC2jC,qBAAJ,EAA9B;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,OAAlC;;AACA,oEAAiB,CAAjB;;AACA,qEAAkB,cAAlB,EAAkC,MAAlC;AACH;AAAE,SA1EsC;AA0EpCv+B,kBAAU,EAAE,CAAC,oDAAD,EAAc,wDAAd,EAA+B,4DAA/B,EAAoD,wEAApD,CA1EwB;AA0EuDC,cAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa,CA1E/D;AA0E40cC,qBAAa,EAAE,CA1E31c;AA0E81ciQ,YAAI,EAAE;AAAE0d,mBAAS,EAAE,CAACoM,sBAAsB,CAACC,kBAAxB;AAAb,SA1Ep2c;AA0Eg6c/5B,uBAAe,EAAE;AA1Ej7c,OAAzB,CAApB;AA2EA;;AACAy7B,kBAAY,CAACx7B,cAAb,GAA8B;AAAA,eAAM,CAChC;AAAE7B,cAAI,EAAE;AAAR,SADgC,EAEhC;AAAEA,cAAI,EAAE;AAAR,SAFgC,EAGhC;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,+EAAD;AAAtB,WAArB;AAA/B,SAHgC,EAIhC;AAAEhC,cAAI,EAAE,gEAAR;AAAwB+B,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD;AAApC,SAJgC,EAKhC;AAAEA,cAAI,EAAE8B,SAAR;AAAmBC,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAACm7B,8BAAD;AAAtB,WAArB;AAA/B,SALgC,EAMhC;AAAEn9B,cAAI,EAAE;AAAR,SANgC,EAOhC;AAAEA,cAAI,EAAE;AAAR,SAPgC,EAQhC;AAAEA,cAAI,EAAEmW,MAAR;AAAgBpU,oBAAU,EAAE,CAAC;AAAE/B,gBAAI,EAAE;AAAR,WAAD,EAAqB;AAAEA,gBAAI,EAAE,oDAAR;AAAgBgC,gBAAI,EAAE,CAAC,2FAAD;AAAtB,WAArB;AAA5B,SARgC,CAAN;AAAA,OAA9B;;AAUAq7B,kBAAY,CAACp7B,cAAb,GAA8B;AAC1Bq4B,kBAAU,EAAE,CAAC;AAAEt6B,cAAI,EAAE;AAAR,SAAD,CADc;AAE1Bw6B,0BAAkB,EAAE,CAAC;AAAEx6B,cAAI,EAAE;AAAR,SAAD,CAFM;AAG1Bk7B,iBAAS,EAAE,CAAC;AAAEl7B,cAAI,EAAE;AAAR,SAAD,CAHe;AAI1B8I,kBAAU,EAAE,CAAC;AAAE9I,cAAI,EAAE;AAAR,SAAD,CAJc;AAK1BwhC,oBAAY,EAAE,CAAC;AAAExhC,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,WAAD;AAAzB,SAAD,CALY;AAM1By8B,+BAAuB,EAAE,CAAC;AAAEz+B,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,sBAAQ;AAAV,WAAxB;AAAzB,SAAD,CANC;AAO1By/B,0BAAkB,EAAE,CAAC;AAAEzhC,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,gBAAD;AAAzB,SAAD,CAPM;AAQ1B29B,cAAM,EAAE,CAAC;AAAE3/B,cAAI,EAAE,uDAAR;AAAmBgC,cAAI,EAAE,CAAC,OAAD;AAAzB,SAAD,CARkB;AAS1Bq8B,yBAAiB,EAAE,CAAC;AAAEr+B,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAAC45B,mBAAD;AAA5B,SAAD,CATO;AAU1B0C,sBAAc,EAAE,CAAC;AAAEt+B,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAAC45B,mBAAD,EAAsB;AAAE,sBAAQ;AAAV,WAAtB;AAA5B,SAAD,CAVU;AAW1B2C,4BAAoB,EAAE,CAAC;AAAEv+B,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAACq6B,QAAD;AAA5B,SAAD,CAXI;AAY1BmC,yBAAiB,EAAE,CAAC;AAAEx+B,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAACq6B,QAAD,EAAW;AAAE,sBAAQ;AAAV,WAAX;AAA5B,SAAD,CAZO;AAa1B+C,yBAAiB,EAAE,CAAC;AAAEp/B,cAAI,EAAE,0DAAR;AAAsBgC,cAAI,EAAE,CAACu6B,cAAD;AAA5B,SAAD,CAbO;AAc1B0C,sBAAc,EAAE,CAAC;AAAEj/B,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAACu5B,QAAD,EAAW;AAAEr5B,uBAAW,EAAE;AAAf,WAAX;AAA/B,SAAD,CAdU;AAe1B88B,qBAAa,EAAE,CAAC;AAAEh/B,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAACk6B,OAAD,EAAU;AAAEh6B,uBAAW,EAAE;AAAf,WAAV;AAA/B,SAAD,CAfW;AAgB1B48B,uBAAe,EAAE,CAAC;AAAE9+B,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAACy6B,SAAD,EAAY;AAAEv6B,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD,CAhBS;AAiB1B68B,uBAAe,EAAE,CAAC;AAAE/+B,cAAI,EAAE,6DAAR;AAAyBgC,cAAI,EAAE,CAAC26B,SAAD,EAAY;AAAEz6B,uBAAW,EAAE;AAAf,WAAZ;AAA/B,SAAD;AAjBS,OAA9B;;AAmBA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyBk7B,YAAzB,EAAuC,CAAC;AAClGr9B,cAAI,EAAE,uDAD4F;AAElGgC,cAAI,EAAE,CAAC;AACCI,oBAAQ,EAAE,gBADX;AAECpB,oBAAQ,EAAE,cAFX;AAGCP,oBAAQ,EAAE,u5HAHX;AAICwhC,sBAAU,EAAE,CAACvG,sBAAsB,CAACC,kBAAxB,CAJb;AAKCp5B,gBAAI,EAAE;AACF,uBAAS,gBADP;AAEF,4DAA8C,0BAF5C;AAGF,wDAA0C,sBAHxC;AAIF,2DAA6C,yBAJ3C;AAKF,0DAA4C,wBAL1C;AAMF,gDAAkC,qBANhC;AAOF,kDAAoC,gBAPlC;AAQF,qDAAuC,qBARrC;AASF,kDAAoC,qBATlC;AAUF,yDAA2C,2BAVzC;AAWF,iDAAmC,mBAXjC;AAYF,mDAAqC,qBAZnC;AAaF,qCAAuB,kBAbrB;AAcF,oCAAsB,mBAdpB;AAeF,kCAAoB,iBAflB;AAgBF,sCAAwB,6BAhBtB;AAiBF,oCAAsB,2BAjBpB;AAkBF,qCAAuB,4BAlBrB;AAmBF,kCAAoB,yBAnBlB;AAoBF,kCAAoB,yBApBlB;AAqBF,oCAAsB,2BArBpB;AAsBF,oCAAsB,2BAtBpB;AAuBF,iDAAmC;AAvBjC,aALP;AA8BC3B,kBAAM,EAAE,CAAC,OAAD,CA9BT;AA+BCe,yBAAa,EAAE,gEAAkBU,IA/BlC;AAgCCT,2BAAe,EAAE,sEAAwBU,MAhC1C;AAiCCE,qBAAS,EAAE,CACP;AAAEtB,qBAAO,EAAEk8B,cAAX;AAA2Bj8B,yBAAW,EAAEk8B;AAAxC,aADO,CAjCZ;AAoCC37B,kBAAM,EAAE,CAAC,4nGAAD,EAA+nG,u/BAA/nG,EAAwnI,kjJAAxnI,EAA4qR,o4CAA5qR,EAAkjU,+kGAAljU,EAAmoa,uoCAAnoa;AApCT,WAAD;AAF4F,SAAD,CAAvC,EAwC1D,YAAY;AAAE,iBAAO,CAAC;AAAE1B,gBAAI,EAAE;AAAR,WAAD,EAA8B;AAAEA,gBAAI,EAAE;AAAR,WAA9B,EAAkE;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAC/G/B,kBAAI,EAAE;AADyG,aAAD,EAE/G;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,+EAAD;AAFP,aAF+G;AAA/B,WAAlE,EAKX;AAAEhC,gBAAI,EAAE,gEAAR;AAA+B+B,sBAAU,EAAE,CAAC;AAC9C/B,kBAAI,EAAE;AADwC,aAAD;AAA3C,WALW,EAOX;AAAEA,gBAAI,EAAE8B,SAAR;AAAmBC,sBAAU,EAAE,CAAC;AAClC/B,kBAAI,EAAE;AAD4B,aAAD,EAElC;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAACm7B,8BAAD;AAFP,aAFkC;AAA/B,WAPW,EAYX;AAAEn9B,gBAAI,EAAE;AAAR,WAZW,EAYgB;AAAEA,gBAAI,EAAE;AAAR,WAZhB,EAYyC;AAAEA,gBAAI,EAAEmW,MAAR;AAAgBpU,sBAAU,EAAE,CAAC;AACnF/B,kBAAI,EAAE;AAD6E,aAAD,EAEnF;AACCA,kBAAI,EAAE,oDADP;AAECgC,kBAAI,EAAE,CAAC,2FAAD;AAFP,aAFmF;AAA5B,WAZzC,CAAP;AAiBF,SAzD8C,EAyD5C;AAAE8G,oBAAU,EAAE,CAAC;AACzB9I,gBAAI,EAAE;AADmB,WAAD,CAAd;AAEVs6B,oBAAU,EAAE,CAAC;AACbt6B,gBAAI,EAAE;AADO,WAAD,CAFF;AAIVw6B,4BAAkB,EAAE,CAAC;AACrBx6B,gBAAI,EAAE;AADe,WAAD,CAJV;AAMVk7B,mBAAS,EAAE,CAAC;AACZl7B,gBAAI,EAAE;AADM,WAAD,CAND;AAQVwhC,sBAAY,EAAE,CAAC;AACfxhC,gBAAI,EAAE,uDADS;AAEfgC,gBAAI,EAAE,CAAC,WAAD;AAFS,WAAD,CARJ;AAWVy8B,iCAAuB,EAAE,CAAC;AAC1Bz+B,gBAAI,EAAE,uDADoB;AAE1BgC,gBAAI,EAAE,CAAC,qBAAD,EAAwB;AAAE,wBAAQ;AAAV,aAAxB;AAFoB,WAAD,CAXf;AAcVy/B,4BAAkB,EAAE,CAAC;AACrBzhC,gBAAI,EAAE,uDADe;AAErBgC,gBAAI,EAAE,CAAC,gBAAD;AAFe,WAAD,CAdV;AAiBV29B,gBAAM,EAAE,CAAC;AACT3/B,gBAAI,EAAE,uDADG;AAETgC,gBAAI,EAAE,CAAC,OAAD;AAFG,WAAD,CAjBE;AAoBVq8B,2BAAiB,EAAE,CAAC;AACpBr+B,gBAAI,EAAE,0DADc;AAEpBgC,gBAAI,EAAE,CAAC45B,mBAAD;AAFc,WAAD,CApBT;AAuBV0C,wBAAc,EAAE,CAAC;AACjBt+B,gBAAI,EAAE,0DADW;AAEjBgC,gBAAI,EAAE,CAAC45B,mBAAD,EAAsB;AAAE,wBAAQ;AAAV,aAAtB;AAFW,WAAD,CAvBN;AA0BV2C,8BAAoB,EAAE,CAAC;AACvBv+B,gBAAI,EAAE,0DADiB;AAEvBgC,gBAAI,EAAE,CAACq6B,QAAD;AAFiB,WAAD,CA1BZ;AA6BVmC,2BAAiB,EAAE,CAAC;AACpBx+B,gBAAI,EAAE,0DADc;AAEpBgC,gBAAI,EAAE,CAACq6B,QAAD,EAAW;AAAE,wBAAQ;AAAV,aAAX;AAFc,WAAD,CA7BT;AAgCV+C,2BAAiB,EAAE,CAAC;AACpBp/B,gBAAI,EAAE,0DADc;AAEpBgC,gBAAI,EAAE,CAACu6B,cAAD;AAFc,WAAD,CAhCT;AAmCV0C,wBAAc,EAAE,CAAC;AACjBj/B,gBAAI,EAAE,6DADW;AAEjBgC,gBAAI,EAAE,CAACu5B,QAAD,EAAW;AAAEr5B,yBAAW,EAAE;AAAf,aAAX;AAFW,WAAD,CAnCN;AAsCV88B,uBAAa,EAAE,CAAC;AAChBh/B,gBAAI,EAAE,6DADU;AAEhBgC,gBAAI,EAAE,CAACk6B,OAAD,EAAU;AAAEh6B,yBAAW,EAAE;AAAf,aAAV;AAFU,WAAD,CAtCL;AAyCV48B,yBAAe,EAAE,CAAC;AAClB9+B,gBAAI,EAAE,6DADY;AAElBgC,gBAAI,EAAE,CAACy6B,SAAD,EAAY;AAAEv6B,yBAAW,EAAE;AAAf,aAAZ;AAFY,WAAD,CAzCP;AA4CV68B,yBAAe,EAAE,CAAC;AAClB/+B,gBAAI,EAAE,6DADY;AAElBgC,gBAAI,EAAE,CAAC26B,SAAD,EAAY;AAAEz6B,yBAAW,EAAE;AAAf,aAAZ;AAFY,WAAD;AA5CP,SAzD4C,CAAnD;AAwGC,OAxGhB;;AAyGA,UAAI,KAAJ,EAAW,CAgIV;AAED;AACA;AACA;AACA;AACA;;;UACMggC,kB;;;;AAENA,wBAAkB,CAACtiC,IAAnB,GAA0B,SAASuiC,0BAAT,CAAoCriC,CAApC,EAAuC;AAAE,eAAO,KAAKA,CAAC,IAAIoiC,kBAAV,GAAP;AAAyC,OAA5G;;AACAA,wBAAkB,CAACn0B,IAAnB,GAA0B,+DAAwB;AAAE/N,YAAI,EAAEkiC;AAAR,OAAxB,CAA1B;AACAA,wBAAkB,CAACl0B,IAAnB,GAA0B,+DAAwB;AAAEC,eAAO,EAAE,CAAC,CAClD,4DADkD,EAElD,sEAFkD,EAGlD,sEAHkD,CAAD,EAIlD,sEAJkD;AAAX,OAAxB,CAA1B;;AAKA,OAAC,YAAY;AAAE,SAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,iEAA0Bg0B,kBAA1B,EAA8C;AAAE/zB,sBAAY,EAAE,wBAAY;AAAE,mBAAO,CAACotB,QAAD,EAAW8B,YAAX,EAAyBnB,OAAzB,EAAkCG,QAAlC,EAA4CE,cAA5C,EAA4DE,SAA5D,EAAuEE,SAAvE,CAAP;AAA2F,WAAzH;AAA2H1uB,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,4DAAD,EACjQ,sEADiQ,EAEjQ,sEAFiQ,CAAP;AAEvO,WAFqF;AAEnFG,iBAAO,EAAE,mBAAY;AAAE,mBAAO,CAAC,sEAAD,EAAkBmtB,QAAlB,EAA4B8B,YAA5B,EAA0CnB,OAA1C,EAAmDG,QAAnD,EAA6DE,cAA7D,EAA6EE,SAA7E,EAAwFE,SAAxF,CAAP;AAA4G;AAFhD,SAA9C,CAAnD;AAEuJ,OAFtK;;AAGA,OAAC,YAAY;AAAE,SAAC,OAAOx6B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmD,gEAAyB+/B,kBAAzB,EAA6C,CAAC;AACxGliC,cAAI,EAAE,sDADkG;AAExGgC,cAAI,EAAE,CAAC;AACCmM,wBAAY,EAAE,CACVotB,QADU,EAEV8B,YAFU,EAGVnB,OAHU,EAIVG,QAJU,EAKVE,cALU,EAMVE,SANU,EAOVE,SAPU,CADf;AAUC1uB,mBAAO,EAAE,CACL,4DADK,EAEL,sEAFK,EAGL,sEAHK,CAVV;AAeCG,mBAAO,EAAE,CACL,sEADK,EAELmtB,QAFK,EAGL8B,YAHK,EAILnB,OAJK,EAKLG,QALK,EAMLE,cANK,EAOLE,SAPK,EAQLE,SARK;AAfV,WAAD;AAFkG,SAAD,CAA7C,EA4B1D,IA5B0D,EA4BpD,IA5BoD,CAAnD;AA4BO,OA5BtB;AA8BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCj7CayF,sBAAsB;AAAA;AAAA,O;;AAAtBA,4BAAsB,6DAlBlC,+DAAS;AACRj0B,oBAAY,EAAE,CACZ,2GADY,EAEZ,8GAFY,EAGZ,gIAHY,CADN;AAORF,eAAO,EAAE,CACP,kEADO,EAEP,0DAFO,EAGP,4DAHO,EAIP,+FAJO,EAKP,sEALO,EAMP,oFANO,EAOP,qEAPO;AAPD,OAAT,CAkBkC,GAAtBm0B,sBAAsB,CAAtB;;;;;;;;;;;;;;;;AChCb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMf,UAAMC,MAAM,GAAW,CACrB;AACAC,YAAI,EAAG,QADP;AAEAC,iBAAS,EAAG;AAFZ,OADqB,EAKrB;AACAD,YAAI,EAAG,gBADP;AAEAC,iBAAS,EAAG;AAFZ,OALqB,EAStB;AACCD,YAAI,EAAG,eADR;AAECC,iBAAS,EAAG;AAFb,OATsB,CAAvB;;UAmBaC,6BAA6B;AAAA;AAAA,O;;AAA7BA,mCAA6B,6DAJzC,+DAAS;AACRv0B,eAAO,EAAE,CAAC,6DAAaw0B,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERj0B,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIyC,GAA7Bo0B,6BAA6B,CAA7B;;;;;;;;;;;;;;;;ACzBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOFE,kBAAkB;AAG7B,sCAAc;AAAA;;AAFN,eAAAC,GAAA,GAAI,2BAAJ;AAIN,eAAKC,MAAL,GAAY,4DAAG,KAAKD,GAAR,CAAZ;AACA,eAAKC,MAAL,CAAY5X,EAAZ,CAAe,SAAf,EAAyB,YAAI;AACzB1a,mBAAO,CAACC,GAAR,CAAY,SAAZ;AAGD,WAJH;AAKD;;AAX4B;AAAA;AAAA,iBAa7B,oCAA2BsyB,mBAA3B,EAAgDC,cAAhD,EAA8D;AAAA;;AAC5D,iBAAKF,MAAL,CAAYxjC,IAAZ,CAAiB,6BAAjB,EAA+CyjC,mBAA/C,EAAoEC,cAApE;AACA,gBAAI9xB,OAAO,GAAE,IAAI,+CAAJ,CAAe,UAAA+xB,QAAQ,EAAE;AACpC,qBAAI,CAACH,MAAL,CAAY5X,EAAZ,CAAe,6BAAf,EAA6C,UAAAgY,OAAO,EAAE;AACpDD,wBAAQ,CAACl4B,IAAT,CAAcm4B,OAAd;AACD,eAFD;AAGH,aAJc,CAAb;AAKA,mBAAOhyB,OAAP;AACD;AArB4B;AAAA;AAAA,iBAsB7B,sCAA6B6xB,mBAA7B,EAAkDC,cAAlD,EAAiEtK,cAAjE,EAAgFF,eAAhF,EAAgGP,QAAhG,EAAwG;AAAA;;AACtG,iBAAK6K,MAAL,CAAYxjC,IAAZ,CAAiB,8BAAjB,EAAgDyjC,mBAAhD,EAAqEC,cAArE,EAAoFtK,cAApF,EAAmGF,eAAnG,EAAmHP,QAAnH;AACA,gBAAI/mB,OAAO,GAAE,IAAI,+CAAJ,CAAe,UAAA+xB,QAAQ,EAAE;AACpC,qBAAI,CAACH,MAAL,CAAY5X,EAAZ,CAAe,8BAAf,EAA8C,UAAAgY,OAAO,EAAE;AACrDD,wBAAQ,CAACl4B,IAAT,CAAcm4B,OAAd;AACD,eAFD;AAGH,aAJc,CAAb;AAKA,mBAAOhyB,OAAP;AACD;AA9B4B;AAAA;AAAA,iBA+B7B,qCAA4B6xB,mBAA5B,EAAiDC,cAAjD,EAA+D;AAAA;;AAC7D,iBAAKF,MAAL,CAAYxjC,IAAZ,CAAiB,8BAAjB,EAAgDyjC,mBAAhD,EAAqEC,cAArE;AACA,gBAAI9xB,OAAO,GAAE,IAAI,+CAAJ,CAAe,UAAA+xB,QAAQ,EAAE;AACpC,qBAAI,CAACH,MAAL,CAAY5X,EAAZ,CAAe,8BAAf,EAA8C,UAAAgY,OAAO,EAAE;AACrDD,wBAAQ,CAACl4B,IAAT,CAAcm4B,OAAd;AACD,eAFD;AAGH,aAJc,CAAb;AAKA,mBAAOhyB,OAAP;AACD;AAvC4B;AAAA;AAAA,iBAyC7B,uCAA8B6xB,mBAA9B,EAAkDC,cAAlD,EAAiExK,eAAjE,EAAgF;AAAA;;AAC9E,iBAAKsK,MAAL,CAAYxjC,IAAZ,CAAiB,6CAAjB,EAA+DyjC,mBAA/D,EAAmFC,cAAnF,EAAkGxK,eAAlG;AACA,gBAAItnB,OAAO,GAAE,IAAI,+CAAJ,CAAe,UAAA+xB,QAAQ,EAAE;AACpC,qBAAI,CAACH,MAAL,CAAY5X,EAAZ,CAAe,6CAAf,EAA6D,UAAAgY,OAAO,EAAE;AACpED,wBAAQ,CAACl4B,IAAT,CAAcm4B,OAAd;AACD,eAFD;AAGH,aAJc,CAAb;AAKA,mBAAOhyB,OAAP;AACD;AAjD4B;AAAA;AAAA,iBAkD7B,4CAAmC6xB,mBAAnC,EAAuDC,cAAvD,EAAsExK,eAAtE,EAAqF;AAAA;;AACnF,iBAAKsK,MAAL,CAAYxjC,IAAZ,CAAiB,4CAAjB,EAA8DyjC,mBAA9D,EAAkFC,cAAlF,EAAiGxK,eAAjG;AACA,gBAAItnB,OAAO,GAAE,IAAI,+CAAJ,CAAe,UAAA+xB,QAAQ,EAAE;AACpC,qBAAI,CAACH,MAAL,CAAY5X,EAAZ,CAAe,4CAAf,EAA4D,UAAAgY,OAAO,EAAE;AACnED,wBAAQ,CAACl4B,IAAT,CAAcm4B,OAAd;AACD,eAFD;AAGH,aAJc,CAAb;AAKA,mBAAOhyB,OAAP;AACD;AA1D4B;;AAAA;AAAA,S;;;;;;AAAlB0xB,wBAAkB,6DAH9B,iEAAW;AACVvlC,kBAAU,EAAE;AADF,OAAX,CAG8B,GAAlBulC,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACPb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA,UAAMrjB,OAAO,GAAG,IAAI,qDAAJ,CAAY,SAAZ,CAAhB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA","file":"maintenance-pages-maintenance-pages-module-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, ContentChildren, Input, Output, Directive, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MatOption, MatOptgroup, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected.\n */\nclass MatAutocompleteSelectedEvent {\n    /**\n     * @param {?} source\n     * @param {?} option\n     */\n    constructor(source, option) {\n        this.source = source;\n        this.option = option;\n    }\n}\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteSelectedEvent.prototype.option;\n}\n/**\n * Event object that is emitted when an autocomplete option is activated.\n * @record\n */\nfunction MatAutocompleteActivatedEvent() { }\nif (false) {\n    /**\n     * Reference to the autocomplete panel that emitted the event.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.source;\n    /**\n     * Option that was selected.\n     * @type {?}\n     */\n    MatAutocompleteActivatedEvent.prototype.option;\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/**\n * \\@docs-private\n */\nclass MatAutocompleteBase {\n}\n/** @type {?} */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/**\n * Default `mat-autocomplete` options that can be overridden.\n * @record\n */\nfunction MatAutocompleteDefaultOptions() { }\nif (false) {\n    /**\n     * Whether the first option should be highlighted when an autocomplete panel is opened.\n     * @type {?|undefined}\n     */\n    MatAutocompleteDefaultOptions.prototype.autoActiveFirstOption;\n}\n/**\n * Injection token to be used to override the default options for `mat-autocomplete`.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\nclass MatAutocomplete extends _MatAutocompleteMixinBase {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} defaults\n     */\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete panel should be visible, depending on option length.\n         */\n        this.showPanel = false;\n        this._isOpen = false;\n        /**\n         * Function that maps an option's control value to its display value in the trigger.\n         */\n        this.displayWith = null;\n        /**\n         * Event that is emitted whenever an option from the list is selected.\n         */\n        this.optionSelected = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Emits whenever an option is activated using the keyboard.\n         */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /**\n         * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n         */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /**\n     * Whether the autocomplete panel is open.\n     * @return {?}\n     */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     * @return {?}\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     * @param {?} value\n     * @return {?}\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((/**\n             * @param {?} classList\n             * @param {?} className\n             * @return {?}\n             */\n            (classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }), (/** @type {?} */ ({})));\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        }));\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     * @param {?} scrollTop\n     * @return {?}\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /**\n     * Returns the panel's scrollTop.\n     * @return {?}\n     */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /**\n     * Panel should hide itself when the option list is empty.\n     * @return {?}\n     */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits the `select` event.\n     * @param {?} option\n     * @return {?}\n     */\n    _emitSelectEvent(option) {\n        /** @type {?} */\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /**\n     * Sets the autocomplete visibility classes on a classlist based on the panel is visible.\n     * @private\n     * @param {?} classList\n     * @return {?}\n     */\n    _setVisibilityClasses(classList) {\n        classList['mat-autocomplete-visible'] = this.showPanel;\n        classList['mat-autocomplete-hidden'] = !this.showPanel;\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return new (t || MatAutocomplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatAutocomplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 3);\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\", displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAutocomplete.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\nMatAutocomplete.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_autoActiveFirstOption;\n    /** @type {?} */\n    MatAutocomplete.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._activeOptionChanges;\n    /**\n     * Manages active item in option list based on key events.\n     * @type {?}\n     */\n    MatAutocomplete.prototype._keyManager;\n    /**\n     * Whether the autocomplete panel should be visible, depending on option length.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.showPanel;\n    /** @type {?} */\n    MatAutocomplete.prototype._isOpen;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.template;\n    /**\n     * Element for the panel containing the autocomplete options.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panel;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.options;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionGroups;\n    /**\n     * Function that maps an option's control value to its display value in the trigger.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.displayWith;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._autoActiveFirstOption;\n    /**\n     * Specify the width of the autocomplete panel.  Can be any CSS sizing value, otherwise it will\n     * match the width of its host.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.panelWidth;\n    /**\n     * Event that is emitted whenever an option from the list is selected.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionSelected;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.closed;\n    /**\n     * Emits whenever an option is activated using the keyboard.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.optionActivated;\n    /** @type {?} */\n    MatAutocomplete.prototype._classList;\n    /**\n     * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n     * @type {?}\n     */\n    MatAutocomplete.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocomplete.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-origin.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return new (t || MatAutocompleteOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"] });\n/** @nocollapse */\nMatAutocompleteOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    MatAutocompleteOrigin.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The height of each autocomplete option.\n * @type {?}\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @type {?}\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatAutocompleteTrigger)),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nclass MatAutocompleteTrigger {\n    /**\n     * @param {?} _element\n     * @param {?} _overlay\n     * @param {?} _viewContainerRef\n     * @param {?} _zone\n     * @param {?} _changeDetectorRef\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _formField\n     * @param {?} _document\n     * @param {?=} _viewportRuler\n     */\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /**\n         * Whether or not the label state is being overridden.\n         */\n        this._manuallyFloatingLabel = false;\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /**\n         * Stream of keyboard events that can close the panel.\n         */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = (/**\n         * @return {?}\n         */\n        () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        });\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when autocomplete has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * \\@docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /**\n         * Stream of autocomplete option selections.\n         */\n        this.optionSelections = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange)));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelections)));\n        }))));\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     * @return {?}\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => window.addEventListener('blur', this._windowBlurHandler)));\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /**\n     * Whether or not the autocomplete panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /**\n     * Opens the autocomplete suggestion panel.\n     * @return {?}\n     */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /**\n     * Closes the autocomplete suggestion panel.\n     * @return {?}\n     */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            (/** @type {?} */ (this._overlayRef)).updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     * @return {?}\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter((/**\n         * @return {?}\n         */\n        () => this._overlayAttached))), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter((/**\n             * @return {?}\n             */\n            () => this._overlayAttached))) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /**\n     * The currently active option, coerced to MatOption type.\n     * @return {?}\n     */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /**\n     * Stream of clicks outside of the autocomplete panel.\n     * @private\n     * @return {?}\n     */\n    _getOutsideClickStream() {\n        return merge((/** @type {?} */ (fromEvent(this._document, 'click'))), (/** @type {?} */ (fromEvent(this._document, 'touchend'))))\n            .pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            /** @type {?} */\n            const clickTarget = (/** @type {?} */ ((this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target)));\n            /** @type {?} */\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        })));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        Promise.resolve(null).then((/**\n         * @return {?}\n         */\n        () => this._setTriggerValue(value)));\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            /** @type {?} */\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            /** @type {?} */\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption();\n            }\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _handleInput(event) {\n        /** @type {?} */\n        let target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @private\n     * @param {?=} shouldAnimate Whether the label should be animated when it is floated.\n     * @return {?}\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /**\n     * If the label has been manually elevated, return it to its normal state.\n     * @private\n     * @return {?}\n     */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * Given that we are not actually focusing active options, we must manually adjust scroll\n     * to reveal options below the fold. First, we find the offset of the option from the top\n     * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n     * the panel height + the option height, so the active option will be just visible at the\n     * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n     * will become the offset. If that offset is visible within the panel already, the scrollTop is\n     * not adjusted.\n     * @private\n     * @return {?}\n     */\n    _scrollToOption() {\n        /** @type {?} */\n        const index = this.autocomplete._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(index, this.autocomplete.options, this.autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.autocomplete._setScrollTop(0);\n        }\n        else {\n            /** @type {?} */\n            const newScrollPosition = _getOptionScrollPosition(index + labelCount, AUTOCOMPLETE_OPTION_HEIGHT, this.autocomplete._getScrollTop(), AUTOCOMPLETE_PANEL_HEIGHT);\n            this.autocomplete._setScrollTop(newScrollPosition);\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     * @private\n     * @return {?}\n     */\n    _subscribeToClosingActions() {\n        /** @type {?} */\n        const firstStable = this._zone.onStable.asObservable().pipe(take(1));\n        /** @type {?} */\n        const optionChanges = this.autocomplete.options.changes.pipe(tap((/**\n         * @return {?}\n         */\n        () => this._positionStrategy.reapplyLastPosition())), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                (/** @type {?} */ (this._overlayRef)).updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        })), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this._setValueAndClose(event)));\n    }\n    /**\n     * Destroys the autocomplete suggestion panel.\n     * @private\n     * @return {?}\n     */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setTriggerValue(value) {\n        /** @type {?} */\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        /** @type {?} */\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     * @private\n     * @param {?} skip\n     * @return {?}\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => {\n            if (option != skip && option.selected) {\n                option.deselect();\n            }\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this.autocomplete) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        /** @type {?} */\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if (event.keyCode === ESCAPE || (event.keyCode === UP_ARROW && event.altKey)) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            }));\n            if (this._viewportRuler) {\n                this._viewportSubscription = this._viewportRuler.change().subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this.panelOpen && overlayRef) {\n                        overlayRef.updateSize({ width: this._getPanelWidth() });\n                    }\n                }));\n            }\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        /** @type {?} */\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /**\n     * Sets the positions on a position strategy based on the directive's input state.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        /** @type {?} */\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        /** @type {?} */\n        const panelClass = 'mat-autocomplete-panel-above';\n        /** @type {?} */\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        /** @type {?} */\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /**\n     * Returns the width of the input element, so the panel width can match it.\n     * @private\n     * @return {?}\n     */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     * @private\n     * @return {?}\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /**\n     * Determines whether the panel can be opened.\n     * @private\n     * @return {?}\n     */\n    _canOpen() {\n        /** @type {?} */\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return new (t || MatAutocompleteTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatAutocompleteTrigger.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\nMatAutocompleteTrigger.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatAutocompleteTrigger.ngAcceptInputType_autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._componentDestroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._autocompleteDisabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._scrollStrategy;\n    /**\n     * Old value of the native input. Used to work around issues with the `input` event on IE.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._previousValue;\n    /**\n     * Strategy that is used to position the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._positionStrategy;\n    /**\n     * Whether or not the label state is being overridden.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._manuallyFloatingLabel;\n    /**\n     * The subscription for closing actions (some are bound to document).\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closingActionsSubscription;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportSubscription;\n    /**\n     * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n     * closed autocomplete from being reopened if the user switches to another browser tab and then\n     * comes back.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._canOpenOnNextFocus;\n    /**\n     * Whether the element is inside of a ShadowRoot component.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._isInsideShadowRoot;\n    /**\n     * Stream of keyboard events that can close the panel.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._closeKeyEventStream;\n    /**\n     * Event handler for when the window is blurred. Needs to be an\n     * arrow function in order to preserve the context.\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._windowBlurHandler;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onChange;\n    /**\n     * `View -> model callback called when autocomplete has been touched`\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype._onTouched;\n    /**\n     * The autocomplete panel to be attached to this trigger.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocomplete;\n    /**\n     * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n     * will render the panel underneath the trigger if there is enough space for it to fit in\n     * the viewport, otherwise the panel will be shown above it. If the position is set to\n     * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n     * whether it fits completely in the viewport.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.position;\n    /**\n     * Reference relative to which to position the autocomplete panel.\n     * Defaults to the autocomplete trigger element.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.connectedTo;\n    /**\n     * `autocomplete` attribute to be set on the input element.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.autocompleteAttribute;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlayAttached;\n    /**\n     * Stream of autocomplete option selections.\n     * @type {?}\n     */\n    MatAutocompleteTrigger.prototype.optionSelections;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._formField;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatAutocompleteTrigger.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/autocomplete-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); };\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[MatOptionModule, OverlayModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [MatOptionModule, OverlayModule, MatCommonModule, CommonModule]; }, exports: function () { return [CdkScrollableModule, MatAutocomplete, MatOptionModule, MatAutocompleteTrigger, MatAutocompleteOrigin, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatOptionModule, OverlayModule, MatCommonModule, CommonModule],\n                exports: [\n                    CdkScrollableModule,\n                    MatAutocomplete,\n                    MatOptionModule,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    MatCommonModule\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/autocomplete/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\nimport { MaintenanceService } from '../../services/maintenance.service';\r\nimport { ProductService } from '../../services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-maintenance-outside',\r\n  templateUrl: './maintenance-outside.component.html',\r\n  styleUrls: ['./maintenance-outside.component.css']\r\n})\r\nexport class MaintenanceOutsideComponent implements OnInit {\r\n  started: boolean = false;\r\n  public filter: any = '';\r\n\r\n  form: FormGroup;\r\n  submitted: boolean;\r\n  submitted2: boolean;\r\n  displayRecomendedSerial = true;\r\n  allSerialNumbers = new Array();\r\n  Serial: any;\r\n  products: any;\r\n  search: string;\r\n  maintenanceForm: FormGroup;\r\n\r\n  @ViewChild('Serial') serial: ElementRef;\r\n\r\n  constructor(private _fb: FormBuilder,public _MaintenanceService: MaintenanceService,private _ProductService: ProductService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.creteForm();\r\n    this.createmaintenanceForm()\r\n    this.getAllproducts();\r\n    setTimeout(()=>{ // this will make the execution after the above boolean has changed\r\n      this.serial.nativeElement.focus();\r\n    },0); \r\n  }\r\n  enterPressed(e){\r\n    var code = (e.keyCode ? e.keyCode : e.which);\r\nif(code == 13) { //Enter keycode\r\n    this.onSubmit()\r\n}\r\n    \r\n  }\r\n  createmaintenanceForm(){\r\n    this.maintenanceForm = this._fb.group({\r\n      shopName: [\"\", [Validators.required]],\r\n      recipient: [\"\", [Validators.required]],\r\n      deliveryMan: [\"\", [Validators.required]],\r\n      // cost: [\"\", [Validators.required]],\r\n      // repaired:[\"\", [Validators.required]],\r\n    });\r\n  }\r\n  creteForm() {\r\n    this.form = this._fb.group({\r\n      serialNumber: [\"\", [Validators.required]],\r\n    });\r\n  }\r\n  alertWithFail(msg) {\r\n    Swal.fire('Failed', msg, 'error').then(\r\n      (res) => {\r\n        location.reload();\r\n      }\r\n    );\r\n  }\r\n  alertWithSuccess(msg) {\r\n    Swal.fire('Done', msg, 'success').then(\r\n      (res) => {\r\n        location.reload();\r\n      }\r\n    );\r\n  }\r\n  Getserial() {\r\n    const valueInput = this.serial.nativeElement.value;\r\n    this.Serial = valueInput;\r\n    return valueInput;\r\n  }\r\n  onSubmit(){\r\n    console.log(this.Getserial());\r\n    console.log(this.form.controls.serialNumber.errors);\r\n    \r\n    this.submitted=true;\r\n     if (this.form.valid) {\r\n\r\n      this._MaintenanceService.startMaitenanceOutsideStore(this.Getserial(), localStorage.getItem(\"id\")).subscribe((res: any) => {\r\n        console.log(res)\r\n        if (res.message == 'Maintainence Started successfully') {\r\n          this.started = true;\r\n\r\n\r\n        }else{\r\n          this.alertWithFail(res.message);\r\n\r\n        }\r\n      }, (err) => {\r\n        console.log(err)\r\n\r\n      })\r\n      console.log(this.form.value.serialNumber, localStorage.getItem(\"id\"))\r\n    }\r\n   }\r\n   submitMaitenanceOutside(){\r\n   \r\n    this.submitted2=true;\r\n    if (this.maintenanceForm.valid) {\r\n    \r\n      this._MaintenanceService.submitMaintenanceOutsideStore(this.Getserial(), localStorage.getItem(\"id\"),this.maintenanceForm.value).subscribe((res: any) => {\r\n        console.log(res)\r\n        console.log(\"ccc\")\r\n        if (res.message == 'Maintainence Finished successfully') {\r\n          this.alertWithSuccess(res.message);\r\n\r\n\r\n        }else{\r\n          this.alertWithFail(res.message);\r\n\r\n        }\r\n      }, (err) => {\r\n        console.log(err)\r\n\r\n      })\r\n\r\n\r\n      console.log(this.maintenanceForm.value)\r\n    }\r\n   }\r\n   getAllproducts() {\r\n    this._ProductService.getAllProduct().subscribe((res) => {\r\n      this.products = res;\r\n      for (let val of this.products) {\r\n        let stringSerial = val.serialNumber.toString();\r\n        console.log(stringSerial);\r\n\r\n        this.allSerialNumbers.push(val.serialNumber.toString());\r\n      }\r\n    });\r\n  }\r\n  selectedSerial(val) {\r\n    this.serial.nativeElement.value = val;\r\n    this.displayRecomendedSerial = true;\r\n    // this.form.controls.serialNumber.valid;\r\n\r\n  }\r\n  data(val) {\r\n    return val;\r\n  }\r\n  searchSerial(val) {\r\n    this.displayRecomendedSerial = false;\r\n    \r\n\r\n    let filterd = this.allSerialNumbers.filter(this.data);\r\n\r\n  }\r\n  \r\n}\r\n","import { SPACE, BACKSPACE, DELETE, HOME, END, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, forwardRef, Input, Output, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { DOCUMENT } from '@angular/common';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an event fired on an individual `mat-chip`.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nfunction MatChipEvent() { }\nif (false) {\n    /**\n     * The chip the event was fired on.\n     * @type {?}\n     */\n    MatChipEvent.prototype.chip;\n}\n/**\n * Event object emitted by MatChip when selected or deselected.\n */\nclass MatChipSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?} selected\n     * @param {?=} isUserInput\n     */\n    constructor(source, selected, isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the chip that emitted the event.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.source;\n    /**\n     * Whether the chip that emitted the event is selected.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.selected;\n    /**\n     * Whether the selection change was a result of a user interaction.\n     * @type {?}\n     */\n    MatChipSelectionChange.prototype.isUserInput;\n}\n// Boilerplate for applying mixins to MatChip.\n/**\n * \\@docs-private\n */\nclass MatChipBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipBase.prototype.disabled;\n    /** @type {?} */\n    MatChipBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * \\@docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * \\@docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' }\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?=} animationMode\n     * @param {?=} _changeDetectorRef\n     * @param {?=} tabIndex\n     * @param {?=} _document\n     */\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Whether the chip has focus.\n         */\n        this._hasFocus = false;\n        /**\n         * Whether the chip list is selectable\n         */\n        this.chipListSelectable = true;\n        /**\n         * Whether the chip list is in multi-selection mode.\n         */\n        this._chipListMultiple = false;\n        /**\n         * Whether the chip list as a whole is disabled.\n         */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /**\n         * Emits when the chip is focused.\n         */\n        this._onFocus = new Subject();\n        /**\n         * Emits when the chip is blured.\n         */\n        this._onBlur = new Subject();\n        /**\n         * Emitted when the chip is selected or deselected.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Emitted when the chip is destroyed.\n         */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emitted when a chip is to be removed.\n         */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /**\n     * Whether the chip is selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selected(value) {\n        /** @type {?} */\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /**\n     * The value of the chip. Defaults to the content inside `<mat-chip>` tags.\n     * @return {?}\n     */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     * @return {?}\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the chip is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     * @return {?}\n     */\n    get removable() { return this._removable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /**\n     * The ARIA selected applied to the chip.\n     * @return {?}\n     */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    /**\n     * @return {?}\n     */\n    _addHostClassName() {\n        /** @type {?} */\n        const basicChipAttrName = 'mat-basic-chip';\n        /** @type {?} */\n        const element = (/** @type {?} */ (this._elementRef.nativeElement));\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /**\n     * Selects the chip.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Deselects the chip.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /**\n     * Select this chip and emit selected event\n     * @return {?}\n     */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /**\n     * Toggles the current selected state of this chip.\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /**\n     * Allows for programmatic focusing of the chip.\n     * @return {?}\n     */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     * @return {?}\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /**\n     * Handles click events on the chip.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Handle custom key presses.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            }));\n        }));\n    }\n    /**\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipAvatar, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipTrailingIcon, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChipRemove, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MatChipAvatar,] }],\n    trailingIcon: [{ type: ContentChild, args: [MatChipTrailingIcon,] }],\n    removeIcon: [{ type: ContentChild, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatChipRemove)),] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MatChipAvatar]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MatChipTrailingIcon]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatChipRemove))]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selected;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_selectable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_removable;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChip.ngAcceptInputType_disableRipple;\n    /**\n     * Reference to the RippleRenderer for the chip.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRipple;\n    /**\n     * Reference to the element that acts as the chip's ripple target. This element is\n     * dynamically added as a child node of the chip. The chip itself cannot be used as the\n     * ripple target because it must be the host of the focus indicator.\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._chipRippleTarget;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the chip ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChip.prototype.rippleConfig;\n    /**\n     * Whether the chip has focus.\n     * @type {?}\n     */\n    MatChip.prototype._hasFocus;\n    /**\n     * Whether animations for the chip are enabled.\n     * @type {?}\n     */\n    MatChip.prototype._animationsDisabled;\n    /**\n     * Whether the chip list is selectable\n     * @type {?}\n     */\n    MatChip.prototype.chipListSelectable;\n    /**\n     * Whether the chip list is in multi-selection mode.\n     * @type {?}\n     */\n    MatChip.prototype._chipListMultiple;\n    /**\n     * Whether the chip list as a whole is disabled.\n     * @type {?}\n     */\n    MatChip.prototype._chipListDisabled;\n    /**\n     * The chip avatar\n     * @type {?}\n     */\n    MatChip.prototype.avatar;\n    /**\n     * The chip's trailing icon.\n     * @type {?}\n     */\n    MatChip.prototype.trailingIcon;\n    /**\n     * The chip's remove toggler.\n     * @type {?}\n     */\n    MatChip.prototype.removeIcon;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._selectable;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChip.prototype._removable;\n    /**\n     * Emits when the chip is focused.\n     * @type {?}\n     */\n    MatChip.prototype._onFocus;\n    /**\n     * Emits when the chip is blured.\n     * @type {?}\n     */\n    MatChip.prototype._onBlur;\n    /**\n     * Emitted when the chip is selected or deselected.\n     * @type {?}\n     */\n    MatChip.prototype.selectionChange;\n    /**\n     * Emitted when the chip is destroyed.\n     * @type {?}\n     */\n    MatChip.prototype.destroyed;\n    /**\n     * Emitted when a chip is to be removed.\n     * @type {?}\n     */\n    MatChip.prototype.removed;\n    /** @type {?} */\n    MatChip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChip.prototype._changeDetectorRef;\n}\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    /**\n     * @param {?} _parentChip\n     * @param {?=} elementRef\n     */\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /**\n     * Calls the parent chip's public `remove()` method if applicable.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        /** @type {?} */\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } } });\n/** @nocollapse */\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                }\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipRemove.prototype._parentChip;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-default-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default options, for the chips module, that can be overridden.\n * @record\n */\nfunction MatChipsDefaultOptions() { }\nif (false) {\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     * @type {?}\n     */\n    MatChipsDefaultOptions.prototype.separatorKeyCodes;\n}\n/**\n * Injection token to be used to override the default options for the chips module.\n * @type {?}\n */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatChipList.\n/**\n * \\@docs-private\n */\nclass MatChipListBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatChipListBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatChipListBase.prototype._parentForm;\n    /** @type {?} */\n    MatChipListBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipListBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Change event object that is emitted when the chip list value has changed.\n */\nclass MatChipListChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Chip list that emitted the event.\n     * @type {?}\n     */\n    MatChipListChange.prototype.source;\n    /**\n     * Value of the chip list when the event was emitted.\n     * @type {?}\n     */\n    MatChipListChange.prototype.value;\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Uid of the chip list\n         */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /**\n         * Tab index for the chip list.\n         */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /**\n         * Function when touched\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * Function when changed\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        this._multiple = false;\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        this._required = false;\n        this._disabled = false;\n        /**\n         * Orientation of the chip list.\n         */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /**\n         * Event emitted when the selected chip list value has been changed by the user.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /**\n     * The array of selected chips inside chip list.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The ARIA role applied to the chip list.\n     * @return {?}\n     */\n    get role() { return this.empty ? null : 'listbox'; }\n    /**\n     * Whether the user should be allowed to select multiple chips.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether any chips or the matChipInput inside of this chip-list has focus.\n     * @return {?}\n     */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && this.chips.length === 0;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     * @return {?}\n     */\n    get selectable() { return this._selectable; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.chipListSelectable = this._selectable));\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /**\n     * Combined stream of all of the child chips' selection change events.\n     * @return {?}\n     */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.selectionChange)));\n    }\n    /**\n     * Combined stream of all of the child chips' focus change events.\n     * @return {?}\n     */\n    get chipFocusChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onFocus)));\n    }\n    /**\n     * Combined stream of all of the child chips' blur change events.\n     * @return {?}\n     */\n    get chipBlurChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._onBlur)));\n    }\n    /**\n     * Combined stream of all of the child chips' remove change events.\n     * @return {?}\n     */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.destroyed)));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            dir => this._keyManager.withHorizontalOrientation(dir)));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._allowFocusEscape();\n        }));\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._syncChipsState();\n                }));\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /**\n     * Associates an HTML input element with this chip list.\n     * @param {?} inputElement\n     * @return {?}\n     */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Attempt to focus an input if we have one.\n     * @param {?=} options\n     * @return {?}\n     */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     * @param {?} event\n     * @return {?}\n     */\n    _keydown(event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            if (event.keyCode === HOME) {\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n            }\n            else if (event.keyCode === END) {\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                this._keyManager.onKeydown(event);\n            }\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     * @protected\n     * @return {?}\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     * @protected\n     * @return {?}\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                /** @type {?} */\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @private\n     * @param {?} index The index to be checked.\n     * @return {?} True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            /** @type {?} */\n            let input = (/** @type {?} */ (element));\n            return !input.value;\n        }\n        return false;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip.deselect()));\n        if (Array.isArray(value)) {\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            currentValue => this._selectValue(currentValue, isUserInput)));\n            this._sortValues();\n        }\n        else {\n            /** @type {?} */\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @private\n     * @param {?} value\n     * @param {?=} isUserInput\n     * @return {?} Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        /** @type {?} */\n        const correspondingChip = this.chips.find((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        }));\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        }));\n    }\n    /**\n     * Deselects every chip in the list.\n     * @private\n     * @param {?=} skip Chip that should not be deselected.\n     * @return {?}\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        }));\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => chip.value));\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * When blurred, mark the field as touched when focus moved outside the chip list.\n     * @return {?}\n     */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                }));\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /**\n     * Mark the field as touched\n     * @return {?}\n     */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     * @return {?}\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach((/**\n                 * @param {?} chip\n                 * @return {?}\n                 */\n                chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                }));\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        }));\n    }\n    /**\n     * Listens to user-generated selection events on each chip.\n     * @private\n     * @return {?}\n     */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        }));\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._blur();\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            /** @type {?} */\n            const chip = event.chip;\n            /** @type {?} */\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        }));\n    }\n    /**\n     * Checks whether an event comes from inside a chip element.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _originatesFromChip(event) {\n        /** @type {?} */\n        let currentElement = (/** @type {?} */ (event.target));\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /**\n     * Checks whether any of the chips is focused.\n     * @private\n     * @return {?}\n     */\n    _hasFocusedChip() {\n        return this.chips.some((/**\n         * @param {?} chip\n         * @return {?}\n         */\n        chip => chip._hasFocus));\n    }\n    /**\n     * Syncs the list's state with the individual chips.\n     * @private\n     * @return {?}\n     */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach((/**\n             * @param {?} chip\n             * @return {?}\n             */\n            chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            }));\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_required;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatChipList.ngAcceptInputType_selectable;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.controlType;\n    /**\n     * When a chip is destroyed, we store the index of the destroyed chip until the chips\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate chip that should receive focus until the array of chips updated completely.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._lastDestroyedChipIndex;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._destroyed;\n    /**\n     * Subscription to focus changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipFocusSubscription;\n    /**\n     * Subscription to blur changes in the chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipBlurSubscription;\n    /**\n     * Subscription to selection changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipSelectionSubscription;\n    /**\n     * Subscription to remove changes in chips.\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._chipRemoveSubscription;\n    /**\n     * The chip input to add more chips\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._chipInput;\n    /**\n     * Uid of the chip list\n     * @type {?}\n     */\n    MatChipList.prototype._uid;\n    /**\n     * The aria-describedby attribute on the chip list for improved a11y.\n     * @type {?}\n     */\n    MatChipList.prototype._ariaDescribedby;\n    /**\n     * Tab index for the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype._tabIndex;\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use _tabIndex\n     * @type {?}\n     */\n    MatChipList.prototype._userTabIndex;\n    /**\n     * The FocusKeyManager which handles focus.\n     * @type {?}\n     */\n    MatChipList.prototype._keyManager;\n    /**\n     * Function when touched\n     * @type {?}\n     */\n    MatChipList.prototype._onTouched;\n    /**\n     * Function when changed\n     * @type {?}\n     */\n    MatChipList.prototype._onChange;\n    /** @type {?} */\n    MatChipList.prototype._selectionModel;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatChipList.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._compareWith;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._disabled;\n    /**\n     * Orientation of the chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.ariaOrientation;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._selectable;\n    /**\n     * Event emitted when the selected chip list value has been changed by the user.\n     * @type {?}\n     */\n    MatChipList.prototype.change;\n    /**\n     * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.valueChange;\n    /**\n     * The chip components contained within this chip list.\n     * @type {?}\n     */\n    MatChipList.prototype.chips;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipList.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipList.prototype._dir;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatChipList.prototype.ngControl;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chip-input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents an input event on a `matChipInput`.\n * @record\n */\nfunction MatChipInputEvent() { }\nif (false) {\n    /**\n     * The native `<input>` element that the event is being fired for.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.input;\n    /**\n     * The value of the input.\n     * @type {?}\n     */\n    MatChipInputEvent.prototype.value;\n}\n// Increasing integer for generating unique ids.\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /**\n         * Whether the control is focused.\n         */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /**\n         * Emitted when a chip is to be added.\n         */\n        this.chipEnd = new EventEmitter();\n        /**\n         * The input's placeholder text.\n         */\n        this.placeholder = '';\n        /**\n         * Unique id for the input.\n         */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Register input for chip list\n     * @param {?} value\n     * @return {?}\n     */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     * @return {?}\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is disabled.\n     * @return {?}\n     */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the input is empty.\n     * @return {?}\n     */\n    get empty() { return !this._inputElement.value; }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Utility method to make host definition/tests more clear.\n     * @param {?=} event\n     * @return {?}\n     */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /**\n     * Checks to see if the blur should emit the (chipEnd) event.\n     * @return {?}\n     */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Checks to see if the (chipEnd) event needs to be emitted.\n     * @param {?=} event\n     * @return {?}\n     */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /**\n     * Checks whether a keycode is one of the configured separators.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _isSeparatorKey(event) {\n        if (hasModifierKey(event)) {\n            return false;\n        }\n        /** @type {?} */\n        const separators = this.separatorKeyCodes;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_addOnBlur;\n    /** @type {?} */\n    MatChipInput.ngAcceptInputType_disabled;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatChipInput.prototype.focused;\n    /** @type {?} */\n    MatChipInput.prototype._chipList;\n    /** @type {?} */\n    MatChipInput.prototype._addOnBlur;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     * @type {?}\n     */\n    MatChipInput.prototype.separatorKeyCodes;\n    /**\n     * Emitted when a chip is to be added.\n     * @type {?}\n     */\n    MatChipInput.prototype.chipEnd;\n    /**\n     * The input's placeholder text.\n     * @type {?}\n     */\n    MatChipInput.prototype.placeholder;\n    /**\n     * Unique id for the input.\n     * @type {?}\n     */\n    MatChipInput.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._disabled;\n    /**\n     * The native input element to which this directive is attached.\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._inputElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatChipInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatChipInput.prototype._defaultOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/chips-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = ({\n    separatorKeyCodes: [ENTER]\n});\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); };\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ( /** @type {?} */(ɵ0))\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ( /** @type {?} */(ɵ0))\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/chips/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule };\n\n//# sourceMappingURL=chips.js.map","export default \"a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n     background-color: rgb(249 244 249);\\r\\n  }\\r\\n  \\r\\n   a:hover {\\r\\n    background-color: rgb(179, 177, 177);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW50ZW5hbmNlLWluc2lkZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsY0FBYztLQUNiLGtDQUFrQztFQUNyQzs7R0FFQztJQUNDLG9DQUFvQztFQUN0QyIsImZpbGUiOiJtYWludGVuYW5jZS1pbnNpZGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0OSAyNDQgMjQ5KTtcclxuICB9XHJcbiAgXHJcbiAgIGE6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE3OSwgMTc3LCAxNzcpO1xyXG4gIH1cclxuICAiXX0= */\";","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('9.2.4');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.2.4');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     * @param {?=} document\n     */\n    constructor(highContrastModeDetector, sanityChecks, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        this._document = document;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Access injected document if available or fallback to global document reference\n     * @private\n     * @return {?}\n     */\n    _getDocument() {\n        /** @type {?} */\n        const doc = this._document || document;\n        return typeof doc === 'object' && doc ? doc : null;\n    }\n    /**\n     * Use defaultView of injected document if available or fallback to global window reference\n     * @private\n     * @return {?}\n     */\n    _getWindow() {\n        /** @type {?} */\n        const doc = this._getDocument();\n        /** @type {?} */\n        const win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;\n        return typeof win === 'object' && win ? win : null;\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._getWindow()));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isEnabled && document && !document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        /** @type {?} */\n        const document = this._getDocument();\n        if (isDisabled || !document || !document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), ɵngcc0.ɵɵinject(DOCUMENT, 8)); };\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule], BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n    /**\n     * Used to reference correct document/window\n     * @type {?}\n     * @protected\n     */\n    MatCommonModule.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); };\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); };\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\n/** @nocollapse */ ErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @param {?=} prefix\n * @return {?}\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) { return new (t || MatLineModule)(); };\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Events that signal that the pointer is down.\n * @type {?}\n */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/**\n * Events that signal that the pointer is up.\n * @type {?}\n */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Whether pointer-up event listeners have been registered.\n         */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * \\@docs-private\n     * @param {?} event\n     * @return {?}\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown((/** @type {?} */ (event)));\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart((/** @type {?} */ (event)));\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        /** @type {?} */\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        /** @type {?} */\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            /** @type {?} */\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /**\n     * Function being called whenever the trigger is being released.\n     * @private\n     * @return {?}\n     */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            /** @type {?} */\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        }));\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Registers event listeners for a given list of events.\n     * @private\n     * @param {?} eventTypes\n     * @return {?}\n     */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            eventTypes.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).addEventListener(type, this, passiveEventOptions);\n            }));\n        }));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach((/**\n             * @param {?} type\n             * @return {?}\n             */\n            (type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n            }));\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach((/**\n                 * @param {?} type\n                 * @return {?}\n                 */\n                (type) => {\n                    (/** @type {?} */ (this._triggerElement)).removeEventListener(type, this, passiveEventOptions);\n                }));\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Whether pointer-up event listeners have been registered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._pointerUpEventsRegistered;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); };\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule, PlatformModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule, PlatformModule]; }, exports: function () { return [MatRipple, MatCommonModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); };\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple, MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); };\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption, MatOptgroup]; }, imports: function () { return [MatRippleModule, CommonModule, MatPseudoCheckboxModule]; }, exports: function () { return [MatOption, MatOptgroup]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MaintenanceService } from '../../services/maintenance.service';\nimport { ProductService } from '../../services/product.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-maintenance-outside-after',\n  templateUrl: './maintenance-outside-after.component.html',\n  styleUrls: ['./maintenance-outside-after.component.css'],\n})\nexport class MaintenanceOutsideAfterComponent implements OnInit {\n  maintenanceForm: FormGroup;\n  constructor(\n    private _fb: FormBuilder,\n    public _MaintenanceService: MaintenanceService,\n    private _ProductService: ProductService\n  ) {}\n  submitted2: boolean;\n  displayRecomendedSerial = true;\n  search: string;\n\n  allSerialNumbers = new Array();\n  Serial: any;\n  products: any;\n  started: boolean = false;\n  @ViewChild('Serial') serial: ElementRef;\n\n  public filter: any = '';\n  ngOnInit(): void {\n    this.createmaintenanceForm();\n    this.getAllproducts();\n  }\n  createmaintenanceForm() {\n    this.maintenanceForm = this._fb.group({\n      serialNumber: ['', [Validators.required]],\n      cost: ['', [Validators.required]],\n      repaired: ['', [Validators.required]],\n    });\n  }\n  Getserial() {\n    const valueInput = this.serial.nativeElement.value;\n    this.Serial = valueInput;\n    return valueInput;\n  }\n  getAllproducts() {\n    this._ProductService.getAllProduct().subscribe((res) => {\n      this.products = res;\n      for (let val of this.products) {\n        let stringSerial = val.serialNumber.toString();\n        console.log(stringSerial);\n\n        this.allSerialNumbers.push(val.serialNumber.toString());\n      }\n    });\n  }\n  alertWithFail(msg) {\n    Swal.fire('Failed', msg, 'error').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  }\n  alertWithSuccess(msg) {\n    Swal.fire('Done', msg, 'success').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  }\n  submitMaitenanceOutside() {\n    this.submitted2 = true;\n    if (this.maintenanceForm.valid) {\n      this._MaintenanceService.submitMaintenanceOutsideStoreAfter(this.Getserial(), localStorage.getItem(\"id\"),this.maintenanceForm.value).subscribe((res: any) => {\n        console.log(res)\n        console.log(\"ccc\")\n        if (res.message == 'Maintainence Finished successfully') {\n          this.alertWithSuccess(res.message);\n\n        }else{\n          this.alertWithFail(res.message);\n\n        }\n      }, (err) => {\n        console.log(err)\n\n      })\n\n      console.log(this.maintenanceForm.value);\n    }\n  }\n  selectedSerial(val) {\n    this.serial.nativeElement.value = val;\n    this.displayRecomendedSerial = true;\n    // this.form.controls.serialNumber.valid;\n  }\n  data(val) {\n    return val;\n  }\n  searchSerial(val) {\n    this.displayRecomendedSerial = false;\n\n    let filterd = this.allSerialNumbers.filter(this.data);\n  }\n}\n","export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-9\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <h4 class=\\\"card-title\\\">Maintenance Inside Store Form</h4>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"serialNumber\\\">Product Serial Number:</label>\\n            <input\\n              autocomplete=\\\"off\\\"\\n              type=\\\"text\\\"\\n              class=\\\"form-control\\\"\\n              formControlName=\\\"serialNumber\\\"\\n              name=\\\"serialNumber\\\"\\n              placeholder=\\\"Enter Product Serial Number\\\"\\n              [ngClass]=\\\"{\\n                'is-invalid': submitted && form.controls.serialNumber.errors\\n              }\\\"\\n              #Serial\\n              [(ngModel)]=\\\"search\\\"\\n              (keypress)=\\\"enterPressed($event)\\\"\\n              (keyup)=\\\"searchSerial(search)\\\"\\n            />\\n            <div\\n              class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n              *ngIf=\\\"submitted && form.controls.serialNumber.errors\\\"\\n            >\\n              Enter Valid serial Number\\n            </div>\\n            <div *ngFor=\\\"let post of allSerialNumbers | filter: search\\\">\\n              <a\\n                (click)=\\\"selectedSerial(post)\\\"\\n                *ngIf=\\\"!displayRecomendedSerial\\\"\\n                >{{ post }}</a\\n              >\\n            </div>\\n          </div>\\n          <div class=\\\"text-right\\\">\\n            <button\\n              type=\\\"button\\\"\\n              *ngIf=\\\"!started\\\"\\n              class=\\\"btn btn-primary\\\"\\n              (click)=\\\"onStart()\\\"\\n            >\\n              Start Maintenance\\n            </button>\\n          </div>\\n        </form>\\n        <form *ngIf=\\\"started\\\" [formGroup]=\\\"MaintenanceInsideForm\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"d-block\\\">Spare Parts Added:</label>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                formControlName=\\\"isAdded\\\"\\n                [(ngModel)]=\\\"type\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"true\\\"\\n                name=\\\"isAdded\\\"\\n                [ngClass]=\\\"{\\n                  'is-invalid':\\n                    submitted2 && MaintenanceInsideForm.controls.isAdded.errors\\n                }\\\"\\n              />\\n              <label class=\\\"form-check-label\\\" for=\\\"gender_male\\\">Yes</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                formControlName=\\\"isAdded\\\"\\n                [(ngModel)]=\\\"type\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"false\\\"\\n                name=\\\"isAdded\\\"\\n                [ngClass]=\\\"{\\n                  'is-invalid':\\n                    submitted2 && MaintenanceInsideForm.controls.isAdded.errors\\n                }\\\"\\n              />\\n              <label class=\\\"form-check-label\\\" for=\\\"gender_female\\\">No</label>\\n            </div>\\n            <div\\n              class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n              *ngIf=\\\"\\n                submitted2 && MaintenanceInsideForm.controls.isAdded.errors\\n              \\\"\\n            >\\n              Please Choose Yes or No\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"type == 'true'\\\">\\n            <div class=\\\"form-group\\\">\\n              <label class=\\\"d-block\\\">Existence:</label>\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input\\n                  class=\\\"form-check-input\\\"\\n                  [(ngModel)]=\\\"existence\\\"\\n                  type=\\\"radio\\\"\\n                  formControlName=\\\"Existence\\\"\\n                  value=\\\"true\\\"\\n                  name=\\\"Existence\\\"\\n                  [ngClass]=\\\"{\\n                    'is-invalid':\\n                      submitted2 &&\\n                      MaintenanceInsideForm.controls.Existence.errors\\n                  }\\\"\\n                  (change)=\\\"onItemChange($event.target.value)\\\"\\n                />\\n                <label class=\\\"form-check-label\\\">Yes</label>\\n              </div>\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input\\n                  class=\\\"form-check-input\\\"\\n                  [(ngModel)]=\\\"existence\\\"\\n                  formControlName=\\\"Existence\\\"\\n                  type=\\\"radio\\\"\\n                  value=\\\"false\\\"\\n                  name=\\\"Existence\\\"\\n                  [ngClass]=\\\"{\\n                    'is-invalid':\\n                      submitted2 &&\\n                      MaintenanceInsideForm.controls.Existence.errors\\n                  }\\\"\\n                  (change)=\\\"onItemChange2($event.target.value)\\\"\\n                />\\n                <label class=\\\"form-check-label\\\">No</label>\\n              </div>\\n              <div\\n                class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                *ngIf=\\\"\\n                  submitted2 && MaintenanceInsideForm.controls.Existence.errors\\n                \\\"\\n              >\\n                Please Choose Yes or No\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"existence == 'true'\\\">\\n              <div formArrayName=\\\"MaintenanceData\\\">\\n                <div\\n                  class=\\\"form-group\\\"\\n                  *ngFor=\\\"\\n                    let element of MaintenanceData.controls;\\n                    let x = index\\n                  \\\"\\n                >\\n                  <div [formGroupName]=\\\"x\\\">\\n                    <label>Part Serial Number:</label>\\n                    <input\\n                      formControlName=\\\"sparePartNumber\\\"\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                    />\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"text-right mb-5\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-primary\\\"\\n                  (click)=\\\"addNewSection()\\\"\\n                >\\n                  Add Another Part\\n                </button>\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"existence == 'false'\\\">\\n              <div formArrayName=\\\"sparePartsData\\\">\\n                <div\\n                  *ngFor=\\\"let element of sparePartsData.controls; let x = index\\\"\\n                >\\n                  <div [formGroupName]=\\\"x\\\">\\n                    <div class=\\\"form-group\\\">\\n                      <label>Part Serial Number:</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        formControlName=\\\"serialNumber\\\"\\n                        class=\\\"form-control\\\"\\n                      />\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <label class=\\\"d-block\\\">Inside Product:</label>\\n                      <div class=\\\"form-check form-check-inline\\\">\\n                        <input\\n                          class=\\\"form-check-input\\\"\\n                          type=\\\"radio\\\"\\n                          value=\\\"true\\\"\\n                          formControlName=\\\"isInside\\\"\\n                          [(ngModel)]=\\\"newPart[x]\\\"\\n                          [name]=\\\"x\\\"\\n                        />\\n                        <label class=\\\"form-check-label\\\">Yes</label>\\n                      </div>\\n                      <div class=\\\"form-check form-check-inline\\\">\\n                        <input\\n                          class=\\\"form-check-input\\\"\\n                          type=\\\"radio\\\"\\n                          value=\\\"false\\\"\\n                          formControlName=\\\"isInside\\\"\\n                          [(ngModel)]=\\\"newPart[x]\\\"\\n                          [name]=\\\"x\\\"\\n                        />\\n                        <label class=\\\"form-check-label\\\">No</label>\\n                      </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"newPart[x] == 'true'\\\">\\n                      <label>Product Serial Number:</label>\\n                      <input\\n                        type=\\\"text\\\"\\n                        formControlName=\\\"product\\\"\\n                        class=\\\"form-control\\\"\\n                      />\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"text-right\\\">\\n                <button\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-primary mb-5\\\"\\n                  (click)=\\\"addNewPart()\\\"\\n                >\\n                  Add Another Spare Part\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"d-block\\\">Repaired:</label>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                type=\\\"radio\\\"\\n                formControlName=\\\"repaired\\\"\\n                value=\\\"true\\\"\\n                name=\\\"repaired\\\"\\n                [ngClass]=\\\"{\\n                  'is-invalid':\\n                    submitted2 && MaintenanceInsideForm.controls.repaired.errors\\n                }\\\"\\n              />\\n              <label class=\\\"form-check-label\\\">Yes</label>\\n            </div>\\n            <div class=\\\"form-check form-check-inline\\\">\\n              <input\\n                class=\\\"form-check-input\\\"\\n                formControlName=\\\"repaired\\\"\\n                type=\\\"radio\\\"\\n                value=\\\"false\\\"\\n                name=\\\"repaired\\\"\\n                [ngClass]=\\\"{\\n                  'is-invalid':\\n                    submitted2 && MaintenanceInsideForm.controls.repaired.errors\\n                }\\\"\\n              />\\n              <label class=\\\"form-check-label\\\">No</label>\\n            </div>\\n            <div\\n              class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n              *ngIf=\\\"\\n                submitted2 && MaintenanceInsideForm.controls.repaired.errors\\n              \\\"\\n            >\\n              Please Choose Yes or No\\n            </div>\\n          </div>\\n          <div class=\\\"text-right\\\">\\n            <button (click)=\\\"onSubmit()\\\" type=\\\"button\\\" class=\\\"btn btn-primary\\\">\\n              Submit\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  \\n</div>\\n\\n\";","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl,FormArray, FormGroup, Validators } from '@angular/forms';\nimport { MaintenanceService } from '../../services/maintenance.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\nimport { ProductService } from '../../services/product.service';\n\n@Component({\n  selector: 'app-maintenance-inside',\n  templateUrl: './maintenance-inside.component.html',\n  styleUrls: ['./maintenance-inside.component.css'],\n})\nexport class MaintenanceInsideComponent implements OnInit {\n  started: boolean = false;\n  newSection: any = [0];\n  newPart: any = [0];\n  form: FormGroup;\n \ni:number=1;\n  submitted: boolean;\n  submitted2: boolean;\n  displayRecomendedSerial = true;\n  allSerialNumbers = new Array();\n  Serial: any;\n  MaintenanceInsideForm: FormGroup;\n  products: any;\n  @ViewChild('Serial') serial: ElementRef;\n\n  constructor(private _fb: FormBuilder, \n    public _MaintenanceService: MaintenanceService,\n    private _ProductService: ProductService) { }\n\n  ngOnInit(): void {\n    this.creteForm();\n    this.creteMaintenanceInsideForm();\n    this.getAllproducts();\n    setTimeout(()=>{ // this will make the execution after the above boolean has changed\n      this.serial.nativeElement.focus();\n    },0); \n  }\n  enterPressed(e){\n    var code = (e.keyCode ? e.keyCode : e.which);\nif(code == 13) { //Enter keycode\n    this.onStart()\n}\n    \n  }\n  addNewSection() {\n    this.MaintenanceData.push(this.newMaintenanceData())\n\n    this.newSection.push(2);\n\n  }\n  addNewPart() {\n    this.sparePartsData.push(this.newsparePartsData());\n  \n   \n    this.newPart.push(1)\n    console.log(this.newPart)\n\n  }\n  onItemChange(value){\n    for(var i=this.MaintenanceData.value.length;i>0;i--){\n      this.MaintenanceData.removeAt(i-1)\n\n    }\n    for(var i=this.sparePartsData.value.length;i>0;i--){\n      this.sparePartsData.removeAt(i-1)\n  \n    }\n    this.MaintenanceData.push(this.newMaintenanceData())\n\n    console.log(\" Value is : \", this.MaintenanceData.value );\n }\n onItemChange2(value){\n  for(var i=this.sparePartsData.value.length;i>0;i--){\n    this.sparePartsData.removeAt(i-1)\n\n  }\n  for(var i=this.MaintenanceData.value.length;i>0;i--){\n    this.MaintenanceData.removeAt(i-1)\n\n  }\n  this.sparePartsData.push(this.newsparePartsData())\n\n  console.log(\" Value is : \", this.sparePartsData.value );\n}\n  creteForm() {\n    this.form = this._fb.group({\n      serialNumber: [\"\", [Validators.required]],\n    });\n  }\n  creteMaintenanceInsideForm() {\n    this.MaintenanceInsideForm =  this._fb.group({\n      isAdded: ['',[Validators.required]],\n       Existence: [''],\n      sparePartsData: this._fb.array([]) ,\n      MaintenanceData:this._fb.array([]) ,\n      // Existence: new FormControl(''),\n      // inside:new FormControl(''),\n      repaired:['',[Validators.required]]\n    });\n    // this.sparePartsData.push(this.newsparePartsData())\n    // this.MaintenanceData.push(this.newMaintenanceData())\n\n  }\n  \nget sparePartsData() : FormArray {\n  return this.MaintenanceInsideForm.get(\"sparePartsData\") as FormArray\n}\nget MaintenanceData() : FormArray {\n  return this.MaintenanceInsideForm.get(\"MaintenanceData\") as FormArray\n}\nnewsparePartsData(): FormGroup {\n  return this._fb.group({\n    serialNumber: [''],\n  \n      isInside:[''],\n      product:['']\n  \n  })\n}\nnewMaintenanceData(): FormGroup {\n  return this._fb.group({\n    \n    sparePartNumber:['']\n  })\n}\n  alertWithFail(msg) {\n    Swal.fire('Failed', msg, 'error').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  }\n  onStart() {\n    this.submitted = true;\n    // this.started = true;\n\n    if (this.form.valid) {\n      this._MaintenanceService.startMaitenanceInsideStore(this.Getserial(), localStorage.getItem(\"id\")).subscribe((res: any) => {\n        console.log(res)\n        if (res.message == 'Maintainence Started successfully') {\n          this.started = true;\n\n        }else{\n          this.alertWithFail(res.message);\n\n        }\n      }, (err) => {\n        this.alertWithFail(err);\n\n      })\n      console.log(this.form.value.serialNumber, localStorage.getItem(\"emp\"))\n    }\n  }\n  onSubmit(){\n   this.submitted2=true;\n        // console.log(this.MaintenanceInsideForm.value)\n\n   if(this.MaintenanceInsideForm.valid){\n     console.log(this.MaintenanceInsideForm.value);\n     var spareData=[];\n     for(var i=0;i<this.MaintenanceInsideForm.value.sparePartsData.length;i++){\n      spareData.push({\n        serialNumber:this.MaintenanceInsideForm.value.sparePartsData[i].serialNumber,\n        insideProduct:{\n          isInside: this.MaintenanceInsideForm.value.sparePartsData[i].isInside,\n           product: this.MaintenanceInsideForm.value.sparePartsData[i].product\n        }\n      })\n     }\n     console.log(spareData);\n     var Maintenancedata={\n      isAdded:this.MaintenanceInsideForm.value.isAdded,\n      sparePartNumber:[]\n     }\n     for(var i=0;i<this.MaintenanceInsideForm.value.MaintenanceData.length;i++){\n      Maintenancedata.sparePartNumber.push(this.MaintenanceInsideForm.value.MaintenanceData[i].sparePartNumber)\n     }\n     for(var i=0;i<this.MaintenanceInsideForm.value.sparePartsData.length;i++){\n      Maintenancedata.sparePartNumber.push(this.MaintenanceInsideForm.value.sparePartsData[i].serialNumber)\n     }\n     console.log(Maintenancedata);\n     this._MaintenanceService.submitMaintenanceInsideStore(this.Getserial(),localStorage.getItem(\"id\"),spareData,Maintenancedata,this.MaintenanceInsideForm.value.repaired).subscribe((res:any)=>{\n      console.log(res);\n      if (res.message == 'Maintainence Finished successfully') {\nthis.alertWithSuccess(res.message )\n      }else{\n        this.alertWithFail(res.message);\n\n      }\n     },(err)=>{\n       console.log(err);\n       this.alertWithFail(err);\n\n     })\n   }\n  }\n  alertWithSuccess(msg) {\n    Swal.fire('Done', msg, 'success').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  }\n  getAllproducts() {\n    this._ProductService.getAllProduct().subscribe((res) => {\n      this.products = res;\n      for (let val of this.products) {\n        let stringSerial = val.serialNumber.toString();\n        console.log(stringSerial);\n\n        this.allSerialNumbers.push(val.serialNumber.toString());\n      }\n    });\n  }\n  selectedSerial(val) {\n    this.serial.nativeElement.value = val;\n    this.displayRecomendedSerial = true;\n    // this.form.controls.serialNumber.valid;\n\n  }\n  data(val) {\n    return val;\n  }\n  searchSerial(val) {\n    this.displayRecomendedSerial = false;\n    \n\n    let filterd = this.allSerialNumbers.filter(this.data);\n\n  }\n  Getserial() {\n    const valueInput = this.serial.nativeElement.value;\n    this.Serial = valueInput;\n    return valueInput;\n  }\n}\n","export default \"\\t\\t<!-- Page Header -->\\n     \\n          <!-- /Page Header -->\\n      \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-9\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                  <h4 class=\\\"card-title\\\">Maintenance Outside Store After Delivery :</h4>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                \\n                    <div >\\n                      <form [formGroup]=\\\"maintenanceForm\\\">\\n                \\n                        <div class=\\\"form-group row\\\">\\n                            <label class=\\\"col-form-label col-md-4\\\">Product Serial Number:</label>\\n                            <div class=\\\"col-md-10\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Product Serial Number\\\"\\n                              #Serial [(ngModel)]=\\\"search\\\"\\n                      \\n                              (keyup)=\\\"searchSerial(search)\\\"\\n                               formControlName=\\\"serialNumber\\\"[ngClass]=\\\"{\\n                                'is-invalid': submitted2 && maintenanceForm.controls.serialNumber.errors\\n                              }\\\">\\n                              <div\\n                              class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                              *ngIf=\\\"submitted2 && maintenanceForm.controls.serialNumber.errors\\\"\\n                            >\\n                             Enter Valid serial Number\\n                            </div>\\n                            <div  *ngFor=\\\"let post of allSerialNumbers | filter:search \\\">\\n                              <a (click)=\\\"selectedSerial(post)\\\" *ngIf='!displayRecomendedSerial'>{{post}}</a>\\n                          </div>\\n                            </div>\\n                       \\n                          </div>\\n               \\n                 \\n                  \\n                      <div class=\\\"form-group row\\\" >\\n                        <label class=\\\"col-form-label col-md-4\\\">Cost:</label>\\n                        <div class=\\\"col-md-10\\\">\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Please Enter Cost\\\"formControlName=\\\"cost\\\" [ngClass]=\\\"{\\n                            'is-invalid': submitted2 && maintenanceForm.controls.cost.errors\\n                          }\\\" >\\n                          <div\\n                          class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                          *ngIf=\\\"submitted2 && maintenanceForm.controls.cost.errors\\\"\\n                        >\\n                         Field is required\\n                        </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\" >\\n                        <label class=\\\"d-block\\\">Repaired:</label>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\"  type=\\\"radio\\\" \\n                           value=\\\"true\\\" name=\\\"repaired\\\"formControlName=\\\"repaired\\\" [ngClass]=\\\"{\\n                            'is-invalid':\\n                              submitted2 && maintenanceForm.controls.repaired.errors\\n                          }\\\"  >\\n                          <label class=\\\"form-check-label\\\" >Yes</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\"   \\n                          type=\\\"radio\\\" value=\\\"false\\\" name=\\\"repaired\\\"formControlName=\\\"repaired\\\" [ngClass]=\\\"{\\n                            'is-invalid':\\n                              submitted2 && maintenanceForm.controls.repaired.errors\\n                          }\\\"    >\\n                          <label class=\\\"form-check-label\\\" >No</label>\\n                        </div>\\n                        <div\\n                        class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                        *ngIf=\\\"submitted2 && maintenanceForm.controls.repaired.errors\\\"\\n                      >\\n                        Please Choose Yes or No\\n                      </div>\\n                      </div>\\n                      <div class=\\\"text-right\\\">\\n                        <button  type=\\\"submit\\\" (click)=\\\"submitMaitenanceOutside()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                      </div>\\n                    </form>\\n                    </div>\\n\\n\\n                 \\n                </div>\\n              </div>\\n             \\n            </div>\\n          </div>\\n      \";","import { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r10._control.placeholder);\n} }\nfunction MatFormField_label_9_ng_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_ng_content_3_Template, 1, 0, \"ng-content\", 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat)(\"mat-accent\", ctx_r4.color == \"accent\")(\"mat-warn\", ctx_r4.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r4.appearance != \"outline\")(\"id\", ctx_r4._labelId)(\"ngSwitch\", ctx_r4._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r4._control.id)(\"aria-owns\", ctx_r4._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r6.color == \"accent\")(\"mat-warn\", ctx_r6.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r7._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r16._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r16.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n * @type {?}\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, 3);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 3);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [\n                    { provide: MAT_FORM_FIELD, useExisting: MatFormField },\n                ],\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); };\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            ObserversModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        ObserversModule]; }, exports: function () { return [MatCommonModule, MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatChipsModule } from '@angular/material/chips';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MaintenancePagesRoutingModule } from './maintenance-pages-routing.module';\nimport { MaintenanceInsideComponent } from './maintenance-inside/maintenance-inside.component';\nimport { MaintenanceOutsideComponent } from './maintenance-outside/maintenance-outside.component';\nimport { FormsModule } from '@angular/forms';\nimport { MaintenanceOutsideAfterComponent } from './maintenance-outside-after/maintenance-outside-after.component';\n\n\n@NgModule({\n  declarations: [\n    MaintenanceInsideComponent,\n    MaintenanceOutsideComponent,\n    MaintenanceOutsideAfterComponent,\n  \n  ],\n  imports: [\n    ReactiveFormsModule,\n    FormsModule,\n    CommonModule,\n    MaintenancePagesRoutingModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    Ng2SearchPipeModule,\n    \n  ]\n})\nexport class MaintenancePagesModule { }\n","export default \"\\t\\t<!-- Page Header -->\\n     \\n          <!-- /Page Header -->\\n      \\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-9\\\">\\n              <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                  <h4 class=\\\"card-title\\\">Maintenance Outside Store Before Delivery :</h4>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                  <form [formGroup]=\\\"form\\\">\\n                    <div class=\\\"form-group row\\\">\\n                      <label class=\\\"col-form-label\\\">Product Serial Number:</label>\\n                      <div class=\\\"col-md-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Product Serial Number\\\"\\n                        #Serial [(ngModel)]=\\\"search\\\"\\n                        (keypress)=\\\"enterPressed($event)\\\"\\n                        (keyup)=\\\"searchSerial(search)\\\"\\n                         formControlName=\\\"serialNumber\\\"[ngClass]=\\\"{\\n                          'is-invalid': submitted && form.controls.serialNumber.errors\\n                        }\\\">\\n                        <div\\n                        class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                        *ngIf=\\\"submitted && form.controls.serialNumber.errors\\\"\\n                      >\\n                       Enter Valid serial Number\\n                      </div>\\n                      <div  *ngFor=\\\"let post of allSerialNumbers | filter:search \\\">\\n                        <a (click)=\\\"selectedSerial(post)\\\" *ngIf='!displayRecomendedSerial'>{{post}}</a>\\n                    </div>\\n                      </div>\\n                 \\n                    </div>\\n                    <div class=\\\"text-right\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-primary mb-3\\\"(click)=\\\"onSubmit()\\\" *ngIf=\\\"!started\\\">Start Maintenance</button>\\n                    </div>\\n                  </form>\\n                    <div *ngIf=\\\"started\\\">\\n                      <form [formGroup]=\\\"maintenanceForm\\\">\\n                    <div class=\\\"form-group row\\\" >\\n                      <label class=\\\"col-form-label col-md-2\\\">Shop Name:</label>\\n                      <div class=\\\"col-md-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"placeholder=\\\"Please Enter Shop Name\\\"formControlName=\\\"shopName\\\" [ngClass]=\\\"{\\n                          'is-invalid': submitted2 && maintenanceForm.controls.shopName.errors\\n                        }\\\">\\n                        <div\\n                        class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                        *ngIf=\\\"submitted2 && maintenanceForm.controls.shopName.errors\\\"\\n                      >\\n                       Field is required\\n                      </div>\\n                      </div>\\n                    </div>\\n                 \\n               \\n                    <div class=\\\"form-group row\\\" >\\n                      <label class=\\\"col-form-label col-md-2\\\">Recipient:</label>\\n                      <div class=\\\"col-md-10\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\"placeholder=\\\"Please Enter Recipient\\\"formControlName=\\\"recipient\\\" [ngClass]=\\\"{\\n                          'is-invalid': submitted2 && maintenanceForm.controls.recipient.errors\\n                        }\\\" >\\n                        <div\\n                        class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                        *ngIf=\\\"submitted2 && maintenanceForm.controls.recipient.errors\\\"\\n                      >\\n                       Field is required\\n                      </div>\\n                      </div>\\n                    </div>\\n                  \\n                    <div class=\\\"form-group row\\\" >\\n                        <label class=\\\"col-form-label col-md-2\\\">Delivery Man:</label>\\n                        <div class=\\\"col-md-10\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Please Enter Delivery Man\\\"formControlName=\\\"deliveryMan\\\" [ngClass]=\\\"{\\n                            'is-invalid': submitted2 && maintenanceForm.controls.deliveryMan.errors\\n                          }\\\" >\\n                          <div\\n                          class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                          *ngIf=\\\"submitted2 && maintenanceForm.controls.deliveryMan.errors\\\"\\n                        >\\n                         Field is required\\n                        </div>\\n                        </div>\\n                      </div>\\n                  \\n                      <!-- <div class=\\\"form-group row\\\" >\\n                        <label class=\\\"col-form-label col-md-2\\\">Cost:</label>\\n                        <div class=\\\"col-md-10\\\">\\n                          <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Please Enter Cost\\\"formControlName=\\\"cost\\\" [ngClass]=\\\"{\\n                            'is-invalid': submitted2 && maintenanceForm.controls.cost.errors\\n                          }\\\" >\\n                          <div\\n                          class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                          *ngIf=\\\"submitted2 && maintenanceForm.controls.cost.errors\\\"\\n                        >\\n                         Field is required\\n                        </div>\\n                        </div>\\n                      </div>\\n                      <div class=\\\"form-group\\\" >\\n                        <label class=\\\"d-block\\\">Repaired:</label>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\"  type=\\\"radio\\\" \\n                           value=\\\"true\\\" name=\\\"repaired\\\"formControlName=\\\"repaired\\\" [ngClass]=\\\"{\\n                            'is-invalid':\\n                              submitted2 && maintenanceForm.controls.repaired.errors\\n                          }\\\"  >\\n                          <label class=\\\"form-check-label\\\" >Yes</label>\\n                        </div>\\n                        <div class=\\\"form-check form-check-inline\\\">\\n                          <input class=\\\"form-check-input\\\"   \\n                          type=\\\"radio\\\" value=\\\"false\\\" name=\\\"repaired\\\"formControlName=\\\"repaired\\\" [ngClass]=\\\"{\\n                            'is-invalid':\\n                              submitted2 && maintenanceForm.controls.repaired.errors\\n                          }\\\"    >\\n                          <label class=\\\"form-check-label\\\" >No</label>\\n                        </div>\\n                        <div\\n                        class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                        *ngIf=\\\"submitted2 && maintenanceForm.controls.repaired.errors\\\"\\n                      >\\n                        Please Choose Yes or No\\n                      </div>\\n                      </div> -->\\n                      <div class=\\\"text-right\\\">\\n                        <button  type=\\\"submit\\\" (click)=\\\"submitMaitenanceOutside()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                      </div>\\n                    </form>\\n                    </div>\\n\\n\\n                 \\n                </div>\\n              </div>\\n             \\n            </div>\\n          </div>\\n      \";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MaintenanceInsideComponent } from './maintenance-inside/maintenance-inside.component';\nimport { MaintenanceOutsideAfterComponent } from './maintenance-outside-after/maintenance-outside-after.component';\nimport { MaintenanceOutsideComponent } from './maintenance-outside/maintenance-outside.component';\n\nconst routes: Routes = [\n  {\n\t\tpath : 'inside',\n\t\tcomponent : MaintenanceInsideComponent\n\t},\n  {\n\t\tpath : 'outside-before',\n\t\tcomponent : MaintenanceOutsideComponent\n\t},\n\t{\n\t\tpath : 'outside-after',\n\t\tcomponent : MaintenanceOutsideAfterComponent\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MaintenancePagesRoutingModule { }\n","export default \"a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n     background-color: rgb(249 244 249);\\r\\n  }\\r\\n  \\r\\n   a:hover {\\r\\n    background-color: rgb(179, 177, 177);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW50ZW5hbmNlLW91dHNpZGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGNBQWM7S0FDYixrQ0FBa0M7RUFDckM7O0dBRUM7SUFDQyxvQ0FBb0M7RUFDdEMiLCJmaWxlIjoibWFpbnRlbmFuY2Utb3V0c2lkZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ5IDI0NCAyNDkpO1xyXG4gIH1cclxuICBcclxuICAgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc5LCAxNzcsIDE3Nyk7XHJcbiAgfVxyXG4gICJdfQ== */\";","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport {io}  from 'socket.io-client';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MaintenanceService {\r\n  private url=\"http://162.240.5.234:3000\";\r\n  socket:any;\r\n  constructor() {\r\n\r\n    this.socket=io(this.url);\r\n    this.socket.on(\"connect\",()=>{\r\n        console.log(\"connect\")\r\n\r\n\r\n      })\r\n  }\r\n\r\n  startMaitenanceInsideStore(productserialNumber, maintainererId){\r\n    this.socket.emit(\"startMaintenanceInsideStore\",productserialNumber, maintainererId)\r\n    let message =new Observable(observer=>{\r\n      this.socket.on(\"startMaintenanceInsideStore\",comment=>{\r\n        observer.next(comment)\r\n      })\r\n  })\r\n    return message\r\n  }\r\n  submitMaintenanceInsideStore(productserialNumber, maintainererId,sparePartsData,MaintenanceData,repaired){\r\n    this.socket.emit(\"submitMaintenanceInsideStore\",productserialNumber, maintainererId,sparePartsData,MaintenanceData,repaired)\r\n    let message =new Observable(observer=>{\r\n      this.socket.on(\"submitMaintenanceInsideStore\",comment=>{\r\n        observer.next(comment)\r\n      })\r\n  })\r\n    return message\r\n  }\r\n  startMaitenanceOutsideStore(productserialNumber, maintainererId){\r\n    this.socket.emit(\"startMaintenanceOutsideStore\",productserialNumber, maintainererId)\r\n    let message =new Observable(observer=>{\r\n      this.socket.on(\"startMaintenanceOutsideStore\",comment=>{\r\n        observer.next(comment)\r\n      })\r\n  })\r\n    return message\r\n  }\r\n\r\n  submitMaintenanceOutsideStore(productserialNumber,maintainererId,MaintenanceData){\r\n    this.socket.emit(\"submitMaintenanceOutsideStoreBeforeRepaired\",productserialNumber,maintainererId,MaintenanceData)\r\n    let message =new Observable(observer=>{\r\n      this.socket.on(\"submitMaintenanceOutsideStoreBeforeRepaired\",comment=>{\r\n        observer.next(comment)\r\n      })\r\n  })\r\n    return message\r\n  }\r\n  submitMaintenanceOutsideStoreAfter(productserialNumber,maintainererId,MaintenanceData){\r\n    this.socket.emit(\"submitMaintenanceOutsideStoreAfterRepaired\",productserialNumber,maintainererId,MaintenanceData)\r\n    let message =new Observable(observer=>{\r\n      this.socket.on(\"submitMaintenanceOutsideStoreAfterRepaired\",comment=>{\r\n        observer.next(comment)\r\n      })\r\n  })\r\n    return message\r\n  }\r\n\r\n}\r\n","export default \"a {\\r\\n    color: black;\\r\\n    padding: 12px 16px;\\r\\n    text-decoration: none;\\r\\n    display: block;\\r\\n     background-color: rgb(249 244 249);\\r\\n  }\\r\\n  \\r\\n   a:hover {\\r\\n    background-color: rgb(179, 177, 177);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW50ZW5hbmNlLW91dHNpZGUtYWZ0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGNBQWM7S0FDYixrQ0FBa0M7RUFDckM7O0dBRUM7SUFDQyxvQ0FBb0M7RUFDdEMiLCJmaWxlIjoibWFpbnRlbmFuY2Utb3V0c2lkZS1hZnRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYSB7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBwYWRkaW5nOiAxMnB4IDE2cHg7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ5IDI0NCAyNDkpO1xyXG4gIH1cclxuICBcclxuICAgYTpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTc5LCAxNzcsIDE3Nyk7XHJcbiAgfVxyXG4gICJdfQ== */\";","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('11.2.13');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n"]}