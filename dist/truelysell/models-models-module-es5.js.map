{"version":3,"sources":["webpack:///src/app/admin/models/models-routing.module.ts","webpack:///src/app/admin/models/add-new-model/add-new-model.component.ts","webpack:///src/app/admin/models/add-new-model/add-new-model.component.css","webpack:///src/app/admin/models/models-details/models-details.component.ts","webpack:///src/app/admin/models/models-details/models-details.component.html","webpack:///src/app/admin/models/add-new-model/add-new-model.component.html","webpack:///src/app/admin/models/models-details/models-details.component.css","webpack:///src/app/admin/models/models.module.ts"],"names":["routes","path","component","ModelsRoutingModule","imports","forChild","exports","AddNewModelComponent","_fb","_ModelsService","creteForm","form","group","model","required","price","msg","fire","then","res","location","reload","submitted","valid","console","log","value","addNewModel","subscribe","alertWithSuccess","error","alertWithFail","selector","template","ModelsDetailsComponent","modalSer","active","listModels","pricing","err","updateModel","modelId","id","deleteModel","alertWithSuccessDeleted","ModelsModule","declarations","providers"],"mappings":"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","file":"models-models-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddNewModelComponent } from './add-new-model/add-new-model.component';\r\nimport { ModelsDetailsComponent } from './models-details/models-details.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'details',\r\n    component: ModelsDetailsComponent,\r\n  },\r\n\r\n  {\r\n    path: 'add-new-model',\r\n    component: AddNewModelComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ModelsRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModelsService } from '../../services/models.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-add-new-model',\n  templateUrl: './add-new-model.component.html',\n  styleUrls: ['./add-new-model.component.css']\n})\nexport class AddNewModelComponent implements OnInit {\n\n  constructor(private _fb: FormBuilder,private _ModelsService:ModelsService) { }\n  form: FormGroup;\n  submitted: boolean;\n  ngOnInit(): void {\n    this.creteForm()\n  }\n  creteForm() {\n    this.form = this._fb.group({\n      model: [\"\", [Validators.required]],\n      price: [\"\", [Validators.required]],\n  \n\n    });\n  }\n  alertWithFail(msg) {\n    Swal.fire('Failed', msg, 'error').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  };\n  alertWithSuccess() {\n    Swal.fire('Saved', \"Saved Successfully\", 'success').then(\n      (res) => {\n        location.reload();\n      }\n    );\n  }\n  saveModel(){\n    this.submitted=true;\n    if (this.form.valid) {\n      console.log(this.form.value)\n   this._ModelsService.addNewModel(this.form.value).subscribe((res)=>{\nthis.alertWithSuccess()\n\n   },(error)=>{\n\n  this.alertWithFail(error.error)\n\n   })\n\n\n    }\n\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhZGQtbmV3LW1vZGVsLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ModelPriceService } from '../../services/model-price.service';\r\n// import { ModelsService } from '../../services/models.service';\r\nimport { NzTableLayout, NzTablePaginationPosition, NzTablePaginationType, NzTableSize } from 'ng-zorro-antd/table';import { ModelsService } from '../../services/models.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\r\n\r\n@Component({\r\n  selector: 'app-models-details',\r\n  templateUrl: './models-details.component.html',\r\n  styleUrls: ['./models-details.component.css'],\r\n})\r\nexport class ModelsDetailsComponent implements OnInit {\r\n  pricing: any;\r\n  constructor(\r\n    private _ModelsService: ModelsService,\r\n    private modalSer: NgbModal,\r\n    public active: NgbActiveModal,\r\n    private _fb: FormBuilder\r\n  ) {}\r\n  Models: any;\r\n  modelId: any;\r\n  modelName: any;\r\n  modelPrice: any;\r\n  form: FormGroup;\r\n  submitted: boolean;\r\n  ngOnInit(): void {\r\n    this.listModels();\r\n    this.creteForm()\r\n  }\r\n  listModels() {\r\n    this._ModelsService.listModels().subscribe(\r\n      (res) => {\r\n        // $(function () {\r\n        //   $('table').DataTable();\r\n        // });\r\n        console.log(res);\r\n        this.pricing = res;\r\n      },\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n  alertWithFail(msg) {\r\n    Swal.fire('Failed', msg, 'error').then(\r\n      (res) => {\r\n        location.reload();\r\n      }\r\n    );\r\n  };\r\n  alertWithSuccess() {\r\n    Swal.fire('Saved', \"Saved Successfully\", 'success').then(\r\n      (res) => {\r\n        location.reload();\r\n      }\r\n    );\r\n  }\r\n  alertWithSuccessDeleted() {\r\n    Swal.fire('Deleted', \"Deleted Successfully\", 'success').then(\r\n      (res) => {\r\n        location.reload();\r\n      }\r\n    );\r\n  }\r\n  EditModel() {\r\n    this.submitted=true;\r\n    if (this.form.valid) {\r\n      this._ModelsService.updateModel(this.form.value,this.modelId).subscribe((res)=>{\r\n        this.alertWithSuccess();\r\n      },(error)=>{\r\n\r\n        this.alertWithFail(\"Try Again Later\");\r\n\r\n      });\r\n\r\n\r\n    }\r\n   \r\n\r\n  }\r\n\r\n  creteForm() {\r\n    this.form = this._fb.group({\r\n      model: [\"\", [Validators.required]],\r\n      price: [\"\", [Validators.required]],\r\n  \r\n\r\n    });\r\n  }\r\n  deletemodel(id) {\r\n    \r\n\r\n    this._ModelsService.deleteModel(id).subscribe((res) => {\r\n      this.alertWithSuccessDeleted();\r\n    },(error)=>{\r\n      this.alertWithFail(\"Try Again Later\");\r\n\r\n    });\r\n  }\r\n\r\n\r\n  \r\n}\r\n","export default \"<nz-table #basicTable [nzData]=\\\"pricing\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <th>Model</th>\\r\\n        <th>Price</th>\\r\\n       <th>Edit</th>\\r\\n       <th>Delete</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n      <tr *ngFor=\\\"let data of basicTable.data\\\">\\r\\n        <td>{{ data.model }}</td>\\r\\n        <td>{{ data.price }}</td>\\r\\n        <td>   <a\\r\\n          class=\\\"table-action-btn btn btn-sm bg-success-light\\\"\\r\\n          data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\"\\r\\n          (click)=\\\"modelId=data._id;modelName=data.model;modelPrice=data.price\\\"\\r\\n        >\\r\\n          Edit\\r\\n        </a></td>\\r\\n        <td>   <a\\r\\n          class=\\\"table-action-btn btn btn-sm bg-danger-light\\\"\\r\\n         \\r\\n          (click)=\\\"deletemodel(data._id)\\\"\\r\\n\\r\\n        >\\r\\n          Delete\\r\\n        </a></td>\\r\\n   \\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </nz-table>\\r\\n\\r\\n  <div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Update Model</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n       <!-- Row -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12\\\">\\r\\n    <!-- Custom Boostrap Validation -->\\r\\n    <div class=\\\"card\\\">\\r\\n  \\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm\\\">\\r\\n            <form\\r\\n              class=\\\"needs-validation\\\"\\r\\n              [formGroup]=\\\"form\\\"\\r\\n              autocomplete=\\\"off\\\"\\r\\n            >\\r\\n              <div class=\\\"form-row\\\">\\r\\n             \\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                  <label for=\\\"validationCustom01\\\">Model</label>\\r\\n                  <input\\r\\n                    type=\\\"text\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"validationCustom01\\\"\\r\\n                    [ngModel]=\\\"modelName\\\"\\r\\n                    name=\\\"model\\\"formControlName=\\\"model\\\" \\r\\n                    [ngClass]=\\\"{\\r\\n                      'is-invalid': submitted && form.controls.model.errors\\r\\n                    }\\\" \\r\\n                  />\\r\\n                  <div\\r\\n                  class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\r\\n                  *ngIf=\\\"submitted && form.controls.model.errors\\\"\\r\\n                >\\r\\n                 Field is required\\r\\n                </div>\\r\\n                  <div class=\\\"valid-feedback\\\">Looks good!</div>\\r\\n                </div>\\r\\n               \\r\\n          \\r\\n                <div class=\\\"col-md-6 mb-3\\\">\\r\\n                  <label for=\\\"validationCustom01\\\">Price</label>\\r\\n                  <input\\r\\n                    type=\\\"number\\\"\\r\\n                    class=\\\"form-control\\\"\\r\\n                    id=\\\"validationCustom01\\\"\\r\\n                    [ngModel]=\\\"modelPrice\\\"\\r\\n                    name=\\\"price\\\"formControlName=\\\"price\\\" \\r\\n                    [ngClass]=\\\"{\\r\\n                      'is-invalid': submitted && form.controls.price.errors\\r\\n                    }\\\" \\r\\n                  />\\r\\n                  <div\\r\\n                  class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\r\\n                  *ngIf=\\\"submitted && form.controls.price.errors\\\"\\r\\n                >\\r\\n                 Field is required\\r\\n                </div>\\r\\n                  <div class=\\\"valid-feedback\\\">Looks good!</div>\\r\\n                </div>\\r\\n               \\r\\n              \\r\\n              </div>\\r\\n\\r\\n           \\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary mt-3\\\" (click)=\\\"EditModel()\\\">Save changes</button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- /Validation Tooltips -->\\r\\n  </div>\\r\\n</div>\\r\\n<!-- /Row -->\\r\\n\\r\\n        </div>\\r\\n        <!-- <div class=\\\"modal-footer\\\">\\r\\n        </div> -->\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\";","export default \"<!-- Row -->\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n      <!-- Custom Boostrap Validation -->\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"card-title\\\">Add New Model Form</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm\\\">\\n              <form\\n                class=\\\"needs-validation\\\"\\n                [formGroup]=\\\"form\\\"\\n                autocomplete=\\\"off\\\"\\n              >\\n                <div class=\\\"form-row\\\">\\n               \\n                  <div class=\\\"col-md-4 mb-3\\\">\\n                    <label for=\\\"validationCustom01\\\">Model</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"please add the model\\\"\\n                      name=\\\"model\\\"formControlName=\\\"model\\\" \\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.model.errors\\n                      }\\\" \\n                    />\\n                    <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.model.errors\\\"\\n                  >\\n                   Field is required\\n                  </div>\\n                    <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                  </div>\\n                 \\n            \\n                  <div class=\\\"col-md-4 mb-3\\\">\\n                    <label for=\\\"validationCustom01\\\">Price</label>\\n                    <input\\n                      type=\\\"number\\\"\\n                      class=\\\"form-control\\\"\\n                      id=\\\"validationCustom01\\\"\\n                      placeholder=\\\"please add the price\\\"\\n                      name=\\\"price\\\"formControlName=\\\"price\\\" \\n                      [ngClass]=\\\"{\\n                        'is-invalid': submitted && form.controls.price.errors\\n                      }\\\" \\n                    />\\n                    <div\\n                    class=\\\"alert alert-danger my-1 p-2 fadeInDown animated\\\"\\n                    *ngIf=\\\"submitted && form.controls.price.errors\\\"\\n                  >\\n                   Field is required\\n                  </div>\\n                    <div class=\\\"valid-feedback\\\">Looks good!</div>\\n                  </div>\\n                 \\n                \\n                </div>\\n  \\n             \\n                <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"saveModel()\\\">Submit</button>\\n              </form>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n  \\n      <!-- /Validation Tooltips -->\\n    </div>\\n  </div>\\n  <!-- /Row -->\\n  \";","export default \"form nz-form-item {\\r\\n    margin-right: 16px;\\r\\n    margin-bottom: 8px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVscy1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0VBQ3BCIiwiZmlsZSI6Im1vZGVscy1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIG56LWZvcm0taXRlbSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE2cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA4cHg7XHJcbiAgfSJdfQ== */\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ModelsRoutingModule } from './models-routing.module';\r\nimport { ModelsDetailsComponent } from './models-details/models-details.component';\r\nimport { NgbActiveModal, NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { AddNewModelComponent } from './add-new-model/add-new-model.component';\r\nimport { DemoNgZorroAntdModule } from 'src/app/ng-zoro.module';\r\n\r\n@NgModule({\r\n  declarations: [ModelsDetailsComponent, AddNewModelComponent,],\r\n  imports: [CommonModule, ModelsRoutingModule, NgbModule, ReactiveFormsModule,DemoNgZorroAntdModule],\r\n  providers: [NgbActiveModal],\r\n})\r\nexport class ModelsModule {}\r\n"]}