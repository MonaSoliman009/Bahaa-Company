{"version":3,"file":"google-map.d.ts","sources":["google-map.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/// <reference types=\"googlemaps\" />\r\nimport { ElementRef, OnChanges, OnDestroy, OnInit, NgZone } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n/** default options set to the Googleplex */\r\nexport declare const DEFAULT_OPTIONS: google.maps.MapOptions;\r\n/** Arbitrary default height for the map element */\r\nexport declare const DEFAULT_HEIGHT = \"500px\";\r\n/** Arbitrary default width for the map element */\r\nexport declare const DEFAULT_WIDTH = \"500px\";\r\n/**\r\n * Angular component that renders a Google Map via the Google Maps JavaScript\r\n * API.\r\n * @see https://developers.google.com/maps/documentation/javascript/reference/\r\n */\r\nexport declare class GoogleMap implements OnChanges, OnInit, OnDestroy {\r\n    private readonly _elementRef;\r\n    private _ngZone;\r\n    private _eventManager;\r\n    private _googleMapChanges;\r\n    private readonly _options;\r\n    private readonly _center;\r\n    private readonly _zoom;\r\n    private readonly _destroy;\r\n    private _mapEl;\r\n    /**\r\n     * The underlying google.maps.Map object\r\n     *\r\n     * See developers.google.com/maps/documentation/javascript/reference/map#Map\r\n     */\r\n    googleMap?: google.maps.Map;\r\n    /** Whether we're currently rendering inside a browser. */\r\n    _isBrowser: boolean;\r\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\r\n    height: string | number | null;\r\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\r\n    width: string | number | null;\r\n    /**\r\n     * Type of map that should be rendered. E.g. hybrid map, terrain map etc.\r\n     * See: https://developers.google.com/maps/documentation/javascript/reference/map#MapTypeId\r\n     */\r\n    mapTypeId: google.maps.MapTypeId | undefined;\r\n    set center(center: google.maps.LatLngLiteral | google.maps.LatLng);\r\n    set zoom(zoom: number);\r\n    set options(options: google.maps.MapOptions);\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\r\n     */\r\n    boundsChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\r\n     */\r\n    centerChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\r\n     */\r\n    mapClick: Observable<google.maps.MouseEvent | google.maps.IconMouseEvent>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\r\n     */\r\n    mapDblclick: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\r\n     */\r\n    mapDrag: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\r\n     */\r\n    mapDragend: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\r\n     */\r\n    mapDragstart: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\r\n     */\r\n    headingChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\r\n     */\r\n    idle: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\r\n     */\r\n    maptypeidChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\r\n     */\r\n    mapMousemove: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\r\n     */\r\n    mapMouseout: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\r\n     */\r\n    mapMouseover: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * See\r\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\r\n     */\r\n    projectionChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\r\n     */\r\n    mapRightclick: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\r\n     */\r\n    tilesloaded: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\r\n     */\r\n    tiltChanged: Observable<void>;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\r\n     */\r\n    zoomChanged: Observable<void>;\r\n    constructor(_elementRef: ElementRef, _ngZone: NgZone, \r\n    /**\r\n     * @deprecated `platformId` parameter to become required.\r\n     * @breaking-change 10.0.0\r\n     */\r\n    platformId?: Object);\r\n    ngOnChanges(): void;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\r\n     */\r\n    fitBounds(bounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral, padding?: number | google.maps.Padding): void;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\r\n     */\r\n    panBy(x: number, y: number): void;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\r\n     */\r\n    panTo(latLng: google.maps.LatLng | google.maps.LatLngLiteral): void;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\r\n     */\r\n    panToBounds(latLngBounds: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral, padding?: number | google.maps.Padding): void;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\r\n     */\r\n    getBounds(): google.maps.LatLngBounds | null;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\r\n     */\r\n    getCenter(): google.maps.LatLng;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\r\n     */\r\n    getClickableIcons(): boolean;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\r\n     */\r\n    getHeading(): number;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\r\n     */\r\n    getMapTypeId(): google.maps.MapTypeId | string;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\r\n     */\r\n    getProjection(): google.maps.Projection | null;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\r\n     */\r\n    getStreetView(): google.maps.StreetViewPanorama;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\r\n     */\r\n    getTilt(): number;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\r\n     */\r\n    getZoom(): number;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\r\n     */\r\n    get controls(): google.maps.MVCArray<Node>[];\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\r\n     */\r\n    get data(): google.maps.Data;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\r\n     */\r\n    get mapTypes(): google.maps.MapTypeRegistry;\r\n    /**\r\n     * See\r\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\r\n     */\r\n    get overlayMapTypes(): google.maps.MVCArray<google.maps.MapType>;\r\n    private _setSize;\r\n    /** Combines the center and zoom and the other map options into a single object */\r\n    private _combineOptions;\r\n    private _initializeMap;\r\n    private _watchForOptionsChanges;\r\n    private _watchForCenterChanges;\r\n    private _watchForZoomChanges;\r\n    /** Asserts that the map has been initialized. */\r\n    private _assertInitialized;\r\n}\r\n"]}