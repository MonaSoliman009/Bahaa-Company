{"version":3,"file":"map-circle.d.ts","sources":["map-circle.d.ts"],"names":[],"mappingssourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/// <reference types=\"googlemaps\" />\r\nimport { NgZone, OnDestroy, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { GoogleMap } from '../google-map/google-map';\r\n/**\r\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\r\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\r\n */\r\nexport declare class MapCircle implements OnInit, OnDestroy {\r\n    private readonly _map;\r\n    private readonly _ngZone;\r\n    private _eventManager;\r\n    private readonly _options;\r\n    private readonly _center;\r\n    private readonly _radius;\r\n    private readonly _destroyed;\r\n    /**\r\n     * Underlying google.maps.Circle object.\r\n     *\r\n     * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\r\n     */\r\n    circle?: google.maps.Circle;\r\n    set options(options: google.maps.CircleOptions);\r\n    set center(center: google.maps.LatLng | google.maps.LatLngLiteral);\r\n    set radius(radius: number);\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\r\n     */\r\n    centerChanged: Observable<void>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\r\n     */\r\n    circleClick: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\r\n     */\r\n    circleDblclick: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\r\n     */\r\n    circleDrag: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\r\n     */\r\n    circleDragend: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\r\n     */\r\n    circleDragstart: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\r\n     */\r\n    circleMousedown: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\r\n     */\r\n    circleMousemove: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\r\n     */\r\n    circleMouseout: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\r\n     */\r\n    circleMouseover: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\r\n     */\r\n    circleMouseup: Observable<google.maps.MouseEvent>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\r\n     */\r\n    radiusChanged: Observable<void>;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\r\n     */\r\n    circleRightclick: Observable<google.maps.MouseEvent>;\r\n    constructor(_map: GoogleMap, _ngZone: NgZone);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\r\n     */\r\n    getBounds(): google.maps.LatLngBounds;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\r\n     */\r\n    getCenter(): google.maps.LatLng;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\r\n     */\r\n    getDraggable(): boolean;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\r\n     */\r\n    getEditable(): boolean;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\r\n     */\r\n    getRadius(): number;\r\n    /**\r\n     * @see\r\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\r\n     */\r\n    getVisible(): boolean;\r\n    private _combineOptions;\r\n    private _watchForOptionsChanges;\r\n    private _watchForCenterChanges;\r\n    private _watchForRadiusChanges;\r\n    private _assertInitialized;\r\n}\r\n"]}