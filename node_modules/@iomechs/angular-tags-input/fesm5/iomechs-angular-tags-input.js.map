{"version":3,"file":"iomechs-angular-tags-input.js","sources":["ng://@iomechs/angular-tags-input/lib/un-added-tags.pipe.ts","ng://@iomechs/angular-tags-input/lib/angular-tags-input.service.ts","ng://@iomechs/angular-tags-input/lib/tag-input/tag-input.component.ts","ng://@iomechs/angular-tags-input/lib/constants.ts","ng://@iomechs/angular-tags-input/lib/dropdown-items-filter.pipe.ts","ng://@iomechs/angular-tags-input/lib/dropdown/dropdown.component.ts","ng://@iomechs/angular-tags-input/lib/angular-tags-input.component.ts","ng://@iomechs/angular-tags-input/lib/tag/tag.component.ts","ng://@iomechs/angular-tags-input/lib/keyboard-active-class/keyboard-active-class.directive.ts","ng://@iomechs/angular-tags-input/lib/angular-tags-input.module.ts","ng://@iomechs/angular-tags-input/public-api.ts","ng://@iomechs/angular-tags-input/iomechs-angular-tags-input.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\nimport { AngularTagsInputConfig } from './tags-input-interfaces';\n\n@Pipe({\n  name: 'unAddedTags'\n})\nexport class UnAddedTagsPipe implements PipeTransform {\n  transform(tagsList: Array<any>, args: {tagsAdded: Array<any>, config: AngularTagsInputConfig}): any {\n    const result = [];\n    const {tagsAdded, config} = args;\n\n    // if the tagsList is falsy, return empty list\n    if (!tagsList) {\n      return [];\n    }\n\n    // if we have to show selected tags (adds selected: true to every item (or nested tag))\n    if (config.showTagsSelectedInDD) {\n      tagsList = this.setSelectedTags(tagsList, config, tagsAdded);\n    }\n\n    // if we don't have to hide tags, send the tagsList (final, processed) back\n    if (!config.hideAddedTags) {\n      return tagsList;\n    }\n\n    /**\n     * if we have to filter out the already selected tags in the dropdown, we'll filter these out\n     * and thus the already selected tags won't go back in the results for dropdown\n     */\n    for (let i = 0, len = tagsList.length; i < len; ++i) {\n      const currentTagItem = {...tagsList[i]};  // making sure we're not modifying the original object here\n      if (!this.isTagAlreadySelected(currentTagItem, tagsAdded, config)) { // if the tag to add isn't added already\n        currentTagItem.tiSelected = false;\n        if (config.nestedTagProperty && currentTagItem[config.nestedTagProperty]) {\n          currentTagItem[config.nestedTagProperty] = currentTagItem[config.nestedTagProperty].filter((tagItem) => {\n            return !this.isTagAlreadySelected(tagItem, tagsAdded, config);\n          });\n        }\n        result.push(currentTagItem);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares a tag against all the tags added based on config provided\n   * @param currentTag - the tag to check if it exists in the selection\n   * @param tagsAdded - an array of the tags added to the selection\n   * @param config - the config provided to the Angular Tags Input component\n   * @return boolean - if the tag is added already\n   */\n  isTagAlreadySelected(currentTag, tagsAdded, config: AngularTagsInputConfig) {\n    return tagsAdded.find(tagItem => {\n      let matchFound = false;\n      matchFound = this.areTagsMatching(currentTag, tagItem, config);\n      if (matchFound) {\n        return true;\n      } else if (tagItem[config.nestedTagProperty]) {\n        return this.isTagAlreadySelected(currentTag, tagItem[config.nestedTagProperty], config);\n      }\n      return false;\n    });\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the two tags based on the identifier provided in the config\n   * @param currentTag - the tag in the iteration to compare\n   * @param tagItem - the tag (already selected) to compare with\n   * @param config - the config provided to the Angular Tags Input component\n   * @return boolean - if the tags passed are the same.\n   */\n  areTagsMatching(currentTag, tagItem, config) {\n    if (typeof tagItem[config.identifier] === 'number') {\n      // handling if the type of identifier is a number\n      return tagItem[config.identifier] === +currentTag[config.identifier];\n    } else if (typeof tagItem[config.identifier] === 'string' && typeof currentTag[config.identifier] === 'string') {\n      // handling if the type of identifier is a string\n      return tagItem[config.identifier].toLowerCase() === currentTag[config.identifier].toLowerCase();\n    }\n  }\n\n  setSelectedTags(tags, config: AngularTagsInputConfig, tagsAdded, isSelected = null) {\n    return tags.map(currentTag => {\n      currentTag.tiSelected = !!this.isTagAlreadySelected(currentTag, tagsAdded, config);\n      if (config.showTagsSelectedInDD && !!isSelected) {\n        currentTag.tiSelected = true;\n      }\n      if (currentTag[config.nestedTagProperty] && currentTag[config.nestedTagProperty].length) {\n        currentTag[config.nestedTagProperty] = this.setSelectedTags(\n          currentTag[config.nestedTagProperty],\n          config,\n          tagsAdded,\n          currentTag.tiSelected\n        );\n      }\n      return currentTag;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularTagsInputConfig } from './tags-input-interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AngularTagsInputService {\n  debugMode = false;\n  constructor() { }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Finds a tag by Id\n   * @param tagsData Array of the tags (could be heirarchical)\n   * @param tagId identifier of the tag to be found\n   * @param config the tags input config\n   * @returns the tag found, or `undefined`\n   */\n  findTagById(tagsData, tagId, config: AngularTagsInputConfig) {\n    for (let i = 0, len = tagsData.length; i < len; ++i) {\n      // tslint:disable-next-line:triple-equals\n      if (tagsData[i][config.identifier] == tagId) {\n        return tagsData[i];\n      }\n      if (tagsData[i][config.nestedTagProperty]) {\n        const nestedParentFound = this.findTagById(tagsData[i][config.nestedTagProperty], tagId, config);\n        if (nestedParentFound) {\n          return nestedParentFound;\n        }\n      }\n    }\n  }\n\n  setDebugMode(mode: boolean) {\n    this.debugMode = mode;\n  }\n\n  log(logMessage: any, logLabel = '') {\n    if (!this.debugMode) {\n      return;\n    }\n    console.log(logLabel, logMessage);\n  }\n\n  findParent(tagsArray, tagItem, config: AngularTagsInputConfig) {\n    for (let i = 0, len = tagsArray.length; i < len; ++i) {\n      // tslint:disable-next-line:triple-equals\n      if (tagsArray[i][config.identifier] == tagItem[config.identifier]) {\n        return tagsArray[i];\n      }\n      if (tagsArray[i][config.nestedTagProperty]) {\n        const nestedParentFound = this.findParent(tagsArray[i][config.nestedTagProperty], tagItem, config);\n        if (nestedParentFound) {\n          return nestedParentFound;\n        }\n      }\n    }\n  }\n\n  getMainTagAfterAdding(tagsArray, tagAdded, tags, config: AngularTagsInputConfig) {\n    if (tagAdded[config.nestedTagParentProp]) {\n      const parentTag = this.findTagById(\n        tagsArray,\n        tagAdded[config.nestedTagParentProp],\n        config\n      );\n      if (!parentTag) {\n        return;\n      }\n      const parentTagChildren = parentTag[config.nestedTagProperty].length;\n      const childrensSelected = parentTag[config.nestedTagProperty].filter((tagItem) => {\n        // tslint:disable-next-line:triple-equals\n        return !!tagItem.tiSelected;\n      }).length;\n      if (parentTagChildren > 0 && childrensSelected > 0 && childrensSelected === parentTagChildren) {\n        parentTag.tiSelected = true;\n        if (!parentTag[config.nestedTagParentProp]) {\n          return parentTag;\n        } else {\n          return this.getMainTagAfterAdding(tagsArray, parentTag, tags, config);\n        }\n      }\n    }\n    return tagAdded;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\nimport { AngularTagItem, AngularTagsInputConfig } from '../tags-input-interfaces';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'ti-tag-input',\n  templateUrl: './tag-input.component.html',\n  styleUrls: ['./tag-input.component.scss']\n})\nexport class TagInputComponent implements OnInit, OnChanges {\n  @Input() inputClass = 'default';\n  @Input() config: AngularTagsInputConfig;\n  @Input() disabled = false;\n  @Output() valueChanged = new EventEmitter<string>();\n  @Output() inputFocused = new EventEmitter<string>();\n  @Output() inputBlurred = new EventEmitter<string>();\n  @Output() tagEntered = new EventEmitter<AngularTagItem>();\n  @ViewChild('inputEl', { static: true }) inputEl: ElementRef;\n  tagInputForm = new FormGroup({\n    tagInputVal: new FormControl('')\n  });\n  lastValueEmitted: string;\n  constructor() { }\n\n  ngOnInit() {\n    this.tagInputForm.get('tagInputVal')\n      .valueChanges\n      .pipe(\n        debounceTime(400),\n        distinctUntilChanged()\n      )\n      .subscribe((value) => {\n        this.lastValueEmitted = value;\n        this.valueChanged.emit(value);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.disabled !== undefined) {\n      if (changes.disabled.currentValue === true) {\n        this.tagInputForm.get('tagInputVal').disable();\n      } else {\n        this.tagInputForm.get('tagInputVal').enable();\n      }\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Emits the input focused event with the current search term value\n   */\n  emitInputFocused() {\n    if (this.disabled) {\n      return;\n    }\n    const searchTerm = this.tagInputForm.get('tagInputVal').value;\n    this.inputFocused.emit(searchTerm);\n\n    if (this.lastValueEmitted !== searchTerm) {\n      this.valueChanged.emit(searchTerm);\n      this.lastValueEmitted = searchTerm;\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc When the user presses enter key after entering the tag name\n   * @param inputEl - Reference to the input element so we can fetch the value\n   */\n  onEnterKeyPress() {\n    if (this.config.onlyFromAutoComplete) {\n      return;\n    }\n    const tagName = this.inputEl.nativeElement.value;\n    this.tagEntered.emit({\n      [this.config.displayProperty]: tagName,\n      [this.config.identifier]: tagName.toLowerCase(),\n      newTag: true\n    });\n    this.resetInput();\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Resets the input value\n   */\n  resetInput() {\n    this.inputEl.nativeElement.value = '';\n  }\n\n  emitInputBlurred($event) {\n    this.inputBlurred.emit($event);\n  }\n}\n","export const KEY_CODES = {\n  ARROW_DOWN: 'ArrowDown',\n  ARROW_UP: 'ArrowUp',\n  ENTER: 'Enter',\n  ESCAPE: 'Escape',\n  TAB: 'Tab'\n};\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { AngularTagItem, AngularTagsInputConfig } from './tags-input-interfaces';\n\n@Pipe({\n  name: 'dropdownItemsFilter'\n})\nexport class DropdownItemsFilterPipe implements PipeTransform {\n\n  transform(tagItems: Array<AngularTagItem> = [], config: AngularTagsInputConfig, searchTerm = ''): any {\n    if (!searchTerm) {\n      return tagItems;\n    }\n    return [...tagItems]\n      .map((item: AngularTagItem) => this.getFilteredItem({...item}, config, searchTerm))\n      .filter(item => !!item);\n  }\n\n  getFilteredItem(item: AngularTagItem, config: AngularTagsInputConfig, searchTerm: string = '') {\n    if (searchTerm === '') {\n      return item;\n    }\n    let matches = false;\n    if (item[config.displayProperty].toLowerCase().includes(searchTerm.toLowerCase())) {\n      return item;\n    }\n\n    if (item[config.nestedTagProperty]) {\n      const childItems = item[config.nestedTagProperty].map(nestedItem => {\n        return this.getFilteredItem(nestedItem, config, searchTerm);\n      }).filter(nestedItem => !!nestedItem);\n\n      matches = childItems.length > 0;\n\n      if (matches) {\n        return {\n          ...item,\n          [config.nestedTagProperty]: [...childItems]\n        };\n      }\n    }\n\n    return null;\n  }\n\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { ListKeyManager, ListKeyManagerOption } from '@angular/cdk/a11y';\nimport { UP_ARROW, DOWN_ARROW, ENTER } from '@angular/cdk/keycodes';\nimport {\n  AngularTagItem,\n  AngularTagsInputConfig,\n  AngularTagsInputDDFns\n} from '../tags-input-interfaces';\nimport { KEY_CODES } from '../constants';\nimport { AngularTagsInputService } from '../angular-tags-input.service';\nimport { DropdownItemsFilterPipe } from '../dropdown-items-filter.pipe';\n\n@Component({\n  selector: 'ti-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent\n  implements OnInit, AngularTagsInputDDFns, OnChanges {\n  @Input() config: AngularTagsInputConfig;\n  @Input() listItems: Array<AngularTagItem> = [];\n  @Input() inputVal = '';\n  @Input() dropDownTemplate: TemplateRef<any>;\n  @Input() tagsLoading: boolean;\n  @Input() keyPress: any;\n  @Output() itemAdded = new EventEmitter<AngularTagItem>();\n  @Output() itemClicked = new EventEmitter<AngularTagItem>();\n  @ViewChild('defaultTagOptionTemplate', { static: true }) defaultTagOptionTemplate: TemplateRef<any>;\n  dropdownItemsFilter = new DropdownItemsFilterPipe();\n  ddIdPrefix: string;\n  context: any;\n  activeIndex: number;\n  identifierSeparator = '__';\n  keyboardEventsManager: ListKeyManager<ListKeyManagerOption>;\n  itemsMap: Map<string, any> = new Map<string, any>();\n  constructor(\n    private tagsInputService: AngularTagsInputService\n  ) {}\n\n  ngOnInit() {\n    if (!this.dropDownTemplate) {\n      // if there's no template provided, assign the default one\n      this.dropDownTemplate = this.defaultTagOptionTemplate;\n    }\n    this.context = {\n      items: [...this.listItems],\n      config: this.config,\n      tagsLoading: this.tagsLoading,\n      fns: {\n        onItemClicked: this.onItemClicked.bind(this)\n      }\n    };\n    this.keyboardEventsManager = new ListKeyManager([...this.listItems as any]);\n    this.populateItemsMap(this.listItems);\n    this.ddIdPrefix = this.getRandomString();\n    this.tagsInputService.log(this.itemsMap, 'items populated initially');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.listItems && !changes.listItems.firstChange) {\n      // if the list items change, update the context items (because they're not automatically updated)\n      this.filterItems(this.inputVal, changes.listItems.currentValue);\n      this.populateItemsMap(changes.listItems ? changes.listItems.currentValue : this.listItems);\n    }\n\n    if (\n      changes.inputVal && !changes.inputVal.firstChange\n    ) {\n      // if the list items change, update the context items (because they're not automatically updated)\n      this.filterItems(changes.inputVal.currentValue);\n      this.populateItemsMap(changes.listItems ? changes.listItems.currentValue : this.listItems);\n    }\n  }\n\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Updates the items property for the context provided to the dropdown template\n   * @param items - the list of items to be assigned\n   */\n\n  filterItems(searchTerm = this.inputVal, items = this.listItems) {\n    this.context.items = [...this.dropdownItemsFilter.transform(\n      items,\n      this.config,\n      searchTerm\n    )];\n    this.ddIdPrefix = this.getRandomString();\n  }\n\n  private getRandomString() {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n  }\n\n  populateItemsMap(items, prefix = null) {\n    if (prefix === null) {\n      prefix = '';\n    } else {\n      prefix += this.identifierSeparator;\n    }\n    items.map((item, index) => {\n      const newPrefix = prefix + index;\n      item.tiIdentifier = newPrefix;\n      this.itemsMap[newPrefix] = item;\n      if (item[this.config.nestedTagProperty] && item[this.config.nestedTagProperty].length) {\n        this.populateItemsMap(item[this.config.nestedTagProperty], newPrefix);\n      }\n    });\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc When an option is clicked from the options dropdown\n   * @param item - item clicked\n   */\n  onItemClicked(item: AngularTagItem, $event = null) {\n    if ($event) {\n      $event.stopImmediatePropagation(); // for nested items\n    }\n    this.itemClicked.emit(item);\n  }\n\n  handleKeyUp(event: KeyboardEvent) {\n    event.stopImmediatePropagation();\n    if (!this.keyboardEventsManager) {\n      return;\n    }\n    const isKeyDown = this.isKeyDown(event);\n    const isKeyUp = this.isKeyUp(event);\n    const isKeyEnter = this.isKeyEnter(event);\n\n    if (isKeyDown || isKeyUp) {\n      // passing the event to key manager so we get a change fired\n      this.setActiveElement(event);\n    } else if (\n      isKeyEnter &&\n      this.keyboardEventsManager.activeItem\n    ) {\n      this.itemClicked.emit(\n        this.keyboardEventsManager.activeItem as AngularTagItem\n      );\n    }\n  }\n\n  isKeyDown(event) {\n    // tslint:disable-next-line: deprecation\n    return event.key === KEY_CODES.ARROW_DOWN || event.keyCode === DOWN_ARROW;\n  }\n\n  isKeyUp(event) {\n    // tslint:disable-next-line: deprecation\n    return event.key === KEY_CODES.ARROW_UP || event.keyCode === UP_ARROW;\n  }\n\n  isKeyEnter(event) {\n    // tslint:disable-next-line: deprecation\n    return event.key === KEY_CODES.ENTER || event.keyCode === ENTER;\n  }\n\n  setActiveElement(event) {\n    const isKeyDown = this.isKeyDown(event);\n    const isKeyUp = this.isKeyUp(event);\n    const previousActiveItem = { ...this.keyboardEventsManager.activeItem } as AngularTagItem;\n    if (isKeyDown) {\n      this.setNextActiveElement(previousActiveItem, this.listItems);\n    } else if (isKeyUp) {\n      this.setPreviousActiveElement(previousActiveItem, this.listItems);\n    }\n  }\n\n  setNextActiveElement(currentActiveItem: AngularTagItem, items) {\n    const identifier = currentActiveItem.tiIdentifier;\n    if (!identifier) {\n      items[0].tiKeyboardActive = true;\n      this.keyboardEventsManager.setFirstItemActive();\n      return;\n    }\n    const keyIdentifierArr = identifier.split(this.identifierSeparator);\n    let keyIdentifier;\n    let treeItems;\n    let index;\n    keyIdentifier = keyIdentifierArr.length > 1 ?\n      [...keyIdentifierArr].splice(0, keyIdentifierArr.length - 1).join(this.identifierSeparator) :\n      keyIdentifierArr[0];\n    treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}${this.identifierSeparator}`).test(key));\n    if (!treeItems.length) {\n      treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}$`).test(key));\n    }\n    index = treeItems.findIndex(id => id === identifier);\n    if (index === treeItems.length - 1) {\n      this.setActiveElementRecursively(this.findNextParent(keyIdentifierArr), this.listItems);\n    } else  {\n      this.setActiveElementRecursively(treeItems[index + 1], this.listItems);\n    }\n  }\n\n  findNextParent(keyIdentifierArr) {\n    let keyIdentifier;\n    let treeItems;\n    if (keyIdentifierArr.length === 1) {\n      const nextIdentifier = `${+keyIdentifierArr[0] + 1}`;\n      if (this.itemsMap[nextIdentifier]) {\n        return nextIdentifier;\n      }\n      return keyIdentifierArr[0];\n    }\n    const nextIdArr = [...keyIdentifierArr].splice(0, keyIdentifierArr.length - 1);\n    nextIdArr[nextIdArr.length - 1] = `${(+nextIdArr[nextIdArr.length - 1]) + 1}`;\n    keyIdentifier = nextIdArr.join(this.identifierSeparator);\n    treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}`).test(key));\n    if (treeItems.length) {\n      return treeItems[0];\n    } else {\n      return this.findNextParent([...keyIdentifierArr.splice(0, keyIdentifierArr.length - 1)]);\n    }\n  }\n\n  setPreviousActiveElement(currentActiveItem: AngularTagItem, items) {\n    const identifier = currentActiveItem.tiIdentifier;\n    if (!identifier) {\n      items[items.length - 1].tiKeyboardActive = true;\n      this.keyboardEventsManager.setActiveItem(items[items.length - 1]);\n      return;\n    }\n\n    const keyIdentifierArr = identifier.split(this.identifierSeparator);\n    let keyIdentifier;\n    let treeItems;\n    let index;\n    keyIdentifier = keyIdentifierArr.length > 1 ?\n      [...keyIdentifierArr].splice(0, keyIdentifierArr.length - 1).join(this.identifierSeparator) :\n      keyIdentifierArr[0];\n    treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}(${this.identifierSeparator})?`).test(key));\n    if (!treeItems.length) {\n      treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}$`).test(key));\n    }\n    index = treeItems.findIndex(id => id === identifier);\n    if (treeItems.length === 1 || index === 0) {\n      this.setActiveElementRecursively(this.findPrevousParentLastChild(keyIdentifierArr, identifier), this.listItems);\n    } else {\n      this.setActiveElementRecursively(treeItems[index - 1], this.listItems);\n    }\n  }\n\n  findPrevousParentLastChild(keyIdentifierArr, prevItemIdentifier: string) {\n    let keyIdentifier;\n    const isOnlyItem = keyIdentifierArr.length === 1;\n    const prevIdArr = !!isOnlyItem ?\n      [...keyIdentifierArr] :\n      [...keyIdentifierArr].splice(0, keyIdentifierArr.length - 1);\n    prevIdArr[prevIdArr.length - 1] = !!isOnlyItem ? `${(+prevIdArr[prevIdArr.length - 1]) - 1}` : prevIdArr[prevIdArr.length - 1];\n    keyIdentifier = prevIdArr.join(this.identifierSeparator);\n    let treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}${this.identifierSeparator}`).test(key));\n    if (!treeItems.length) {\n      treeItems = Object.keys(this.itemsMap).filter(key => new RegExp(`^${keyIdentifier}$`).test(key));\n    }\n    if (treeItems.length) {\n      if (treeItems.indexOf(prevItemIdentifier) !== -1) {\n        return keyIdentifier;\n      }\n      return treeItems[treeItems.length - 1];\n    } else if (keyIdentifierArr.length > 1) {\n      return this.findPrevousParentLastChild([...keyIdentifierArr.splice(0, keyIdentifierArr.length - 1)], prevItemIdentifier);\n    } else {\n      keyIdentifier = keyIdentifierArr.join(this.identifierSeparator);\n      return keyIdentifier;\n    }\n  }\n\n  setActiveElementRecursively(identifier, items) {\n    for (let i = 0, len = items.length; i < len; ++i ) {\n      items[i].tiKeyboardActive = false;\n      if (items[i].tiIdentifier === identifier) {\n        this.keyboardEventsManager = new ListKeyManager([...items as any]);\n        items[i].tiKeyboardActive = true; // select next item\n        this.keyboardEventsManager.setActiveItem(items[i] as any);\n      }\n      if (items[i][this.config.nestedTagProperty] && items[i][this.config.nestedTagProperty].length) {\n        this.setActiveElementRecursively(identifier, items[i][this.config.nestedTagProperty]);\n      }\n    }\n  }\n}\n","import { ScrollStrategy, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  HostListener,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NG_VALIDATORS, Validator, FormControl } from '@angular/forms';\n\nimport { AngularTagsInputService } from './angular-tags-input.service';\nimport { TagInputComponent } from './tag-input/tag-input.component';\nimport { AngularTagItem, AngularTagsInputConfig } from './tags-input-interfaces';\nimport { UnAddedTagsPipe } from './un-added-tags.pipe';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { KEY_CODES } from './constants';\n\n@Component({\n  selector: 'ti-angular-tags-input',\n  templateUrl: './angular-tags-input.component.html',\n  styleUrls: ['./angular-tags-input.component.scss'],\n  providers: [\n    getAngularTagsInputValueAccessor(),\n    getAngularTagsInputValidatorsProvider()\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AngularTagsInputComponent implements OnInit, AfterViewInit, ControlValueAccessor, OnChanges, Validator {\n  @ViewChild(DropdownComponent, { static: false }) dropdown: DropdownComponent;\n  @Input() config: AngularTagsInputConfig;\n  @Input() tagsData: Array<any> = [];\n  @Input() disabled = false;\n  @Input() tagsLoading: boolean;\n  @Input() dropDownTemplate: TemplateRef<any> = null;\n  @Input() tagItemTemplate: TemplateRef<any> = null;\n  @Input() required = false;\n  @Output() tagRemoved = new EventEmitter();\n  @Output() tagAdded = new EventEmitter();\n  @Output() valueChanged = new EventEmitter();\n  @Output() itemClicked = new EventEmitter();\n  @ViewChild(TagInputComponent, { static: true }) tagInput: TagInputComponent;\n  tags: Array<AngularTagItem> = [];\n  isInputFocused: boolean;\n  inputVal: string;\n  defaultConfig: AngularTagsInputConfig = {\n    defaultClass: 'angular-tags-input',\n    additionalClasses: '',\n    displayProperty: 'value',\n    identifier: 'id',\n    onlyFromAutoComplete: false,\n    placeholder: 'Search',\n    hideAddedTags: true,\n    nestedTagProperty: '',\n    showTagsSelectedInDD: false,\n    hideTags: false,\n    maxItems: null,\n    nestedTagParentProp: '',\n    keyboardActiveClass: 'angular-tags-dropdown__list__item--active'\n  };\n  onChange: (items: AngularTagItem[]) => void;\n  dropdownOverlayPosition = [\n    { offsetY: 12, originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n    { offsetY: -28, originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n    { offsetY: 28, originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n    { offsetY: -28, originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n  ];\n  ddScrollStrategy: ScrollStrategy;\n  isDropdownOpen: boolean;\n  dropdownShownYet: boolean;\n  unAddedTagsPipe = new UnAddedTagsPipe();\n  constructor(\n    private readonly sso: ScrollStrategyOptions,\n    private tagsService: AngularTagsInputService\n  ) { }\n\n\n  @HostListener('keyup', ['$event'])\n  keyEvent(event) {\n    this.inputKeyPress(event);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // if there's no change in the tagsData, do nothing\n    if (!changes.tagsData || !this.isInputFocused) {\n      return;\n    }\n\n    // If the previous walue was `null` or `undefined`, we're initializing that as an array here\n    // so we can avoid breaking the process further.\n    if (!changes.tagsData.previousValue) {\n      changes.tagsData.previousValue = [];\n    }\n    // if we have the value of the tags changed, we need to show the dropdown immediately\n    // we don't show this on the first change, because that's when the first value is assigned\n    if (\n      changes.tagsData && changes.tagsData.currentValue !== changes.tagsData.previousValue\n      && !changes.tagsData.firstChange\n    ) {\n      // if the values don't match, show the dropdown\n      if (changes.tagsData.currentValue.length !== changes.tagsData.previousValue.length && !!this.dropdownShownYet) {\n        return this.showDropdown(changes.tagsData.currentValue);\n      }\n\n      if (changes.tagsData.previousValue.length === 0) {\n        return;\n      }\n\n      /* since the values are array, we need to compare the elements within\n       * avoiding the usage of any external library, matching the elements using identifier\n       * of the elements here\n       */\n      for (let i = 0, len = changes.tagsData.currentValue.length; i < len; ++i) {\n        if (changes.tagsData.currentValue[i][this.config.identifier] !== changes.tagsData.previousValue[i][this.config.identifier]) {\n          // as soon as the difference in elements is found, show the element and stop further execution of for loop\n          return this.showDropdown(changes.tagsData.currentValue);\n        }\n      }\n    }\n  }\n\n  onFocusChange(val: boolean) {\n    this.isInputFocused = val;\n    if (!val && this.config.hideDDOnBlur) {\n      setTimeout(() => {\n        this.hideDropdown();\n      }, 400);\n    }\n  }\n\n  onInputValueChanged(val: string) {\n    this.inputVal = val;\n    this.valueChanged.emit(val);\n  }\n\n  ngOnInit() {\n    this.config = { // applying the configuration provided\n      ...this.defaultConfig,\n      ...this.config\n    };\n    this.ddScrollStrategy = this.sso.reposition();\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Triggers when the value of the form control (or ngModel) is changed.\n   * We're using the handler to assign the values to the tags array that we have.\n   */\n  writeValue(tags: Array<any>): void {\n    tags = tags ? tags : [];\n    tags = Array.isArray(tags) ? tags : [tags];\n    this.tags = tags.map((tag) => {\n      return {\n        ...tag,\n        ...{\n          [this.config.identifier]: tag[this.config.identifier],\n          [this.config.displayProperty]: tag[this.config.displayProperty],\n        }\n      };\n    });\n\n    if (this.config.showTagsSelectedInDD) {\n      setTimeout(() => {\n        this.tags.map((tag) => {\n          this.selectRelatedTags(tag);\n        });\n      });\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Registers the on change function to the value accessor\n   */\n  registerOnChange( fn: any ): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Validator function for the form control\n   * Doesn't do anything if the control is not required\n   * If it is required, checks if the control contains value\n   */\n  validate(control: FormControl) {\n    if (this.required === false) {\n      return null;\n    }\n    return (!!control.value && control.value.length) ? null : {\n      required: true,\n    };\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Triggers when the tag input is focused\n   */\n  onInputFocus() {\n    if (this.config.clearInputOnFocus) {\n      if (this.tagInput.lastValueEmitted !== '') {\n        this.tagInput.tagInputForm.get('tagInputVal').setValue('');\n      }\n      this.tagInput.resetInput();\n    }\n    if (this.config.clearTagsOnFocus) {\n      this.tags.length = 0;\n    }\n    this.showDropdown();\n    this.onFocusChange(true);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Shows the dropdown with options listing\n   */\n  showDropdown(recentTags: Array<any> = null) {\n    const unAddedTags = this.unAddedTagsPipe.transform(\n      !!recentTags ? recentTags : this.tagsData,\n      {\n        tagsAdded: this.tags,\n        config: this.config\n      }\n    );\n    if (unAddedTags.length) { // only show dropdown when we have data to show\n      this.isDropdownOpen = true;\n    }\n    if (!this.dropdownShownYet) {\n      this.dropdownShownYet = true;\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Hides the options listing dropdown\n   */\n  hideDropdown() {\n    this.isDropdownOpen = false;\n    this.tagsData = this.removeKeyboardSelection(this.tagsData);\n  }\n\n  removeKeyboardSelection(items: Array<AngularTagItem>) {\n    return items.map((tag: AngularTagItem) => {\n      if (tag[this.config.nestedTagProperty] && tag[this.config.nestedTagProperty].length) {\n        tag[this.config.nestedTagProperty] = this.removeKeyboardSelection(tag[this.config.nestedTagProperty]);\n      }\n      return {\n        ...tag,\n        tiKeyboardActive: false\n      };\n    });\n  }\n\n  ngAfterViewInit() {\n    if (!!this.config || !this.onChange) {\n      console.warn('Please use ngModel or FormControlName with <ti-angular-tags-input>');\n    }\n    if (this.config.nestedTagProperty) {\n      // we need the parent property to be able to unselect the parent when a child tag is unselected\n      if (!this.config.nestedTagParentProp) {\n        // tslint:disable-next-line:max-line-length\n        throw new Error('nestedTagProperty provided but nestedTagParentProp not provided.\\nThis will cause the parent tag to not remove if any of the children is removed');\n      }\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Adds the tag in the tags list (tags array).\n   * Avoids duplicate tags addition\n   * @param tag - tag to add\n   */\n  addTag(tag: AngularTagItem) {\n    if (this.config.showTagsSelectedInDD) {\n      tag.tiSelected = true; // marks the element as selected\n    }\n    if (this.config.maxItems > 0 && this.tags.length === this.config.maxItems) {\n      return;\n    }\n    if (!this.tags.find(tagItem => tagItem[this.config.identifier] === tag[this.config.identifier])) {\n      this.tags = [...this.tags, tag];\n      this.onChange(\n        this.tags\n      );\n    }\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Removes the tags from the tags list\n   * @param tag - tag to remove\n   */\n  removeTag(tag: AngularTagItem) {\n    this.tags = this.tags.filter((tagItem) => tagItem[this.config.identifier] !== tag[this.config.identifier]);\n    // when we've removed all the tags, we want to get the default tags\n    if (this.tags.length === 0) {\n      this.tagInput.resetInput();\n      this.valueChanged.emit('');\n    }\n    this.onChange(\n      this.tags\n    );\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Triggers when the item is clicked from the dropdown\n   * @param tag - tag selected\n   */\n  onItemClicked(tag: AngularTagItem) {\n    // if we don't have to toggle, add the item as tag right away\n    if (this.config.toggleSelectionOnClick) {\n      // we have to toggle selection. First, let's see if the tag doesn't exist already in the selected tags\n      if (!tag.tiSelected && !this.tags.find(tagItem => tagItem[this.config.identifier] === tag[this.config.identifier])) {\n        this.addTag(tag);\n        this.selectRelatedTags(tag);\n        this.tagAdded.emit(\n          this.tagsService.getMainTagAfterAdding(\n            this.tagsData,\n            tag,\n            this.tags,\n            this.config\n          )\n        );\n      } else {  // if the tag is already selected, remove\n        this.removeTag(tag);\n        this.removeTagSelection(tag);\n        this.tagRemoved.emit(tag);\n      }\n    } else {\n      this.addTag(tag);\n      this.selectRelatedTags(tag);\n      this.tagAdded.emit(\n        this.tagsService.getMainTagAfterAdding(\n          this.tagsData,\n          tag,\n          this.tags,\n          this.config\n        )\n      );\n    }\n    this.tagInput.resetInput();\n    this.itemClicked.emit(tag);\n    this.hideDropdown();\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Removes the tag seleced state (and of the children)\n   * @param tag - the tag to unmark as selected\n   */\n  removeTagSelection(tag: AngularTagItem, ignoreChildren = false, ignoreParent = false) {\n    tag.tiSelected = false;\n    if (!ignoreChildren && tag[this.config.nestedTagProperty]) {\n      for (let i = 0, len = tag[this.config.nestedTagProperty].length; i < len; ++i) {\n        this.removeTag(tag[this.config.nestedTagProperty][i]);\n        this.removeTagSelection(tag[this.config.nestedTagProperty][i], ignoreChildren);\n      }\n    }\n    if (tag[this.config.nestedTagParentProp] && !ignoreParent) {\n      const parentTag = this.tagsService.findTagById(\n        this.tagsData,\n        tag[this.config.nestedTagParentProp],\n        this.config\n      );\n      if (parentTag && parentTag.tiSelected) {\n        this.removeTag(parentTag);\n        this.removeTagSelection(parentTag, true, ignoreParent);\n        parentTag[this.config.nestedTagProperty].map((tagItem) => {\n          // tslint:disable-next-line:triple-equals\n          if (tagItem[this.config.identifier] != tag[this.config.identifier]) {\n            this.addTag(tagItem);\n            this.selectRelatedTags(tagItem, false, true);\n          }\n        });\n      }\n    }\n    this.onChange(\n      this.tags\n    );\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc triggers on close button click of the tags\n   * @param tag - the tag to remove\n   */\n  tagCloseClicked(tag) {\n    this.tagRemoved.emit(tag);\n    this.removeTag(tag);\n    this.removeTagSelection(tag);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Selects/adds the retated tags (parent and/or children)\n   * @param tag - the tag to mark as selected\n   */\n  selectRelatedTags(tag: AngularTagItem, ignoreChildren = false, ignoreParent = false) {\n    if (this.config.showTagsSelectedInDD) {\n      tag.tiSelected = true;\n    }\n    if (tag[this.config.nestedTagProperty] && !ignoreChildren) {\n      for (let i = 0, len = tag[this.config.nestedTagProperty].length; i < len; ++i) {\n        if (this.config.showParentTagsOnly) {\n          // remove the children if we only have to keep parent\n          this.removeTag(tag[this.config.nestedTagProperty][i]);\n          // making sure we're targeting only children, ignoring parents\n          this.selectRelatedTags(tag[this.config.nestedTagProperty][i], false, true);\n        } else {\n          this.addTag(tag[this.config.nestedTagProperty][i]);\n        }\n      }\n    }\n    if (tag[this.config.nestedTagParentProp] && !ignoreParent) {\n      const parentTag = this.tagsService.findTagById(\n        this.tagsData,\n        tag[this.config.nestedTagParentProp],\n        this.config\n      );\n      if (!parentTag) {\n        return;\n      }\n      const parentTagChildren = parentTag[this.config.nestedTagProperty].length;\n      const childrensSelected = this.tags.filter((tagItem) => {\n        // tslint:disable-next-line:triple-equals\n        return tagItem[this.config.nestedTagParentProp] == parentTag[this.config.identifier];\n      }).length;\n      if (\n        ( parentTagChildren > 0 && childrensSelected > 0 ) &&\n        (this.config.childrenCountProperty ?\n          childrensSelected === parentTag[this.config.childrenCountProperty] :\n          childrensSelected === parentTagChildren\n        )\n      ) {\n        this.addTag(parentTag);\n        this.selectRelatedTags(parentTag, false, false);\n      }\n    }\n    this.onChange(\n      this.tags\n    );\n  }\n\n  registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  inputKeyPress($event) {\n    $event.stopImmediatePropagation();\n    if (\n      !this.isDropdownOpen &&\n      (\n        $event.key === KEY_CODES.ARROW_UP ||\n        $event.key === KEY_CODES.ARROW_DOWN\n      )\n    ) {\n      this.isDropdownOpen = true;\n    } else if (\n      this.isDropdownOpen &&\n      $event.key === KEY_CODES.ESCAPE\n    ) {\n      return this.hideDropdown();\n    }\n    // so we have the dropdown shown\n    setTimeout(() => {\n      if (this.dropdown) {\n        this.dropdown.handleKeyUp($event);\n      }\n    }, 10);\n  }\n\n}\n\n\nexport function getAngularTagsInputValueAccessor() {\n  return {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AngularTagsInputComponent),\n    multi: true,\n  };\n}\n\nexport function getAngularTagsInputValidatorsProvider() {\n  return {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => AngularTagsInputComponent),\n    multi: true,\n  };\n}\n","import { Component, EventEmitter, Input, OnInit, Output, TemplateRef, ViewChild } from '@angular/core';\n\nimport { AngularTagItem, AngularTagsInputConfig } from '../tags-input-interfaces';\n\n@Component({\n  selector: 'ti-tag',\n  templateUrl: './tag.component.html',\n  styleUrls: ['./tag.component.scss']\n})\nexport class TagComponent implements OnInit {\n  @Input() config: AngularTagsInputConfig;\n  @Input() tagItem: AngularTagItem;\n  @Input() tagClass = 'default-tag';\n  @Input() tagItemTemplate: TemplateRef<any>;\n  @Output() closeClicked = new EventEmitter<AngularTagItem>();\n  @ViewChild('defaultTagItemTemplate', { static: true }) defaultTagItemTemplate: TemplateRef<any>;\n  context: any;\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.tagItemTemplate) { // if there's no template provided, assign the default one\n      this.tagItemTemplate = this.defaultTagItemTemplate;\n    }\n    this.context = {\n      item: this.tagItem,\n      config: this.config,\n      tagClass: this.tagClass,\n      closeClicked: this.closeClicked\n    };\n  }\n\n}\n","import { Directive, Input, OnChanges, SimpleChanges, ElementRef, ChangeDetectorRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[tiKeyboardActiveClass]'\n})\nexport class KeyboardActiveClassDirective implements OnInit, OnChanges {\n  @Input() isKeyboardActiveItem = false;\n  @Input() tiKeyboardActiveClass: string;\n  constructor(private el: ElementRef, private cdRef: ChangeDetectorRef) { }\n\n  ngOnInit() {\n    if (!this.tiKeyboardActiveClass) {\n      console.warn('tiKeyboardActiveClass needs a class to apply. But no class was passed.');\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (!simpleChanges.isKeyboardActiveItem) {\n      return;\n    }\n    if (simpleChanges.isKeyboardActiveItem.currentValue !== simpleChanges.isKeyboardActiveItem.previousValue) {\n      this.evaluateClassApplication();\n    }\n  }\n\n  evaluateClassApplication() {\n    if (this.isKeyboardActiveItem) {\n      this.el.nativeElement.classList.add(this.tiKeyboardActiveClass);\n      this.el.nativeElement.scrollIntoView(false);\n    } else {\n      this.el.nativeElement.classList.remove(this.tiKeyboardActiveClass);\n    }\n    this.cdRef.markForCheck();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularTagsInputComponent } from './angular-tags-input.component';\nimport { TagComponent } from './tag/tag.component';\nimport { TagInputComponent } from './tag-input/tag-input.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { UnAddedTagsPipe } from './un-added-tags.pipe';\nimport { DropdownItemsFilterPipe } from './dropdown-items-filter.pipe';\nimport { KeyboardActiveClassDirective } from './keyboard-active-class/keyboard-active-class.directive';\n\n@NgModule({\n  declarations: [\n    AngularTagsInputComponent,\n    TagComponent,\n    TagInputComponent,\n    DropdownComponent,\n    UnAddedTagsPipe,\n    DropdownItemsFilterPipe,\n    KeyboardActiveClassDirective\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    OverlayModule\n  ],\n  exports: [AngularTagsInputComponent, KeyboardActiveClassDirective]\n})\nexport class AngularTagsInputModule { }\n","/*\n * Public API Surface of angular-tags-input\n */\n\nexport * from './lib/un-added-tags.pipe';\nexport * from './lib/tags-input-interfaces';\nexport * from './lib/angular-tags-input.service';\nexport * from './lib/angular-tags-input.component';\nexport * from './lib/angular-tags-input.module';\nexport * from './lib/keyboard-active-class/keyboard-active-class.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DropdownItemsFilterPipe as Éµd} from './lib/dropdown-items-filter.pipe';\nexport {DropdownComponent as Éµa} from './lib/dropdown/dropdown.component';\nexport {TagInputComponent as Éµb} from './lib/tag-input/tag-input.component';\nexport {TagComponent as Éµc} from './lib/tag/tag.component';"],"names":["tslib_1.__decorate","tslib_1.__spread","tslib_1.__assign"],"mappings":";;;;;;;;;;IAOA;KAgGC;IA/FC,mCAAS,GAAT,UAAU,QAAoB,EAAE,IAA6D;QAA7F,iBAoCC;QAnCC,IAAM,MAAM,GAAG,EAAE,CAAC;QACX,IAAA,0BAAS,EAAE,oBAAM,CAAS;;QAGjC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,EAAE,CAAC;SACX;;QAGD,IAAI,MAAM,CAAC,oBAAoB,EAAE;YAC/B,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC;SAC9D;;QAGD,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;YACzB,OAAO,QAAQ,CAAC;SACjB;;;;;QAMD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YACnD,IAAM,cAAc,gBAAO,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,cAAc,EAAE,SAAS,EAAE,MAAM,CAAC,EAAE;gBACjE,cAAc,CAAC,UAAU,GAAG,KAAK,CAAC;gBAClC,IAAI,MAAM,CAAC,iBAAiB,IAAI,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;oBACxE,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,UAAC,OAAO;wBACjG,OAAO,CAAC,KAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;qBAC/D,CAAC,CAAC;iBACJ;gBACD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;aAC7B;SACF;QACD,OAAO,MAAM,CAAC;KACf;;;;;;;;;IAUD,8CAAoB,GAApB,UAAqB,UAAU,EAAE,SAAS,EAAE,MAA8B;QAA1E,iBAWC;QAVC,OAAO,SAAS,CAAC,IAAI,CAAC,UAAA,OAAO;YAC3B,IAAI,UAAU,GAAG,KAAK,CAAC;YACvB,UAAU,GAAG,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;YAC/D,IAAI,UAAU,EAAE;gBACd,OAAO,IAAI,CAAC;aACb;iBAAM,IAAI,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBAC5C,OAAO,KAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,MAAM,CAAC,CAAC;aACzF;YACD,OAAO,KAAK,CAAC;SACd,CAAC,CAAC;KACJ;;;;;;;;;IAUD,yCAAe,GAAf,UAAgB,UAAU,EAAE,OAAO,EAAE,MAAM;QACzC,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAE;;YAElD,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACtE;aAAM,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,IAAI,OAAO,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,EAAE;;YAE9G,OAAO,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,KAAK,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;SACjG;KACF;IAED,yCAAe,GAAf,UAAgB,IAAI,EAAE,MAA8B,EAAE,SAAS,EAAE,UAAiB;QAAlF,iBAgBC;QAhBgE,2BAAA,EAAA,iBAAiB;QAChF,OAAO,IAAI,CAAC,GAAG,CAAC,UAAA,UAAU;YACxB,UAAU,CAAC,UAAU,GAAG,CAAC,CAAC,KAAI,CAAC,oBAAoB,CAAC,UAAU,EAAE,SAAS,EAAE,MAAM,CAAC,CAAC;YACnF,IAAI,MAAM,CAAC,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE;gBAC/C,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;aAC9B;YACD,IAAI,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE;gBACvF,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,KAAI,CAAC,eAAe,CACzD,UAAU,CAAC,MAAM,CAAC,iBAAiB,CAAC,EACpC,MAAM,EACN,SAAS,EACT,UAAU,CAAC,UAAU,CACtB,CAAC;aACH;YACD,OAAO,UAAU,CAAC;SACnB,CAAC,CAAC;KACJ;IA9FU,eAAe;QAH3B,IAAI,CAAC;YACJ,IAAI,EAAE,aAAa;SACpB,CAAC;OACW,eAAe,CAgG3B;IAAD,sBAAC;CAhGD;;;ICCE;QADA,cAAS,GAAG,KAAK,CAAC;KACD;;;;;;;;;IAUjB,6CAAW,GAAX,UAAY,QAAQ,EAAE,KAAK,EAAE,MAA8B;QACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;;YAEnD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,KAAK,EAAE;gBAC3C,OAAO,QAAQ,CAAC,CAAC,CAAC,CAAC;aACpB;YACD,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBACzC,IAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;gBACjG,IAAI,iBAAiB,EAAE;oBACrB,OAAO,iBAAiB,CAAC;iBAC1B;aACF;SACF;KACF;IAED,8CAAY,GAAZ,UAAa,IAAa;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,qCAAG,GAAH,UAAI,UAAe,EAAE,QAAa;QAAb,yBAAA,EAAA,aAAa;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QACD,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;KACnC;IAED,4CAAU,GAAV,UAAW,SAAS,EAAE,OAAO,EAAE,MAA8B;QAC3D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;;YAEpD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;gBACjE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;aACrB;YACD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;gBAC1C,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACnG,IAAI,iBAAiB,EAAE;oBACrB,OAAO,iBAAiB,CAAC;iBAC1B;aACF;SACF;KACF;IAED,uDAAqB,GAArB,UAAsB,SAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,MAA8B;QAC7E,IAAI,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;YACxC,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAChC,SAAS,EACT,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,EACpC,MAAM,CACP,CAAC;YACF,IAAI,CAAC,SAAS,EAAE;gBACd,OAAO;aACR;YACD,IAAM,iBAAiB,GAAG,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC;YACrE,IAAM,iBAAiB,GAAG,SAAS,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,UAAC,OAAO;;gBAE3E,OAAO,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC;aAC7B,CAAC,CAAC,MAAM,CAAC;YACV,IAAI,iBAAiB,GAAG,CAAC,IAAI,iBAAiB,GAAG,CAAC,IAAI,iBAAiB,KAAK,iBAAiB,EAAE;gBAC7F,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;gBAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE;oBAC1C,OAAO,SAAS,CAAC;iBAClB;qBAAM;oBACL,OAAO,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;iBACvE;aACF;SACF;QACD,OAAO,QAAQ,CAAC;KACjB;;IA9EU,uBAAuB;QAHnC,UAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,uBAAuB,CA+EnC;kCArFD;CAMA;;;ICiBE;QAZS,eAAU,GAAG,SAAS,CAAC;QAEvB,aAAQ,GAAG,KAAK,CAAC;QAChB,iBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;QAC1C,iBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;QAC1C,iBAAY,GAAG,IAAI,YAAY,EAAU,CAAC;QAC1C,eAAU,GAAG,IAAI,YAAY,EAAkB,CAAC;QAE1D,iBAAY,GAAG,IAAI,SAAS,CAAC;YAC3B,WAAW,EAAE,IAAI,WAAW,CAAC,EAAE,CAAC;SACjC,CAAC,CAAC;KAEc;IAEjB,oCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC;aACjC,YAAY;aACZ,IAAI,CACH,YAAY,CAAC,GAAG,CAAC,EACjB,oBAAoB,EAAE,CACvB;aACA,SAAS,CAAC,UAAC,KAAK;YACf,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B,CAAC,CAAC;KACN;IAED,uCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,QAAQ,KAAK,SAAS,EAAE;YAClC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;aAChD;iBAAM;gBACL,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC;aAC/C;SACF;KACF;;;;;IAMD,4CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;SACR;QACD,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QAC9D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEnC,IAAI,IAAI,CAAC,gBAAgB,KAAK,UAAU,EAAE;YACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnC,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;SACpC;KACF;;;;;;IAOD,2CAAe,GAAf;;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACpC,OAAO;SACR;QACD,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC;QACjD,IAAI,CAAC,UAAU,CAAC,IAAI;YAClB,GAAC,IAAI,CAAC,MAAM,CAAC,eAAe,IAAG,OAAO;YACtC,GAAC,IAAI,CAAC,MAAM,CAAC,UAAU,IAAG,OAAO,CAAC,WAAW,EAAE;YAC/C,SAAM,GAAE,IAAI;gBACZ,CAAC;QACH,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;;;;;IAMD,sCAAU,GAAV;QACE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;KACvC;IAED,4CAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;IAlFQA;QAAR,KAAK,EAAE;yDAAwB;IACvBA;QAAR,KAAK,EAAE;qDAAgC;IAC/BA;QAAR,KAAK,EAAE;uDAAkB;IAChBA;QAAT,MAAM,EAAE;2DAA2C;IAC1CA;QAAT,MAAM,EAAE;2DAA2C;IAC1CA;QAAT,MAAM,EAAE;2DAA2C;IAC1CA;QAAT,MAAM,EAAE;yDAAiD;IAClBA;QAAvC,SAAS,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;sDAAqB;IARjD,iBAAiB;QAL7B,SAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,2gBAAyC;;SAE1C,CAAC;OACW,iBAAiB,CAoF7B;IAAD,wBAAC;CApFD;;ACVO,IAAM,SAAS,GAAG;IACvB,UAAU,EAAE,WAAW;IACvB,QAAQ,EAAE,SAAS;IACnB,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,QAAQ;IAChB,GAAG,EAAE,KAAK;CACX,CAAC;;;ICAF;KAsCC;IApCC,2CAAS,GAAT,UAAU,QAAoC,EAAE,MAA8B,EAAE,UAAe;QAA/F,iBAOC;QAPS,yBAAA,EAAA,aAAoC;QAAkC,2BAAA,EAAA,eAAe;QAC7F,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,QAAQ,CAAC;SACjB;QACD,OAAOC,SAAI,QAAQ,EAChB,GAAG,CAAC,UAAC,IAAoB,IAAK,OAAA,KAAI,CAAC,eAAe,cAAK,IAAI,GAAG,MAAM,EAAE,UAAU,CAAC,GAAA,CAAC;aAClF,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CAAC;KAC3B;IAED,iDAAe,GAAf,UAAgB,IAAoB,EAAE,MAA8B,EAAE,UAAuB;;QAA7F,iBAyBC;QAzBqE,2BAAA,EAAA,eAAuB;QAC3F,IAAI,UAAU,KAAK,EAAE,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QACD,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,EAAE;YACjF,OAAO,IAAI,CAAC;SACb;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;YAClC,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,UAAA,UAAU;gBAC9D,OAAO,KAAI,CAAC,eAAe,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;aAC7D,CAAC,CAAC,MAAM,CAAC,UAAA,UAAU,IAAI,OAAA,CAAC,CAAC,UAAU,GAAA,CAAC,CAAC;YAEtC,OAAO,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;YAEhC,IAAI,OAAO,EAAE;gBACX,oBACK,IAAI,eACN,MAAM,CAAC,iBAAiB,aAAO,UAAU,QAC1C;aACH;SACF;QAED,OAAO,IAAI,CAAC;KACb;IApCU,uBAAuB;QAHnC,IAAI,CAAC;YACJ,IAAI,EAAE,qBAAqB;SAC5B,CAAC;OACW,uBAAuB,CAsCnC;IAAD,8BAAC;CAtCD;;;ICuCE,2BACU,gBAAyC;QAAzC,qBAAgB,GAAhB,gBAAgB,CAAyB;QAhB1C,cAAS,GAA0B,EAAE,CAAC;QACtC,aAAQ,GAAG,EAAE,CAAC;QAIb,cAAS,GAAG,IAAI,YAAY,EAAkB,CAAC;QAC/C,gBAAW,GAAG,IAAI,YAAY,EAAkB,CAAC;QAE3D,wBAAmB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAIpD,wBAAmB,GAAG,IAAI,CAAC;QAE3B,aAAQ,GAAqB,IAAI,GAAG,EAAe,CAAC;KAGhD;IAEJ,oCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;;YAE1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,wBAAwB,CAAC;SACvD;QACD,IAAI,CAAC,OAAO,GAAG;YACb,KAAK,WAAM,IAAI,CAAC,SAAS,CAAC;YAC1B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE;gBACH,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC;aAC7C;SACF,CAAC;QACF,IAAI,CAAC,qBAAqB,GAAG,IAAI,cAAc,UAAK,IAAI,CAAC,SAAgB,EAAE,CAAC;QAC5E,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACzC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;KACvE;IAED,uCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,OAAO,CAAC,SAAS,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE;;YAEvD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAChE,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5F;QAED,IACE,OAAO,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EACjD;;YAEA,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;YAChD,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5F;KACF;;;;;;IASD,uCAAW,GAAX,UAAY,UAA0B,EAAE,KAAsB;QAAlD,2BAAA,EAAA,aAAa,IAAI,CAAC,QAAQ;QAAE,sBAAA,EAAA,QAAQ,IAAI,CAAC,SAAS;QAC5D,IAAI,CAAC,OAAO,CAAC,KAAK,YAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CACzD,KAAK,EACL,IAAI,CAAC,MAAM,EACX,UAAU,CACX,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;KAC1C;IAEO,2CAAe,GAAvB;QACE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;KAClG;IAED,4CAAgB,GAAhB,UAAiB,KAAK,EAAE,MAAa;QAArC,iBAcC;QAduB,uBAAA,EAAA,aAAa;QACnC,IAAI,MAAM,KAAK,IAAI,EAAE;YACnB,MAAM,GAAG,EAAE,CAAC;SACb;aAAM;YACL,MAAM,IAAI,IAAI,CAAC,mBAAmB,CAAC;SACpC;QACD,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;YACpB,IAAM,SAAS,GAAG,MAAM,GAAG,KAAK,CAAC;YACjC,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC;YAC9B,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;YAChC,IAAI,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE;gBACrF,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,SAAS,CAAC,CAAC;aACvE;SACF,CAAC,CAAC;KACJ;;;;;;IAOD,yCAAa,GAAb,UAAc,IAAoB,EAAE,MAAa;QAAb,uBAAA,EAAA,aAAa;QAC/C,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,wBAAwB,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,uCAAW,GAAX,UAAY,KAAoB;QAC9B,KAAK,CAAC,wBAAwB,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC/B,OAAO;SACR;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAE1C,IAAI,SAAS,IAAI,OAAO,EAAE;;YAExB,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;SAC9B;aAAM,IACL,UAAU;YACV,IAAI,CAAC,qBAAqB,CAAC,UAAU,EACrC;YACA,IAAI,CAAC,WAAW,CAAC,IAAI,CACnB,IAAI,CAAC,qBAAqB,CAAC,UAA4B,CACxD,CAAC;SACH;KACF;IAED,qCAAS,GAAT,UAAU,KAAK;;QAEb,OAAO,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC,UAAU,IAAI,KAAK,CAAC,OAAO,KAAK,UAAU,CAAC;KAC3E;IAED,mCAAO,GAAP,UAAQ,KAAK;;QAEX,OAAO,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,QAAQ,CAAC;KACvE;IAED,sCAAU,GAAV,UAAW,KAAK;;QAEd,OAAO,KAAK,CAAC,GAAG,KAAK,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,KAAK,CAAC;KACjE;IAED,4CAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACxC,IAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACpC,IAAM,kBAAkB,GAAGC,aAAK,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAoB,CAAC;QAC1F,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SAC/D;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACnE;KACF;IAED,gDAAoB,GAApB,UAAqB,iBAAiC,EAAE,KAAK;QAA7D,iBAwBC;QAvBC,IAAM,UAAU,GAAG,iBAAiB,CAAC,YAAY,CAAC;QAClD,IAAI,CAAC,UAAU,EAAE;YACf,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,EAAE,CAAC;YAChD,OAAO;SACR;QACD,IAAM,gBAAgB,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACpE,IAAI,aAAa,CAAC;QAClB,IAAI,SAAS,CAAC;QACd,IAAI,KAAK,CAAC;QACV,aAAa,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC;YACzCD,SAAI,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAC3F,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,GAAG,KAAI,CAAC,mBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;QAC3H,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,MAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SAClG;QACD,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,UAAU,GAAA,CAAC,CAAC;QACrD,IAAI,KAAK,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAClC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACzF;aAAO;YACN,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;KACF;IAED,0CAAc,GAAd,UAAe,gBAAgB;QAC7B,IAAI,aAAa,CAAC;QAClB,IAAI,SAAS,CAAC;QACd,IAAI,gBAAgB,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,IAAM,cAAc,GAAG,MAAG,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAE,CAAC;YACrD,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBACjC,OAAO,cAAc,CAAC;aACvB;YACD,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC;SAC5B;QACD,IAAM,SAAS,GAAGA,SAAI,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/E,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAE,CAAC;QAC9E,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACzD,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAe,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;QAChG,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;SACrB;aAAM;YACL,OAAO,IAAI,CAAC,cAAc,UAAK,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC;SAC1F;KACF;IAED,oDAAwB,GAAxB,UAAyB,iBAAiC,EAAE,KAAK;QAAjE,iBAyBC;QAxBC,IAAM,UAAU,GAAG,iBAAiB,CAAC,YAAY,CAAC;QAClD,IAAI,CAAC,UAAU,EAAE;YACf,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAChD,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAClE,OAAO;SACR;QAED,IAAM,gBAAgB,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACpE,IAAI,aAAa,CAAC;QAClB,IAAI,SAAS,CAAC;QACd,IAAI,KAAK,CAAC;QACV,aAAa,GAAG,gBAAgB,CAAC,MAAM,GAAG,CAAC;YACzCA,SAAI,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC;YAC3F,gBAAgB,CAAC,CAAC,CAAC,CAAC;QACtB,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,SAAI,KAAI,CAAC,mBAAmB,OAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;QAC9H,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,MAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SAClG;QACD,KAAK,GAAG,SAAS,CAAC,SAAS,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,KAAK,UAAU,GAAA,CAAC,CAAC;QACrD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,EAAE;YACzC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,0BAA0B,CAAC,gBAAgB,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACjH;aAAM;YACL,IAAI,CAAC,2BAA2B,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;SACxE;KACF;IAED,sDAA0B,GAA1B,UAA2B,gBAAgB,EAAE,kBAA0B;QAAvE,iBAuBC;QAtBC,IAAI,aAAa,CAAC;QAClB,IAAM,UAAU,GAAG,gBAAgB,CAAC,MAAM,KAAK,CAAC,CAAC;QACjD,IAAM,SAAS,GAAG,CAAC,CAAC,UAAU,YACxB,gBAAgB;YACpBA,SAAI,gBAAgB,EAAE,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/D,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,GAAG,MAAG,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAE,GAAG,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC/H,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QACzD,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,GAAG,KAAI,CAAC,mBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;QAC/H,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;YACrB,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,IAAI,MAAM,CAAC,MAAI,aAAa,MAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAA,CAAC,CAAC;SAClG;QACD,IAAI,SAAS,CAAC,MAAM,EAAE;YACpB,IAAI,SAAS,CAAC,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE;gBAChD,OAAO,aAAa,CAAC;aACtB;YACD,OAAO,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SACxC;aAAM,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC,0BAA0B,UAAK,gBAAgB,CAAC,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC;SAC1H;aAAM;YACL,aAAa,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;YAChE,OAAO,aAAa,CAAC;SACtB;KACF;IAED,uDAA2B,GAA3B,UAA4B,UAAU,EAAE,KAAK;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAG;YACjD,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAClC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,KAAK,UAAU,EAAE;gBACxC,IAAI,CAAC,qBAAqB,GAAG,IAAI,cAAc,UAAK,KAAY,EAAE,CAAC;gBACnE,KAAK,CAAC,CAAC,CAAC,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBACjC,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAQ,CAAC,CAAC;aAC3D;YACD,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE;gBAC7F,IAAI,CAAC,2BAA2B,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACvF;SACF;KACF;;gBArP2B,uBAAuB;;IAjB1CD;QAAR,KAAK,EAAE;qDAAgC;IAC/BA;QAAR,KAAK,EAAE;wDAAuC;IACtCA;QAAR,KAAK,EAAE;uDAAe;IACdA;QAAR,KAAK,EAAE;+DAAoC;IACnCA;QAAR,KAAK,EAAE;0DAAsB;IACrBA;QAAR,KAAK,EAAE;uDAAe;IACbA;QAAT,MAAM,EAAE;wDAAgD;IAC/CA;QAAT,MAAM,EAAE;0DAAkD;IACFA;QAAxD,SAAS,CAAC,0BAA0B,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;uEAA4C;IAVzF,iBAAiB;QAL7B,SAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,mwBAAwC;;SAEzC,CAAC;OACW,iBAAiB,CAyQ7B;IAAD,wBAAC;CAzQD;;;ICmDE,mCACmB,GAA0B,EACnC,WAAoC;QAD3B,QAAG,GAAH,GAAG,CAAuB;QACnC,gBAAW,GAAX,WAAW,CAAyB;QA1CrC,aAAQ,GAAe,EAAE,CAAC;QAC1B,aAAQ,GAAG,KAAK,CAAC;QAEjB,qBAAgB,GAAqB,IAAI,CAAC;QAC1C,oBAAe,GAAqB,IAAI,CAAC;QACzC,aAAQ,GAAG,KAAK,CAAC;QAChB,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,aAAQ,GAAG,IAAI,YAAY,EAAE,CAAC;QAC9B,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,gBAAW,GAAG,IAAI,YAAY,EAAE,CAAC;QAE3C,SAAI,GAA0B,EAAE,CAAC;QAGjC,kBAAa,GAA2B;YACtC,YAAY,EAAE,oBAAoB;YAClC,iBAAiB,EAAE,EAAE;YACrB,eAAe,EAAE,OAAO;YACxB,UAAU,EAAE,IAAI;YAChB,oBAAoB,EAAE,KAAK;YAC3B,WAAW,EAAE,QAAQ;YACrB,aAAa,EAAE,IAAI;YACnB,iBAAiB,EAAE,EAAE;YACrB,oBAAoB,EAAE,KAAK;YAC3B,QAAQ,EAAE,KAAK;YACf,QAAQ,EAAE,IAAI;YACd,mBAAmB,EAAE,EAAE;YACvB,mBAAmB,EAAE,2CAA2C;SACjE,CAAC;QAEF,4BAAuB,GAAG;YACxB,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE;YACxF,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE;YACzF,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;YACvF,EAAE,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE;SACtF,CAAC;QAIF,oBAAe,GAAG,IAAI,eAAe,EAAE,CAAC;KAInC;IAIL,4CAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;KAC3B;IAED,+CAAW,GAAX,UAAY,OAAsB;;QAEhC,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAC7C,OAAO;SACR;;;QAID,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE;YACnC,OAAO,CAAC,QAAQ,CAAC,aAAa,GAAG,EAAE,CAAC;SACrC;;;QAGD,IACE,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,KAAK,OAAO,CAAC,QAAQ,CAAC,aAAa;eACjF,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,EAChC;;YAEA,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,KAAK,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,gBAAgB,EAAE;gBAC7G,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;aACzD;YAED,IAAI,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/C,OAAO;aACR;;;;;YAMD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;gBACxE,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,OAAO,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;;oBAE1H,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;iBACzD;aACF;SACF;KACF;IAED,iDAAa,GAAb,UAAc,GAAY;QAA1B,iBAOC;QANC,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;QAC1B,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YACpC,UAAU,CAAC;gBACT,KAAI,CAAC,YAAY,EAAE,CAAC;aACrB,EAAE,GAAG,CAAC,CAAC;SACT;KACF;IAED,uDAAmB,GAAnB,UAAoB,GAAW;QAC7B,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7B;IAED,4CAAQ,GAAR;QACE,IAAI,CAAC,MAAM,gBACN,IAAI,CAAC,aAAa,EAClB,IAAI,CAAC,MAAM,CACf,CAAC;QACF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;KAC/C;;;;;;IAOD,8CAAU,GAAV,UAAW,IAAgB;QAA3B,iBAoBC;QAnBC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;QACxB,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;;YACvB,oBACK,GAAG;gBAEJ,GAAC,KAAI,CAAC,MAAM,CAAC,UAAU,IAAG,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC;gBACrD,GAAC,KAAI,CAAC,MAAM,CAAC,eAAe,IAAG,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC;qBAEjE;SACH,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACpC,UAAU,CAAC;gBACT,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,GAAG;oBAChB,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;iBAC7B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;KACF;;;;;IAMD,oDAAgB,GAAhB,UAAkB,EAAO;QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;KACpB;;;;;;IAOD,4CAAQ,GAAR,UAAS,OAAoB;QAC3B,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,GAAG;YACxD,QAAQ,EAAE,IAAI;SACf,CAAC;KACH;;;;;IAMD,gDAAY,GAAZ;QACE,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;YACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,KAAK,EAAE,EAAE;gBACzC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aAC5D;YACD,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE;YAChC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACtB;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;KAC1B;;;;;IAMD,gDAAY,GAAZ,UAAa,UAA6B;QAA7B,2BAAA,EAAA,iBAA6B;QACxC,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAChD,CAAC,CAAC,UAAU,GAAG,UAAU,GAAG,IAAI,CAAC,QAAQ,EACzC;YACE,SAAS,EAAE,IAAI,CAAC,IAAI;YACpB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CACF,CAAC;QACF,IAAI,WAAW,CAAC,MAAM,EAAE;YACtB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;KACF;;;;;IAMD,gDAAY,GAAZ;QACE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7D;IAED,2DAAuB,GAAvB,UAAwB,KAA4B;QAApD,iBAUC;QATC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAC,GAAmB;YACnC,IAAI,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE;gBACnF,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,GAAG,KAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;aACvG;YACD,oBACK,GAAG,IACN,gBAAgB,EAAE,KAAK,IACvB;SACH,CAAC,CAAC;KACJ;IAED,mDAAe,GAAf;QACE,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnC,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;SACpF;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE;;YAEjC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,EAAE;;gBAEpC,MAAM,IAAI,KAAK,CAAC,kJAAkJ,CAAC,CAAC;aACrK;SACF;KACF;;;;;;;IAQD,0CAAM,GAAN,UAAO,GAAmB;QAA1B,iBAaC;QAZC,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACpC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;YACzE,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAA,CAAC,EAAE;YAC/F,IAAI,CAAC,IAAI,YAAO,IAAI,CAAC,IAAI,GAAE,GAAG,EAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,IAAI,CACV,CAAC;SACH;KACF;;;;;;IAOD,6CAAS,GAAT,UAAU,GAAmB;QAA7B,iBAUC;QATC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAA,CAAC,CAAC;;QAE3G,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YAC1B,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC5B;QACD,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,IAAI,CACV,CAAC;KACH;;;;;;IAOD,iDAAa,GAAb,UAAc,GAAmB;QAAjC,iBAmCC;;QAjCC,IAAI,IAAI,CAAC,MAAM,CAAC,sBAAsB,EAAE;;YAEtC,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAA,CAAC,EAAE;gBAClH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;gBAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CACpC,IAAI,CAAC,QAAQ,EACb,GAAG,EACH,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CACZ,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACpB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAC3B;SACF;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,CAAC,WAAW,CAAC,qBAAqB,CACpC,IAAI,CAAC,QAAQ,EACb,GAAG,EACH,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,MAAM,CACZ,CACF,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;;;;;;IAOD,sDAAkB,GAAlB,UAAmB,GAAmB,EAAE,cAAsB,EAAE,YAAoB;QAApF,iBA6BC;QA7BuC,+BAAA,EAAA,sBAAsB;QAAE,6BAAA,EAAA,oBAAoB;QAClF,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE;YACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;gBAC7E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACtD,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,CAAC;aAChF;SACF;QACD,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,EAAE;YACzD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAC5C,IAAI,CAAC,QAAQ,EACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EACpC,IAAI,CAAC,MAAM,CACZ,CAAC;YACF,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,EAAE;gBACrC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBAC1B,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;gBACvD,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,UAAC,OAAO;;oBAEnD,IAAI,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;wBAClE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;wBACrB,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;qBAC9C;iBACF,CAAC,CAAC;aACJ;SACF;QACD,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,IAAI,CACV,CAAC;KACH;;;;;;IAOD,mDAAe,GAAf,UAAgB,GAAG;QACjB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;KAC9B;;;;;;IAOD,qDAAiB,GAAjB,UAAkB,GAAmB,EAAE,cAAsB,EAAE,YAAoB;QAAnF,iBA4CC;QA5CsC,+BAAA,EAAA,sBAAsB;QAAE,6BAAA,EAAA,oBAAoB;QACjF,IAAI,IAAI,CAAC,MAAM,CAAC,oBAAoB,EAAE;YACpC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC;SACvB;QACD,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,EAAE;YACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;gBAC7E,IAAI,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;;oBAElC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;oBAEtD,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;iBAC5E;qBAAM;oBACL,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBACpD;aACF;SACF;QACD,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,EAAE;YACzD,IAAM,WAAS,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAC5C,IAAI,CAAC,QAAQ,EACb,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EACpC,IAAI,CAAC,MAAM,CACZ,CAAC;YACF,IAAI,CAAC,WAAS,EAAE;gBACd,OAAO;aACR;YACD,IAAM,iBAAiB,GAAG,WAAS,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC;YAC1E,IAAM,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,OAAO;;gBAEjD,OAAO,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,IAAI,WAAS,CAAC,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;aACtF,CAAC,CAAC,MAAM,CAAC;YACV,IACE,CAAE,iBAAiB,GAAG,CAAC,IAAI,iBAAiB,GAAG,CAAC;iBAC/C,IAAI,CAAC,MAAM,CAAC,qBAAqB;oBAChC,iBAAiB,KAAK,WAAS,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;oBAClE,iBAAiB,KAAK,iBAAiB,CACxC,EACD;gBACA,IAAI,CAAC,MAAM,CAAC,WAAS,CAAC,CAAC;gBACvB,IAAI,CAAC,iBAAiB,CAAC,WAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;aACjD;SACF;QACD,IAAI,CAAC,QAAQ,CACX,IAAI,CAAC,IAAI,CACV,CAAC;KACH;IAED,qDAAiB,GAAjB,UAAkB,EAAO;;KAExB;IAED,iDAAa,GAAb,UAAc,MAAM;QAApB,iBAsBC;QArBC,MAAM,CAAC,wBAAwB,EAAE,CAAC;QAClC,IACE,CAAC,IAAI,CAAC,cAAc;aAElB,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC,QAAQ;gBACjC,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC,UAAU,CACpC,EACD;YACA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;SAC5B;aAAM,IACL,IAAI,CAAC,cAAc;YACnB,MAAM,CAAC,GAAG,KAAK,SAAS,CAAC,MAAM,EAC/B;YACA,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B;;QAED,UAAU,CAAC;YACT,IAAI,KAAI,CAAC,QAAQ,EAAE;gBACjB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACnC;SACF,EAAE,EAAE,CAAC,CAAC;KACR;;gBA5YuB,qBAAqB;gBACtB,uBAAuB;;IA5CGA;QAAhD,SAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;+DAA6B;IACpEA;QAAR,KAAK,EAAE;6DAAgC;IAC/BA;QAAR,KAAK,EAAE;+DAA2B;IAC1BA;QAAR,KAAK,EAAE;+DAAkB;IACjBA;QAAR,KAAK,EAAE;kEAAsB;IACrBA;QAAR,KAAK,EAAE;uEAA2C;IAC1CA;QAAR,KAAK,EAAE;sEAA0C;IACzCA;QAAR,KAAK,EAAE;+DAAkB;IAChBA;QAAT,MAAM,EAAE;iEAAiC;IAChCA;QAAT,MAAM,EAAE;+DAA+B;IAC9BA;QAAT,MAAM,EAAE;mEAAmC;IAClCA;QAAT,MAAM,EAAE;kEAAkC;IACKA;QAA/C,SAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;+DAA6B;IAqC5EA;QADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;6DAGjC;IApDU,yBAAyB;QAVrC,SAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,u+DAAkD;YAElD,SAAS,EAAE;gBACT,gCAAgC,EAAE;gBAClC,qCAAqC,EAAE;aACxC;YACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;;SACtC,CAAC;OACW,yBAAyB,CA0brC;IAAD,gCAAC;CA1bD,IA0bC;SAGe,gCAAgC;IAC9C,OAAO;QACL,OAAO,EAAE,iBAAiB;QAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;QACxD,KAAK,EAAE,IAAI;KACZ,CAAC;CACH;AAED,SAAgB,qCAAqC;IACnD,OAAO;QACL,OAAO,EAAE,aAAa;QACtB,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,yBAAyB,GAAA,CAAC;QACxD,KAAK,EAAE,IAAI;KACZ,CAAC;CACH;;;IC7dC;QALS,aAAQ,GAAG,aAAa,CAAC;QAExB,iBAAY,GAAG,IAAI,YAAY,EAAkB,CAAC;KAG3C;IAEjB,+BAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,sBAAsB,CAAC;SACpD;QACD,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,OAAO;YAClB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC;KACH;IAnBQA;QAAR,KAAK,EAAE;gDAAgC;IAC/BA;QAAR,KAAK,EAAE;iDAAyB;IACxBA;QAAR,KAAK,EAAE;kDAA0B;IACzBA;QAAR,KAAK,EAAE;yDAAmC;IACjCA;QAAT,MAAM,EAAE;sDAAmD;IACLA;QAAtD,SAAS,CAAC,wBAAwB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;gEAA0C;IANrF,YAAY;QALxB,SAAS,CAAC;YACT,QAAQ,EAAE,QAAQ;YAClB,8lBAAmC;;SAEpC,CAAC;OACW,YAAY,CAsBxB;IAAD,mBAAC;CAtBD;;;ICDE,sCAAoB,EAAc,EAAU,KAAwB;QAAhD,OAAE,GAAF,EAAE,CAAY;QAAU,UAAK,GAAL,KAAK,CAAmB;QAF3D,yBAAoB,GAAG,KAAK,CAAC;KAEmC;IAEzE,+CAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,wEAAwE,CAAC,CAAC;SACxF;KACF;IAED,kDAAW,GAAX,UAAY,aAA4B;QACtC,IAAI,CAAC,aAAa,CAAC,oBAAoB,EAAE;YACvC,OAAO;SACR;QACD,IAAI,aAAa,CAAC,oBAAoB,CAAC,YAAY,KAAK,aAAa,CAAC,oBAAoB,CAAC,aAAa,EAAE;YACxG,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;KACF;IAED,+DAAwB,GAAxB;QACE,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;YAChE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC3B;;gBAzBuB,UAAU;gBAAiB,iBAAiB;;IAF3DA;QAAR,KAAK,EAAE;8EAA8B;IAC7BA;QAAR,KAAK,EAAE;+EAA+B;IAF5B,4BAA4B;QAHxC,SAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;SACpC,CAAC;OACW,4BAA4B,CA8BxC;IAAD,mCAAC;CA9BD;;;ICyBA;KAAuC;IAA1B,sBAAsB;QAlBlC,QAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yBAAyB;gBACzB,YAAY;gBACZ,iBAAiB;gBACjB,iBAAiB;gBACjB,eAAe;gBACf,uBAAuB;gBACvB,4BAA4B;aAC7B;YACD,OAAO,EAAE;gBACP,YAAY;gBACZ,WAAW;gBACX,mBAAmB;gBACnB,aAAa;aACd;YACD,OAAO,EAAE,CAAC,yBAAyB,EAAE,4BAA4B,CAAC;SACnE,CAAC;OACW,sBAAsB,CAAI;IAAD,6BAAC;CAAvC;;AC9BA;;GAEG;;ACFH;;GAEG;;;;"}