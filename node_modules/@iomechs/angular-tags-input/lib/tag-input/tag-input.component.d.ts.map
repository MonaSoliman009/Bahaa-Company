{"version":3,"file":"tag-input.component.d.ts","sources":["tag-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, ElementRef, SimpleChanges, OnChanges } from '@angular/core';\r\nimport { AngularTagItem, AngularTagsInputConfig } from '../tags-input-interfaces';\r\nimport { FormGroup } from '@angular/forms';\r\nexport declare class TagInputComponent implements OnInit, OnChanges {\r\n    inputClass: string;\r\n    config: AngularTagsInputConfig;\r\n    disabled: boolean;\r\n    valueChanged: EventEmitter<string>;\r\n    inputFocused: EventEmitter<string>;\r\n    inputBlurred: EventEmitter<string>;\r\n    tagEntered: EventEmitter<AngularTagItem>;\r\n    inputEl: ElementRef;\r\n    tagInputForm: FormGroup;\r\n    lastValueEmitted: string;\r\n    constructor();\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * @author Ahsan Ayaz\r\n     * @desc Emits the input focused event with the current search term value\r\n     */\r\n    emitInputFocused(): void;\r\n    /**\r\n     * @author Ahsan Ayaz\r\n     * @desc When the user presses enter key after entering the tag name\r\n     * @param inputEl - Reference to the input element so we can fetch the value\r\n     */\r\n    onEnterKeyPress(): void;\r\n    /**\r\n     * @author Ahsan Ayaz\r\n     * @desc Resets the input value\r\n     */\r\n    resetInput(): void;\r\n    emitInputBlurred($event: any): void;\r\n}\r\n"]}