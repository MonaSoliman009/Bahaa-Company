{"version":3,"file":"dropdown.component.d.ts","sources":["dropdown.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ListKeyManager, ListKeyManagerOption } from '@angular/cdk/a11y';\r\nimport { AngularTagItem, AngularTagsInputConfig, AngularTagsInputDDFns } from '../tags-input-interfaces';\r\nimport { AngularTagsInputService } from '../angular-tags-input.service';\r\nimport { DropdownItemsFilterPipe } from '../dropdown-items-filter.pipe';\r\nexport declare class DropdownComponent implements OnInit, AngularTagsInputDDFns, OnChanges {\r\n    private tagsInputService;\r\n    config: AngularTagsInputConfig;\r\n    listItems: Array<AngularTagItem>;\r\n    inputVal: string;\r\n    dropDownTemplate: TemplateRef<any>;\r\n    tagsLoading: boolean;\r\n    keyPress: any;\r\n    itemAdded: EventEmitter<AngularTagItem>;\r\n    itemClicked: EventEmitter<AngularTagItem>;\r\n    defaultTagOptionTemplate: TemplateRef<any>;\r\n    dropdownItemsFilter: DropdownItemsFilterPipe;\r\n    ddIdPrefix: string;\r\n    context: any;\r\n    activeIndex: number;\r\n    identifierSeparator: string;\r\n    keyboardEventsManager: ListKeyManager<ListKeyManagerOption>;\r\n    itemsMap: Map<string, any>;\r\n    constructor(tagsInputService: AngularTagsInputService);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    /**\r\n     * @author Ahsan Ayaz\r\n     * @desc Updates the items property for the context provided to the dropdown template\r\n     * @param items - the list of items to be assigned\r\n     */\r\n    filterItems(searchTerm?: string, items?: AngularTagItem[]): void;\r\n    private getRandomString;\r\n    populateItemsMap(items: any, prefix?: any): void;\r\n    /**\r\n     * @author Ahsan Ayaz\r\n     * @desc When an option is clicked from the options dropdown\r\n     * @param item - item clicked\r\n     */\r\n    onItemClicked(item: AngularTagItem, $event?: any): void;\r\n    handleKeyUp(event: KeyboardEvent): void;\r\n    isKeyDown(event: any): boolean;\r\n    isKeyUp(event: any): boolean;\r\n    isKeyEnter(event: any): boolean;\r\n    setActiveElement(event: any): void;\r\n    setNextActiveElement(currentActiveItem: AngularTagItem, items: any): void;\r\n    findNextParent(keyIdentifierArr: any): any;\r\n    setPreviousActiveElement(currentActiveItem: AngularTagItem, items: any): void;\r\n    findPrevousParentLastChild(keyIdentifierArr: any, prevItemIdentifier: string): any;\r\n    setActiveElementRecursively(identifier: any, items: any): void;\r\n}\r\n"]}