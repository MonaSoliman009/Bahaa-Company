import { PipeTransform } from '@angular/core';
import { AngularTagsInputConfig } from './tags-input-interfaces';
export declare class UnAddedTagsPipe implements PipeTransform {
    transform(tagsList: Array<any>, args: {
        tagsAdded: Array<any>;
        config: AngularTagsInputConfig;
    }): any;
    /**
     * @author Ahsan Ayaz
     * @desc Compares a tag against all the tags added based on config provided
     * @param currentTag - the tag to check if it exists in the selection
     * @param tagsAdded - an array of the tags added to the selection
     * @param config - the config provided to the Angular Tags Input component
     * @return boolean - if the tag is added already
     */
    isTagAlreadySelected(currentTag: any, tagsAdded: any, config: AngularTagsInputConfig): any;
    /**
     * @author Ahsan Ayaz
     * @desc Compares the two tags based on the identifier provided in the config
     * @param currentTag - the tag in the iteration to compare
     * @param tagItem - the tag (already selected) to compare with
     * @param config - the config provided to the Angular Tags Input component
     * @return boolean - if the tags passed are the same.
     */
    areTagsMatching(currentTag: any, tagItem: any, config: any): boolean;
    setSelectedTags(tags: any, config: AngularTagsInputConfig, tagsAdded: any, isSelected?: any): any;
}
