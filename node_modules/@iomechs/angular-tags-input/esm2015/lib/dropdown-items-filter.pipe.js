import * as tslib_1 from "tslib";
import { Pipe } from '@angular/core';
let DropdownItemsFilterPipe = class DropdownItemsFilterPipe {
    transform(tagItems = [], config, searchTerm = '') {
        if (!searchTerm) {
            return tagItems;
        }
        return [...tagItems]
            .map((item) => this.getFilteredItem(Object.assign({}, item), config, searchTerm))
            .filter(item => !!item);
    }
    getFilteredItem(item, config, searchTerm = '') {
        if (searchTerm === '') {
            return item;
        }
        let matches = false;
        if (item[config.displayProperty].toLowerCase().includes(searchTerm.toLowerCase())) {
            return item;
        }
        if (item[config.nestedTagProperty]) {
            const childItems = item[config.nestedTagProperty].map(nestedItem => {
                return this.getFilteredItem(nestedItem, config, searchTerm);
            }).filter(nestedItem => !!nestedItem);
            matches = childItems.length > 0;
            if (matches) {
                return Object.assign({}, item, { [config.nestedTagProperty]: [...childItems] });
            }
        }
        return null;
    }
};
DropdownItemsFilterPipe = tslib_1.__decorate([
    Pipe({
        name: 'dropdownItemsFilter'
    })
], DropdownItemsFilterPipe);
export { DropdownItemsFilterPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24taXRlbXMtZmlsdGVyLnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AaW9tZWNocy9hbmd1bGFyLXRhZ3MtaW5wdXQvIiwic291cmNlcyI6WyJsaWIvZHJvcGRvd24taXRlbXMtZmlsdGVyLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBTXBELElBQWEsdUJBQXVCLEdBQXBDLE1BQWEsdUJBQXVCO0lBRWxDLFNBQVMsQ0FBQyxXQUFrQyxFQUFFLEVBQUUsTUFBOEIsRUFBRSxVQUFVLEdBQUcsRUFBRTtRQUM3RixJQUFJLENBQUMsVUFBVSxFQUFFO1lBQ2YsT0FBTyxRQUFRLENBQUM7U0FDakI7UUFDRCxPQUFPLENBQUMsR0FBRyxRQUFRLENBQUM7YUFDakIsR0FBRyxDQUFDLENBQUMsSUFBb0IsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsbUJBQUssSUFBSSxHQUFHLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQzthQUNsRixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDNUIsQ0FBQztJQUVELGVBQWUsQ0FBQyxJQUFvQixFQUFFLE1BQThCLEVBQUUsYUFBcUIsRUFBRTtRQUMzRixJQUFJLFVBQVUsS0FBSyxFQUFFLEVBQUU7WUFDckIsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQUksT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUFFO1lBQ2pGLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUMsRUFBRTtZQUNsQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxFQUFFO2dCQUNqRSxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQztZQUM5RCxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUM7WUFFdEMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO1lBRWhDLElBQUksT0FBTyxFQUFFO2dCQUNYLHlCQUNLLElBQUksSUFDUCxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLENBQUMsSUFDM0M7YUFDSDtTQUNGO1FBRUQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0NBRUYsQ0FBQTtBQXRDWSx1QkFBdUI7SUFIbkMsSUFBSSxDQUFDO1FBQ0osSUFBSSxFQUFFLHFCQUFxQjtLQUM1QixDQUFDO0dBQ1csdUJBQXVCLENBc0NuQztTQXRDWSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmd1bGFyVGFnSXRlbSwgQW5ndWxhclRhZ3NJbnB1dENvbmZpZyB9IGZyb20gJy4vdGFncy1pbnB1dC1pbnRlcmZhY2VzJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZHJvcGRvd25JdGVtc0ZpbHRlcidcbn0pXG5leHBvcnQgY2xhc3MgRHJvcGRvd25JdGVtc0ZpbHRlclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcblxuICB0cmFuc2Zvcm0odGFnSXRlbXM6IEFycmF5PEFuZ3VsYXJUYWdJdGVtPiA9IFtdLCBjb25maWc6IEFuZ3VsYXJUYWdzSW5wdXRDb25maWcsIHNlYXJjaFRlcm0gPSAnJyk6IGFueSB7XG4gICAgaWYgKCFzZWFyY2hUZXJtKSB7XG4gICAgICByZXR1cm4gdGFnSXRlbXM7XG4gICAgfVxuICAgIHJldHVybiBbLi4udGFnSXRlbXNdXG4gICAgICAubWFwKChpdGVtOiBBbmd1bGFyVGFnSXRlbSkgPT4gdGhpcy5nZXRGaWx0ZXJlZEl0ZW0oey4uLml0ZW19LCBjb25maWcsIHNlYXJjaFRlcm0pKVxuICAgICAgLmZpbHRlcihpdGVtID0+ICEhaXRlbSk7XG4gIH1cblxuICBnZXRGaWx0ZXJlZEl0ZW0oaXRlbTogQW5ndWxhclRhZ0l0ZW0sIGNvbmZpZzogQW5ndWxhclRhZ3NJbnB1dENvbmZpZywgc2VhcmNoVGVybTogc3RyaW5nID0gJycpIHtcbiAgICBpZiAoc2VhcmNoVGVybSA9PT0gJycpIHtcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH1cbiAgICBsZXQgbWF0Y2hlcyA9IGZhbHNlO1xuICAgIGlmIChpdGVtW2NvbmZpZy5kaXNwbGF5UHJvcGVydHldLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoVGVybS50b0xvd2VyQ2FzZSgpKSkge1xuICAgICAgcmV0dXJuIGl0ZW07XG4gICAgfVxuXG4gICAgaWYgKGl0ZW1bY29uZmlnLm5lc3RlZFRhZ1Byb3BlcnR5XSkge1xuICAgICAgY29uc3QgY2hpbGRJdGVtcyA9IGl0ZW1bY29uZmlnLm5lc3RlZFRhZ1Byb3BlcnR5XS5tYXAobmVzdGVkSXRlbSA9PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldEZpbHRlcmVkSXRlbShuZXN0ZWRJdGVtLCBjb25maWcsIHNlYXJjaFRlcm0pO1xuICAgICAgfSkuZmlsdGVyKG5lc3RlZEl0ZW0gPT4gISFuZXN0ZWRJdGVtKTtcblxuICAgICAgbWF0Y2hlcyA9IGNoaWxkSXRlbXMubGVuZ3RoID4gMDtcblxuICAgICAgaWYgKG1hdGNoZXMpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5pdGVtLFxuICAgICAgICAgIFtjb25maWcubmVzdGVkVGFnUHJvcGVydHldOiBbLi4uY2hpbGRJdGVtc11cbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG59XG4iXX0=