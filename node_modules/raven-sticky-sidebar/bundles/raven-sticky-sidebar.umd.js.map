{"version":3,"file":"raven-sticky-sidebar.umd.js","sources":["ng://raven-sticky-sidebar/lib/sticky-sidebar.service.ts","ng://raven-sticky-sidebar/lib/sticky-sidebar.component.ts","ng://raven-sticky-sidebar/lib/sticky-sidebar.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StickySidebarService {\n\n  constructor() { }\n}\n","import { Component, OnInit, ElementRef, ViewChild, Input } from '@angular/core';\n\n@Component({\n  selector: 'raven-sticky-sidebar',\n  template: `<div #wrapper class=\"ss-wrapper\"><ng-content></ng-content></div>`,\n  styleUrls: ['sticky-sidebar.component.css']\n})\nexport class StickySidebarComponent implements OnInit {\n  @Input('topOffset')\n  customTopOffset: number;\n\n  @ViewChild('wrapper', { static: true })\n  wrapperElementRef: ElementRef;\n\n  private _containerElement: HTMLElement;\n  private _wrapperElement: HTMLDivElement;\n  private _initialTopOffset: number;\n  private _scrollTop: number;\n  private _scrollDirection: 'up' | 'down'\n\n  constructor(\n    private _hostElementRef: ElementRef\n  ) {\n    this.customTopOffset = 0;\n    this._containerElement = document.documentElement;\n    this._scrollTop = 0;\n    this._scrollDirection = 'down';\n  }\n\n  @Input('container')\n  set containerSelector(value: string) {\n    this._containerElement = document.querySelector(value);\n\n    if (this._wrapperElement) {\n      this.reset();\n    }\n  }\n\n  ngOnInit() {\n    this._wrapperElement = <HTMLDivElement>this.wrapperElementRef.nativeElement;\n\n    this.reset();\n    this.addScrollListener();\n    this.addResizeListener();\n  }\n\n  /**\n   * Resets sidebar based on current conditions.\n   */\n  reset() {\n    const hostElement = <HTMLDivElement>this._hostElementRef.nativeElement;\n\n    hostElement.style.minHeight = '0';\n\n    this.setSidebarHeight();\n    this.initTopOffset();\n\n    this._scrollTop = this._containerElement.scrollTop;\n  }\n\n  /**\n   * Ensures the minimum height of the sidebar is the same as the container\n   * when floats are used.\n   */\n  setSidebarHeight(height?: number) {\n    const hostElement = <HTMLDivElement>this._hostElementRef.nativeElement;\n\n    if (getComputedStyle(hostElement).cssFloat === 'none') {\n      return;\n    }\n\n    let containerHeight: number;\n\n    if (height) {\n      containerHeight = height;\n    } else {\n      containerHeight = (this._containerElement === document.documentElement) ?\n        hostElement.parentElement.offsetHeight :\n        this.getContentBoxHeight(this._containerElement);\n    }\n\n    hostElement.style.minHeight = containerHeight + 'px';\n\n    if (this._containerElement !== document.documentElement) {\n      // Height change may have changed container height\n      const newContainerHeight = this.getContentBoxHeight(this._containerElement);\n\n      if (hostElement.offsetHeight < newContainerHeight) {\n        this.setSidebarHeight(newContainerHeight);\n      }\n    }\n  }\n\n  /**\n   * Initializes the \"top\" CSS property of the wrapper element.\n   */\n  initTopOffset() {\n    // Measure container and wrapper height\n    const containerHeight = this.getContentBoxHeight(this._containerElement, true);\n    const wrapperHeight = this._wrapperElement.offsetHeight;\n\n    // Set top offset\n    const topOffset = (wrapperHeight - containerHeight) * -1;\n\n    this._initialTopOffset = (topOffset < this.customTopOffset) ?\n      topOffset :\n      this.customTopOffset;\n    this._wrapperElement.style.top = this._initialTopOffset + 'px';\n  }\n\n  /**\n   * Watches the scroll event and adjusts the \"top\" CSS property of the wrapper\n   * element.\n   */\n  addScrollListener() {\n    const scrollElement = (this._containerElement === document.documentElement) ?\n      window :\n      this._containerElement;\n\n    scrollElement.addEventListener('scroll', () => {\n      requestAnimationFrame(() => {\n        const topOffset = parseInt(this._wrapperElement.style.top);\n\n        const newScrollTop = this._containerElement.scrollTop;\n        const scrollDistance = newScrollTop - this._scrollTop;\n\n        this._scrollDirection = (scrollDistance > 0) ? 'down' : 'up';\n        this._scrollTop = this._containerElement.scrollTop;\n\n        if (this._scrollDirection === 'down') {\n          if (topOffset - scrollDistance <= this._initialTopOffset) {\n            this._wrapperElement.style.top = this._initialTopOffset + 'px';\n          } else {\n            this._wrapperElement.style.top =\n              (topOffset - scrollDistance) + 'px';\n          }\n        } else {\n          if (topOffset - scrollDistance >= this.customTopOffset) {\n            this._wrapperElement.style.top = this.customTopOffset + 'px';\n          } else if (newScrollTop > -this._initialTopOffset) {\n            this._wrapperElement.style.top = (topOffset - scrollDistance) + 'px';\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Watches the window.resize event and resets sidebar.\n   */\n  addResizeListener() {\n    window.addEventListener('resize', () => {\n      requestAnimationFrame(() => this.reset());\n    });\n  }\n\n  /**\n   * Returns the height of an element without padding or borders.\n   * @param element The element to use.\n   * @param limitToViewport Whether to use the full height or limit the height\n   *                        to the height of the viewport.\n   */\n  getContentBoxHeight(element: HTMLElement, limitToViewport = false): number {\n    const styles = getComputedStyle(element);\n    const outerHeight = (limitToViewport) ?\n      element.clientHeight :\n      element.offsetHeight;\n    const padding = parseInt(styles.paddingTop) +\n      parseInt(styles.paddingBottom);\n    const borders = parseInt(styles.borderTopWidth) +\n      parseInt(styles.borderBottomWidth);\n    const innerHeight = outerHeight - padding - borders;\n\n    return innerHeight;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { StickySidebarComponent } from './sticky-sidebar.component';\n\n@NgModule({\n  declarations: [StickySidebarComponent],\n  imports: [\n  ],\n  exports: [StickySidebarComponent]\n})\nexport class StickySidebarModule { }\n"],"names":["Injectable","Component","ElementRef","Input","ViewChild","NgModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,eAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;mCAJD;KAEA;;;;;;ACFA;QAoBE,gCACU,eAA2B;YAA3B,oBAAe,GAAf,eAAe,CAAY;YAEnC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;YACzB,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,eAAe,CAAC;YAClD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC;SAChC;QAED,sBACI,qDAAiB;;;;;YADrB,UACsB,KAAa;gBACjC,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAEvD,IAAI,IAAI,CAAC,eAAe,EAAE;oBACxB,IAAI,CAAC,KAAK,EAAE,CAAC;iBACd;aACF;;;WAAA;;;;QAED,yCAAQ;;;QAAR;YACE,IAAI,CAAC,eAAe,sBAAmB,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAA,CAAC;YAE5E,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;;;;;;;;QAKD,sCAAK;;;;QAAL;;gBACQ,WAAW,sBAAmB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAA;YAEtE,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;YAElC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;SACpD;;;;;;;;;;;QAMD,iDAAgB;;;;;;QAAhB,UAAiB,MAAe;;gBACxB,WAAW,sBAAmB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAA;YAEtE,IAAI,gBAAgB,CAAC,WAAW,CAAC,CAAC,QAAQ,KAAK,MAAM,EAAE;gBACrD,OAAO;aACR;;gBAEG,eAAuB;YAE3B,IAAI,MAAM,EAAE;gBACV,eAAe,GAAG,MAAM,CAAC;aAC1B;iBAAM;gBACL,eAAe,GAAG,CAAC,IAAI,CAAC,iBAAiB,KAAK,QAAQ,CAAC,eAAe;oBACpE,WAAW,CAAC,aAAa,CAAC,YAAY;oBACtC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;aACpD;YAED,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,eAAe,GAAG,IAAI,CAAC;YAErD,IAAI,IAAI,CAAC,iBAAiB,KAAK,QAAQ,CAAC,eAAe,EAAE;;;oBAEjD,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAE3E,IAAI,WAAW,CAAC,YAAY,GAAG,kBAAkB,EAAE;oBACjD,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;iBAC3C;aACF;SACF;;;;;;;;QAKD,8CAAa;;;;QAAb;;;gBAEQ,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC;;gBACxE,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY;;;gBAGjD,SAAS,GAAG,CAAC,aAAa,GAAG,eAAe,IAAI,CAAC,CAAC;YAExD,IAAI,CAAC,iBAAiB,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe;gBACxD,SAAS;gBACT,IAAI,CAAC,eAAe,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;SAChE;;;;;;;;;;QAMD,kDAAiB;;;;;QAAjB;YAAA,iBA+BC;;gBA9BO,aAAa,GAAG,CAAC,IAAI,CAAC,iBAAiB,KAAK,QAAQ,CAAC,eAAe;gBACxE,MAAM;gBACN,IAAI,CAAC,iBAAiB;YAExB,aAAa,CAAC,gBAAgB,CAAC,QAAQ;;;YAAE;gBACvC,qBAAqB;;;gBAAC;;wBACd,SAAS,GAAG,QAAQ,CAAC,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC;;wBAEpD,YAAY,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS;;wBAC/C,cAAc,GAAG,YAAY,GAAG,KAAI,CAAC,UAAU;oBAErD,KAAI,CAAC,gBAAgB,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC;oBAC7D,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;oBAEnD,IAAI,KAAI,CAAC,gBAAgB,KAAK,MAAM,EAAE;wBACpC,IAAI,SAAS,GAAG,cAAc,IAAI,KAAI,CAAC,iBAAiB,EAAE;4BACxD,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;yBAChE;6BAAM;4BACL,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG;gCAC5B,CAAC,SAAS,GAAG,cAAc,IAAI,IAAI,CAAC;yBACvC;qBACF;yBAAM;wBACL,IAAI,SAAS,GAAG,cAAc,IAAI,KAAI,CAAC,eAAe,EAAE;4BACtD,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;yBAC9D;6BAAM,IAAI,YAAY,GAAG,CAAC,KAAI,CAAC,iBAAiB,EAAE;4BACjD,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,SAAS,GAAG,cAAc,IAAI,IAAI,CAAC;yBACtE;qBACF;iBACF,EAAC,CAAC;aACJ,EAAC,CAAC;SACJ;;;;;;;;QAKD,kDAAiB;;;;QAAjB;YAAA,iBAIC;YAHC,MAAM,CAAC,gBAAgB,CAAC,QAAQ;;;YAAE;gBAChC,qBAAqB;;;gBAAC,cAAM,OAAA,KAAI,CAAC,KAAK,EAAE,GAAA,EAAC,CAAC;aAC3C,EAAC,CAAC;SACJ;;;;;;;;;;;;;;QAQD,oDAAmB;;;;;;;QAAnB,UAAoB,OAAoB,EAAE,eAAuB;YAAvB,gCAAA,EAAA,uBAAuB;;gBACzD,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC;;gBAClC,WAAW,GAAG,CAAC,eAAe;gBAClC,OAAO,CAAC,YAAY;gBACpB,OAAO,CAAC,YAAY;;gBAChB,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;gBACzC,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC;;gBAC1B,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,cAAc,CAAC;gBAC7C,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC;;gBAC9B,WAAW,GAAG,WAAW,GAAG,OAAO,GAAG,OAAO;YAEnD,OAAO,WAAW,CAAC;SACpB;;oBA5KFC,cAAS,SAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,oEAAkE;;qBAE7E;;;;oBAN2BC,eAAU;;;sCAQnCC,UAAK,SAAC,WAAW;wCAGjBC,cAAS,SAAC,SAAS,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE;wCAkBrCD,UAAK,SAAC,WAAW;;QAkJpB,6BAAC;KA7KD;;;;;;ACFA;QAGA;SAMoC;;oBANnCE,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAC,sBAAsB,CAAC;wBACtC,OAAO,EAAE,EACR;wBACD,OAAO,EAAE,CAAC,sBAAsB,CAAC;qBAClC;;QACkC,0BAAC;KANpC;;;;;;;;;;;;;;"}