{"version":3,"file":"collapse.directive.d.ts","sources":["collapse.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AnimationBuilder } from '@angular/animations';\r\nimport { AfterViewChecked, ElementRef, EventEmitter, Renderer2 } from '@angular/core';\r\nexport declare class CollapseDirective implements AfterViewChecked {\r\n    private _el;\r\n    private _renderer;\r\n    /** This event fires as soon as content collapses */\r\n    collapsed: EventEmitter<CollapseDirective>;\r\n    /** This event fires when collapsing is started */\r\n    collapses: EventEmitter<CollapseDirective>;\r\n    /** This event fires as soon as content becomes visible */\r\n    expanded: EventEmitter<CollapseDirective>;\r\n    /** This event fires when expansion is started */\r\n    expands: EventEmitter<CollapseDirective>;\r\n    isExpanded: boolean;\r\n    collapseNewValue: boolean;\r\n    isCollapsed: boolean;\r\n    isCollapse: boolean;\r\n    isCollapsing: boolean;\r\n    display: string;\r\n    /** turn on/off animation */\r\n    isAnimated: boolean;\r\n    /** A flag indicating visibility of content (shown or hidden) */\r\n    collapse: boolean;\r\n    private _display;\r\n    private _factoryCollapseAnimation;\r\n    private _factoryExpandAnimation;\r\n    private _isAnimationDone;\r\n    private _player;\r\n    private _stylesLoaded;\r\n    private _COLLAPSE_ACTION_NAME;\r\n    private _EXPAND_ACTION_NAME;\r\n    constructor(_el: ElementRef, _renderer: Renderer2, _builder: AnimationBuilder);\r\n    ngAfterViewChecked(): void;\r\n    /** allows to manually toggle content visibility */\r\n    toggle(): void;\r\n    /** allows to manually hide content */\r\n    hide(): void;\r\n    /** allows to manually show collapsed content */\r\n    show(): void;\r\n    animationRun(isAnimated: boolean, action: string): (callback: () => void) => void;\r\n}\r\n"]}